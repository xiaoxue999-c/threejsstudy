{"id":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","dependencies":[{"name":"C:\\Users\\ADMINWWQ\\Desktop\\threejs\\01-three_basic\\package.json","includedInParent":true,"mtime":1713938217714},{"name":"C:\\Users\\ADMINWWQ\\Desktop\\threejs\\01-three_basic\\node_modules\\three\\package.json","includedInParent":true,"mtime":1713854592536}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WaterRefractionShader = void 0;\nvar WaterRefractionShader = exports.WaterRefractionShader = {\n  name: 'WaterRefractionShader',\n  uniforms: {\n    'color': {\n      value: null\n    },\n    'time': {\n      value: 0\n    },\n    'tDiffuse': {\n      value: null\n    },\n    'tDudv': {\n      value: null\n    },\n    'textureMatrix': {\n      value: null\n    }\n  },\n  vertexShader: /* glsl */\"\\n\\n\\t\\tuniform mat4 textureMatrix;\\n\\n\\t\\tvarying vec2 vUv;\\n\\t\\tvarying vec4 vUvRefraction;\\n\\n\\t\\tvoid main() {\\n\\n\\t\\t\\tvUv = uv;\\n\\n\\t\\t\\tvUvRefraction = textureMatrix * vec4( position, 1.0 );\\n\\n\\t\\t\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\n\\t\\t}\",\n  fragmentShader: /* glsl */\"\\n\\n\\t\\tuniform vec3 color;\\n\\t\\tuniform float time;\\n\\t\\tuniform sampler2D tDiffuse;\\n\\t\\tuniform sampler2D tDudv;\\n\\n\\t\\tvarying vec2 vUv;\\n\\t\\tvarying vec4 vUvRefraction;\\n\\n\\t\\tfloat blendOverlay( float base, float blend ) {\\n\\n\\t\\t\\treturn( base < 0.5 ? ( 2.0 * base * blend ) : ( 1.0 - 2.0 * ( 1.0 - base ) * ( 1.0 - blend ) ) );\\n\\n\\t\\t}\\n\\n\\t\\tvec3 blendOverlay( vec3 base, vec3 blend ) {\\n\\n\\t\\t\\treturn vec3( blendOverlay( base.r, blend.r ), blendOverlay( base.g, blend.g ),blendOverlay( base.b, blend.b ) );\\n\\n\\t\\t}\\n\\n\\t\\tvoid main() {\\n\\n\\t\\t float waveStrength = 0.5;\\n\\t\\t float waveSpeed = 0.03;\\n\\n\\t\\t\\t// simple distortion (ripple) via dudv map (see https://www.youtube.com/watch?v=6B7IF6GOu7s)\\n\\n\\t\\t\\tvec2 distortedUv = texture2D( tDudv, vec2( vUv.x + time * waveSpeed, vUv.y ) ).rg * waveStrength;\\n\\t\\t\\tdistortedUv = vUv.xy + vec2( distortedUv.x, distortedUv.y + time * waveSpeed );\\n\\t\\t\\tvec2 distortion = ( texture2D( tDudv, distortedUv ).rg * 2.0 - 1.0 ) * waveStrength;\\n\\n\\t\\t\\t// new uv coords\\n\\n\\t\\t\\tvec4 uv = vec4( vUvRefraction );\\n\\t\\t\\tuv.xy += distortion;\\n\\n\\t\\t\\tvec4 base = texture2DProj( tDiffuse, uv );\\n\\n\\t\\t\\tgl_FragColor = vec4( blendOverlay( base.rgb, color ), 1.0 );\\n\\n\\t\\t\\t#include <tonemapping_fragment>\\n\\t\\t\\t#include <colorspace_fragment>\\n\\n\\t\\t}\"\n};"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":1,"column":0}},{"generated":{"line":7,"column":4},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":1,"column":6},"name":"WaterRefractionShader"},{"generated":{"line":7,"column":25},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":1,"column":27}},{"generated":{"line":7,"column":28},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":1,"column":27},"name":"exports"},{"generated":{"line":7,"column":35},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":1,"column":27}},{"generated":{"line":7,"column":36},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":1,"column":27},"name":"WaterRefractionShader"},{"generated":{"line":7,"column":57},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":1,"column":27}},{"generated":{"line":7,"column":60},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":1,"column":30}},{"generated":{"line":8,"column":2},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":3,"column":1},"name":"name"},{"generated":{"line":8,"column":6},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":3,"column":5}},{"generated":{"line":8,"column":8},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":3,"column":7}},{"generated":{"line":8,"column":31},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":3,"column":30}},{"generated":{"line":9,"column":2},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":5,"column":1},"name":"uniforms"},{"generated":{"line":9,"column":10},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":5,"column":9}},{"generated":{"line":9,"column":12},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":5,"column":11}},{"generated":{"line":10,"column":4},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":7,"column":2}},{"generated":{"line":10,"column":11},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":7,"column":9}},{"generated":{"line":10,"column":13},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":7,"column":11}},{"generated":{"line":11,"column":6},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":8,"column":3},"name":"value"},{"generated":{"line":11,"column":11},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":8,"column":8}},{"generated":{"line":11,"column":13},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":8,"column":10}},{"generated":{"line":12,"column":4},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":9,"column":2}},{"generated":{"line":12,"column":5},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":9,"column":3}},{"generated":{"line":13,"column":4},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":11,"column":2}},{"generated":{"line":13,"column":10},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":11,"column":8}},{"generated":{"line":13,"column":12},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":11,"column":10}},{"generated":{"line":14,"column":6},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":12,"column":3},"name":"value"},{"generated":{"line":14,"column":11},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":12,"column":8}},{"generated":{"line":14,"column":13},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":12,"column":10}},{"generated":{"line":15,"column":4},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":13,"column":2}},{"generated":{"line":15,"column":5},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":13,"column":3}},{"generated":{"line":16,"column":4},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":15,"column":2}},{"generated":{"line":16,"column":14},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":15,"column":12}},{"generated":{"line":16,"column":16},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":15,"column":14}},{"generated":{"line":17,"column":6},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":16,"column":3},"name":"value"},{"generated":{"line":17,"column":11},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":16,"column":8}},{"generated":{"line":17,"column":13},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":16,"column":10}},{"generated":{"line":18,"column":4},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":17,"column":2}},{"generated":{"line":18,"column":5},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":17,"column":3}},{"generated":{"line":19,"column":4},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":19,"column":2}},{"generated":{"line":19,"column":11},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":19,"column":9}},{"generated":{"line":19,"column":13},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":19,"column":11}},{"generated":{"line":20,"column":6},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":20,"column":3},"name":"value"},{"generated":{"line":20,"column":11},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":20,"column":8}},{"generated":{"line":20,"column":13},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":20,"column":10}},{"generated":{"line":21,"column":4},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":21,"column":2}},{"generated":{"line":21,"column":5},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":21,"column":3}},{"generated":{"line":22,"column":4},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":23,"column":2}},{"generated":{"line":22,"column":19},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":23,"column":17}},{"generated":{"line":22,"column":21},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":23,"column":19}},{"generated":{"line":23,"column":6},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":24,"column":3},"name":"value"},{"generated":{"line":23,"column":11},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":24,"column":8}},{"generated":{"line":23,"column":13},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":24,"column":10}},{"generated":{"line":24,"column":4},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":25,"column":2}},{"generated":{"line":25,"column":2},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":27,"column":1}},{"generated":{"line":25,"column":3},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":27,"column":2}},{"generated":{"line":26,"column":2},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":29,"column":1},"name":"vertexShader"},{"generated":{"line":26,"column":14},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":29,"column":13}},{"generated":{"line":26,"column":16},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":29,"column":15}},{"generated":{"line":26,"column":317},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":44,"column":4}},{"generated":{"line":27,"column":2},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":46,"column":1},"name":"fragmentShader"},{"generated":{"line":27,"column":16},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":46,"column":15}},{"generated":{"line":27,"column":18},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":46,"column":17}},{"generated":{"line":28,"column":0},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":93,"column":0}},{"generated":{"line":28,"column":1},"source":"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js","original":{"line":93,"column":1}}],"sources":{"../node_modules/three/examples/jsm/shaders/WaterRefractionShader.js":"const WaterRefractionShader = {\n\n\tname: 'WaterRefractionShader',\n\n\tuniforms: {\n\n\t\t'color': {\n\t\t\tvalue: null\n\t\t},\n\n\t\t'time': {\n\t\t\tvalue: 0\n\t\t},\n\n\t\t'tDiffuse': {\n\t\t\tvalue: null\n\t\t},\n\n\t\t'tDudv': {\n\t\t\tvalue: null\n\t\t},\n\n\t\t'textureMatrix': {\n\t\t\tvalue: null\n\t\t}\n\n\t},\n\n\tvertexShader: /* glsl */`\n\n\t\tuniform mat4 textureMatrix;\n\n\t\tvarying vec2 vUv;\n\t\tvarying vec4 vUvRefraction;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\n\t\t\tvUvRefraction = textureMatrix * vec4( position, 1.0 );\n\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}`,\n\n\tfragmentShader: /* glsl */`\n\n\t\tuniform vec3 color;\n\t\tuniform float time;\n\t\tuniform sampler2D tDiffuse;\n\t\tuniform sampler2D tDudv;\n\n\t\tvarying vec2 vUv;\n\t\tvarying vec4 vUvRefraction;\n\n\t\tfloat blendOverlay( float base, float blend ) {\n\n\t\t\treturn( base < 0.5 ? ( 2.0 * base * blend ) : ( 1.0 - 2.0 * ( 1.0 - base ) * ( 1.0 - blend ) ) );\n\n\t\t}\n\n\t\tvec3 blendOverlay( vec3 base, vec3 blend ) {\n\n\t\t\treturn vec3( blendOverlay( base.r, blend.r ), blendOverlay( base.g, blend.g ),blendOverlay( base.b, blend.b ) );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t float waveStrength = 0.5;\n\t\t float waveSpeed = 0.03;\n\n\t\t\t// simple distortion (ripple) via dudv map (see https://www.youtube.com/watch?v=6B7IF6GOu7s)\n\n\t\t\tvec2 distortedUv = texture2D( tDudv, vec2( vUv.x + time * waveSpeed, vUv.y ) ).rg * waveStrength;\n\t\t\tdistortedUv = vUv.xy + vec2( distortedUv.x, distortedUv.y + time * waveSpeed );\n\t\t\tvec2 distortion = ( texture2D( tDudv, distortedUv ).rg * 2.0 - 1.0 ) * waveStrength;\n\n\t\t\t// new uv coords\n\n\t\t\tvec4 uv = vec4( vUvRefraction );\n\t\t\tuv.xy += distortion;\n\n\t\t\tvec4 base = texture2DProj( tDiffuse, uv );\n\n\t\t\tgl_FragColor = vec4( blendOverlay( base.rgb, color ), 1.0 );\n\n\t\t\t#include <tonemapping_fragment>\n\t\t\t#include <colorspace_fragment>\n\n\t\t}`\n\n};\n\nexport { WaterRefractionShader };\n"},"lineCount":null}},"error":null,"hash":"9682261f0f430bf6edf7b817b92f74c5","cacheData":{"env":{}}}
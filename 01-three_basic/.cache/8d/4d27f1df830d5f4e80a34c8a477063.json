{"id":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","dependencies":[{"name":"C:\\Users\\ADMINWWQ\\Desktop\\threejs\\01-three_basic\\package.json","includedInParent":true,"mtime":1713938217714},{"name":"C:\\Users\\ADMINWWQ\\Desktop\\threejs\\01-three_basic\\node_modules\\three\\package.json","includedInParent":true,"mtime":1713854592536}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HueSaturationShader = void 0;\n/**\n * Hue and saturation adjustment\n * https://github.com/evanw/glfx.js\n * hue: -1 to 1 (-1 is 180 degrees in the negative direction, 0 is no change, etc.\n * saturation: -1 to 1 (-1 is solid gray, 0 is no change, and 1 is maximum contrast)\n */\n\nvar HueSaturationShader = exports.HueSaturationShader = {\n  name: 'HueSaturationShader',\n  uniforms: {\n    'tDiffuse': {\n      value: null\n    },\n    'hue': {\n      value: 0\n    },\n    'saturation': {\n      value: 0\n    }\n  },\n  vertexShader: /* glsl */\"\\n\\n\\t\\tvarying vec2 vUv;\\n\\n\\t\\tvoid main() {\\n\\n\\t\\t\\tvUv = uv;\\n\\n\\t\\t\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\n\\t\\t}\",\n  fragmentShader: /* glsl */\"\\n\\n\\t\\tuniform sampler2D tDiffuse;\\n\\t\\tuniform float hue;\\n\\t\\tuniform float saturation;\\n\\n\\t\\tvarying vec2 vUv;\\n\\n\\t\\tvoid main() {\\n\\n\\t\\t\\tgl_FragColor = texture2D( tDiffuse, vUv );\\n\\n\\t\\t\\t// hue\\n\\t\\t\\tfloat angle = hue * 3.14159265;\\n\\t\\t\\tfloat s = sin(angle), c = cos(angle);\\n\\t\\t\\tvec3 weights = (vec3(2.0 * c, -sqrt(3.0) * s - c, sqrt(3.0) * s - c) + 1.0) / 3.0;\\n\\t\\t\\tfloat len = length(gl_FragColor.rgb);\\n\\t\\t\\tgl_FragColor.rgb = vec3(\\n\\t\\t\\t\\tdot(gl_FragColor.rgb, weights.xyz),\\n\\t\\t\\t\\tdot(gl_FragColor.rgb, weights.zxy),\\n\\t\\t\\t\\tdot(gl_FragColor.rgb, weights.yzx)\\n\\t\\t\\t);\\n\\n\\t\\t\\t// saturation\\n\\t\\t\\tfloat average = (gl_FragColor.r + gl_FragColor.g + gl_FragColor.b) / 3.0;\\n\\t\\t\\tif (saturation > 0.0) {\\n\\t\\t\\t\\tgl_FragColor.rgb += (average - gl_FragColor.rgb) * (1.0 - 1.0 / (1.001 - saturation));\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tgl_FragColor.rgb += (average - gl_FragColor.rgb) * (-saturation);\\n\\t\\t\\t}\\n\\n\\t\\t}\"\n};"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":2,"column":0}},{"generated":{"line":9,"column":0},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":4,"column":0}},{"generated":{"line":11,"column":0},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":5,"column":0}},{"generated":{"line":12,"column":0},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":6,"column":0}},{"generated":{"line":14,"column":0},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":8,"column":0}},{"generated":{"line":14,"column":4},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":8,"column":6},"name":"HueSaturationShader"},{"generated":{"line":14,"column":23},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":8,"column":25}},{"generated":{"line":14,"column":26},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":8,"column":25},"name":"exports"},{"generated":{"line":14,"column":33},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":8,"column":25}},{"generated":{"line":14,"column":34},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":8,"column":25},"name":"HueSaturationShader"},{"generated":{"line":14,"column":53},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":8,"column":25}},{"generated":{"line":14,"column":56},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":8,"column":28}},{"generated":{"line":15,"column":2},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":10,"column":1},"name":"name"},{"generated":{"line":15,"column":6},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":10,"column":5}},{"generated":{"line":15,"column":8},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":10,"column":7}},{"generated":{"line":15,"column":29},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":10,"column":28}},{"generated":{"line":16,"column":2},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":12,"column":1},"name":"uniforms"},{"generated":{"line":16,"column":10},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":12,"column":9}},{"generated":{"line":16,"column":12},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":12,"column":11}},{"generated":{"line":17,"column":4},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":14,"column":2}},{"generated":{"line":17,"column":14},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":14,"column":12}},{"generated":{"line":17,"column":16},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":14,"column":14}},{"generated":{"line":18,"column":6},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":14,"column":16},"name":"value"},{"generated":{"line":18,"column":11},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":14,"column":21}},{"generated":{"line":18,"column":13},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":14,"column":23}},{"generated":{"line":19,"column":4},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":14,"column":28}},{"generated":{"line":19,"column":5},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":14,"column":29}},{"generated":{"line":20,"column":4},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":15,"column":2}},{"generated":{"line":20,"column":9},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":15,"column":7}},{"generated":{"line":20,"column":11},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":15,"column":9}},{"generated":{"line":21,"column":6},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":15,"column":11},"name":"value"},{"generated":{"line":21,"column":11},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":15,"column":16}},{"generated":{"line":21,"column":13},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":15,"column":18}},{"generated":{"line":22,"column":4},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":15,"column":20}},{"generated":{"line":22,"column":5},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":15,"column":21}},{"generated":{"line":23,"column":4},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":16,"column":2}},{"generated":{"line":23,"column":16},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":16,"column":14}},{"generated":{"line":23,"column":18},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":16,"column":16}},{"generated":{"line":24,"column":6},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":16,"column":18},"name":"value"},{"generated":{"line":24,"column":11},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":16,"column":23}},{"generated":{"line":24,"column":13},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":16,"column":25}},{"generated":{"line":25,"column":4},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":16,"column":27}},{"generated":{"line":26,"column":2},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":18,"column":1}},{"generated":{"line":26,"column":3},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":18,"column":2}},{"generated":{"line":27,"column":2},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":20,"column":1},"name":"vertexShader"},{"generated":{"line":27,"column":14},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":20,"column":13}},{"generated":{"line":27,"column":16},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":20,"column":15}},{"generated":{"line":27,"column":185},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":30,"column":4}},{"generated":{"line":28,"column":2},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":32,"column":1},"name":"fragmentShader"},{"generated":{"line":28,"column":16},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":32,"column":15}},{"generated":{"line":28,"column":18},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":32,"column":17}},{"generated":{"line":29,"column":0},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":65,"column":0}},{"generated":{"line":29,"column":1},"source":"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js","original":{"line":65,"column":1}}],"sources":{"../node_modules/three/examples/jsm/shaders/HueSaturationShader.js":"/**\n * Hue and saturation adjustment\n * https://github.com/evanw/glfx.js\n * hue: -1 to 1 (-1 is 180 degrees in the negative direction, 0 is no change, etc.\n * saturation: -1 to 1 (-1 is solid gray, 0 is no change, and 1 is maximum contrast)\n */\n\nconst HueSaturationShader = {\n\n\tname: 'HueSaturationShader',\n\n\tuniforms: {\n\n\t\t'tDiffuse': { value: null },\n\t\t'hue': { value: 0 },\n\t\t'saturation': { value: 0 }\n\n\t},\n\n\tvertexShader: /* glsl */`\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}`,\n\n\tfragmentShader: /* glsl */`\n\n\t\tuniform sampler2D tDiffuse;\n\t\tuniform float hue;\n\t\tuniform float saturation;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tgl_FragColor = texture2D( tDiffuse, vUv );\n\n\t\t\t// hue\n\t\t\tfloat angle = hue * 3.14159265;\n\t\t\tfloat s = sin(angle), c = cos(angle);\n\t\t\tvec3 weights = (vec3(2.0 * c, -sqrt(3.0) * s - c, sqrt(3.0) * s - c) + 1.0) / 3.0;\n\t\t\tfloat len = length(gl_FragColor.rgb);\n\t\t\tgl_FragColor.rgb = vec3(\n\t\t\t\tdot(gl_FragColor.rgb, weights.xyz),\n\t\t\t\tdot(gl_FragColor.rgb, weights.zxy),\n\t\t\t\tdot(gl_FragColor.rgb, weights.yzx)\n\t\t\t);\n\n\t\t\t// saturation\n\t\t\tfloat average = (gl_FragColor.r + gl_FragColor.g + gl_FragColor.b) / 3.0;\n\t\t\tif (saturation > 0.0) {\n\t\t\t\tgl_FragColor.rgb += (average - gl_FragColor.rgb) * (1.0 - 1.0 / (1.001 - saturation));\n\t\t\t} else {\n\t\t\t\tgl_FragColor.rgb += (average - gl_FragColor.rgb) * (-saturation);\n\t\t\t}\n\n\t\t}`\n\n};\n\nexport { HueSaturationShader };\n"},"lineCount":null}},"error":null,"hash":"00555c0a30ec178f3dc7295f52e5e1a5","cacheData":{"env":{}}}
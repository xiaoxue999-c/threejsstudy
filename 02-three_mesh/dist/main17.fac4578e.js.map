{"version":3,"sources":["../node_modules/three/build/three.module.js","../node_modules/three/examples/jsm/controls/OrbitControls.js","../src/dat/color/toString.js","../src/dat/utils/common.js","../src/dat/color/interpret.js","../src/dat/color/math.js","../src/dat/color/Color.js","../src/dat/controllers/Controller.js","../src/dat/dom/dom.js","../src/dat/controllers/BooleanController.js","../src/dat/controllers/OptionController.js","../src/dat/controllers/StringController.js","../src/dat/controllers/NumberController.js","../src/dat/controllers/NumberControllerBox.js","../src/dat/controllers/NumberControllerSlider.js","../src/dat/controllers/FunctionController.js","../src/dat/controllers/ColorController.js","../src/dat/utils/css.js","../src/dat/gui/saveDialogue.html.js","../src/dat/controllers/ControllerFactory.js","../src/dat/utils/requestAnimationFrame.js","../src/dat/dom/CenteredDiv.js","../src/dat/gui/GUI.js","../src/dat/index.js","assets/js/main17.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","key","_createClass","protoProps","staticProps","_toPrimitive","toPrimitive","String","Number","REVISION","exports","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","ConstantColorFactor","OneMinusConstantColorFactor","ConstantAlphaFactor","OneMinusConstantAlphaFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","AgXToneMapping","NeutralToneMapping","AttachedBindMode","DetachedBindMode","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","UnsignedInt5999Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","RGB_BPTC_SIGNED_Format","RGB_BPTC_UNSIGNED_Format","RED_RGTC1_Format","SIGNED_RED_RGTC1_Format","RED_GREEN_RGTC2_Format","SIGNED_RED_GREEN_RGTC2_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","NoColorSpace","SRGBColorSpace","LinearSRGBColorSpace","DisplayP3ColorSpace","LinearDisplayP3ColorSpace","LinearTransfer","SRGBTransfer","Rec709Primaries","P3Primaries","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","NeverCompare","LessCompare","EqualCompare","LessEqualCompare","GreaterCompare","NotEqualCompare","GreaterEqualCompare","AlwaysCompare","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","WebGLCoordinateSystem","WebGPUCoordinateSystem","EventDispatcher","addEventListener","listener","_listeners","undefined","listeners","indexOf","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","array","_lut","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toLowerCase","clamp","min","max","euclideanModulo","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","lerp","damp","lambda","dt","exp","pingpong","arguments","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","imul","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","b","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","denormalize","Float32Array","Uint32Array","Uint16Array","Uint8Array","Int32Array","Int16Array","Int8Array","normalize","round","MathUtils","Vector2","isVector2","get","setScalar","scalar","setX","setY","setComponent","getComponent","clone","copy","add","addScalar","addVectors","addScaledVector","sub","subScalar","subVectors","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","elements","clampScalar","minVal","maxVal","clampLength","roundToZero","trunc","negate","dot","cross","lengthSq","sqrt","manhattanLength","angle","atan2","angleTo","denominator","theta","acos","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","value$","_context2","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","isMatrix3","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","_m3","makeScale","rotate","makeRotation","translate","makeTranslation","matrix","arrayNeedsUint32","TYPED_ARRAYS","Uint8ClampedArray","Float64Array","getTypedArray","buffer","createElementNS","document","createCanvasElement","canvas","style","display","_cache","warnOnce","message","LINEAR_SRGB_TO_LINEAR_DISPLAY_P3","LINEAR_DISPLAY_P3_TO_LINEAR_SRGB","COLOR_SPACES","_defineProperty","transfer","primaries","toReference","color","fromReference","convertSRGBToLinear","convertLinearToSRGB","SUPPORTED_WORKING_COLOR_SPACES","Set","ColorManagement","enabled","_workingColorSpace","workingColorSpace","colorSpace","has","concat","convert","sourceColorSpace","targetColorSpace","sourceToReference","targetFromReference","fromWorkingColorSpace","toWorkingColorSpace","getPrimaries","getTransfer","SRGBToLinear","LinearToSRGB","_canvas","ImageUtils","getDataURL","image","test","src","HTMLCanvasElement","width","height","context","getContext","ImageData","putImageData","drawImage","toDataURL","sRGBToLinear","HTMLImageElement","ImageBitmap","imageData","getImageData","data","_sourceId","Source","isSource","dataReady","version","toJSON","meta","isRootObject","images","output","url","Array","isArray","isDataTexture","serializeImage","from","_textureId","Texture","_EventDispatcher","_this2","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","DEFAULT_ANISOTROPY","_callSuper","isTexture","source","mipmaps","channel","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","isRenderTargetTexture","pmremVersion","_inherits","updateMatrix","JSON","parse","stringify","needsUpdate","textures","metadata","generator","dispose","transformUv","uv","Vector4","z","w","isVector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getZ","getW","_context3","RenderTarget","_EventDispatcher2","_this3","options","isRenderTarget","depth","scissor","scissorTest","viewport","assign","depthBuffer","stencilBuffer","depthTexture","samples","count","texture","setSize","il","WebGLRenderTarget","_RenderTarget","_this4","isWebGLRenderTarget","DataArrayTexture","_Texture","_this5","isDataArrayTexture","wrapR","WebGLArrayRenderTarget","_WebGLRenderTarget","_this6","isWebGLArrayRenderTarget","Data3DTexture","_Texture2","_this7","isData3DTexture","WebGL3DRenderTarget","_WebGLRenderTarget2","_this8","isWebGL3DRenderTarget","Quaternion","isQuaternion","_x","_y","_z","_w","_onChangeCallback","quaternion","setFromEuler","euler","update","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","EPSILON","rotateTowards","step","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","slerpQuaternions","qa","theta1","theta2","x0","r1","r2","_onChange","callback","_context4","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","multiplyQuaternionsFlat","Vector3","isVector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","vx","vy","vz","qx","qy","qz","qw","tz","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","_vector$c","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","setFromMatrixColumn","sz","setFromColor","randomDirection","_context5","Box3","Infinity","isBox3","setFromArray","makeEmpty","expandByPoint","_vector$b","setFromBufferAttribute","setFromPoints","points","setFromCenterAndSize","size","halfSize","setFromObject","object","precise","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","geometry","positionAttribute","getAttribute","isInstancedMesh","isMesh","getVertexPosition","boundingBox","computeBoundingBox","_box$4","union","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$4","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","getBoundingSphere","intersect","_points","_testAxis","v0","extents","j","p0","p1","p2","_box$3","_v1$6","_v2$3","Sphere","isSphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","delta","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","QdN","Matrix4","n14","n24","n34","n41","n42","n43","n44","isMatrix4","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeShear","yx","zx","zy","position","x2","y2","z2","wx","wy","wz","decompose","_m1$4","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","coordinateSystem","makeOrthographic","zInv","_matrix$2","_quaternion$3","Euler","DEFAULT_ORDER","isEuler","asin","setFromQuaternion","setFromVector3","reorder","newOrder","_context6","Layers","mask","enable","enableAll","toggle","disable","disableAll","layers","isEnabled","_object3DId","_v1$4","_q1","_m1$3","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","_childaddedEvent","child","_childremovedEvent","Object3D","_EventDispatcher3","_this9","isObject3D","parent","DEFAULT_UP","onRotationChange","onQuaternionChange","defineProperties","modelViewMatrix","normalMatrix","DEFAULT_MATRIX_AUTO_UPDATE","matrixWorldAutoUpdate","DEFAULT_MATRIX_WORLD_AUTO_UPDATE","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","onBeforeShadow","onAfterShadow","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","error","removeFromParent","remove","clear","apply","_toConsumableArray","attach","getObjectById","id","getObjectByProperty","getObjectByName","getObjectsByProperty","result","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","instanceMatrix","instanceColor","isBatchedMesh","perObjectFrustumCulled","sortObjects","drawRanges","_drawRanges","reservedRanges","_reservedRanges","visibility","_visibility","active","_active","bounds","_bounds","map","bound","boxInitialized","boxMin","boxMax","sphereInitialized","sphereRadius","sphereCenter","maxGeometryCount","_maxGeometryCount","maxVertexCount","_maxVertexCount","maxIndexCount","_maxIndexCount","geometryInitialized","_geometryInitialized","geometryCount","_geometryCount","matricesTexture","_matricesTexture","boundingSphere","serialize","library","element","isScene","background","isColor","environment","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","recursive","_v0$1","_v1$3","_v2$2","_v3$2","_vab","_vac","_vbc","_vap","_vbp","_vcp","Triangle","setFromPointsAndIndices","i0","i1","i2","setFromAttributeAndIndices","getArea","getMidpoint","getNormal","getPlane","setFromCoplanarPoints","getBarycoord","getInterpolation","v3","isFrontFacing","d4","vc","d5","d6","vb","va","denom","targetLengthSq","dot00","dot01","dot02","dot11","dot12","invDenom","p3","_colorKeywords","_hslA","_hslB","hue2rgb","Color","setHex","setStyle","setRGB","hex","setHSL","handleAlpha","string","parseFloat","exec","components","parseInt","setColorName","copySRGBToLinear","copyLinearToSRGB","getHex","_color","getHexString","toString","getHSL","hue","saturation","lightness","getRGB","getStyle","toFixed","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","_context7","NAMES","_materialId","Material","_EventDispatcher4","_this10","isMaterial","blending","side","vertexColors","opacity","transparent","alphaHash","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","blendColor","blendAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","forceSinglePass","toneMapped","_alphaTest","onBuild","onBeforeCompile","customProgramCacheKey","setValues","newValue","currentValue","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","anisotropyRotation","anisotropyMap","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapRotation","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","alphaTest","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","flatShading","fog","srcPlanes","dstPlanes","MeshBasicMaterial","_Material","_this11","isMeshBasicMaterial","_get","_getPrototypeOf","_tables","_generateTables","ArrayBuffer","floatView","uint32View","baseTable","shiftTable","mantissaTable","exponentTable","offsetTable","toHalfFloat","val","fromHalfFloat","DataUtils","_vector$9","_vector2$1","BufferAttribute","itemSize","normalized","isBufferAttribute","usage","_updateRange","updateRanges","gpuType","onUploadCallback","setUsage","addUpdateRange","start","clearUpdateRanges","copyAt","index1","index2","copyArray","setXY","setXYZ","component","setXYZW","onUpload","Int8BufferAttribute","_BufferAttribute","Uint8BufferAttribute","_BufferAttribute2","Uint8ClampedBufferAttribute","_BufferAttribute3","Int16BufferAttribute","_BufferAttribute4","Uint16BufferAttribute","_BufferAttribute5","Int32BufferAttribute","_BufferAttribute6","Uint32BufferAttribute","_BufferAttribute7","Float16BufferAttribute","_BufferAttribute8","_this12","isFloat16BufferAttribute","Float32BufferAttribute","_BufferAttribute9","_id$2","_m1$2","_obj","_offset","_box$2","_boxMorphTargets","_vector$8","BufferGeometry","_EventDispatcher5","_this13","isBufferGeometry","attributes","morphAttributes","morphTargetsRelative","groups","drawRange","getIndex","setIndex","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","jl","computeTangents","normalAttribute","uvAttribute","tangentAttribute","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","normals","toNonIndexed","convertBufferAttribute","indices","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","hasMorphAttributes","attributeArray","_inverseMatrix$3","_ray$3","_sphere$6","_sphereHitAt","_vA$1","_vB$1","_vC$1","_tempA","_morphA","_uvA$1","_uvB$1","_uvC$1","_normalA","_normalB","_normalC","_intersectionPoint","_intersectionPointWorld","Mesh","_Object3D","_this14","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","morphPosition","morphInfluences","influence","raycaster","intersects","_computeIntersections","rayLocalSpace","intersection","uv1","groupMaterial","end","checkGeometryIntersection","faceIndex","face","checkIntersection","BoxGeometry","_BufferGeometry","_this15","widthSegments","heightSegments","depthSegments","scope","vertices","uvs","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","iy","ix","fromJSON","cloneUniforms","property","mergeUniforms","uniforms","merged","cloneUniformsGroups","getUnlitUniformColorSpace","renderer","currentRenderTarget","getRenderTarget","outputColorSpace","isXRRenderTarget","UniformsUtils","merge","default_vertex","default_fragment","ShaderMaterial","_Material2","_this16","isShaderMaterial","defines","uniformsGroups","vertexShader","fragmentShader","lights","clipping","extensions","clipCullDistance","multiDraw","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","Camera","_Object3D2","_this17","_v3$1","_minTarget","_maxTarget","PerspectiveCamera","_Camera","_this18","fov","aspect","isPerspectiveCamera","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","getViewBounds","minTarget","maxTarget","getViewSize","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","CubeCamera","_Object3D3","renderTarget","_this19","activeMipmapLevel","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","updateCoordinateSystem","cameras","_cameras","_slicedToArray","_iterator","_createForOfIteratorHelper","_step","err","_iterator2","_step2","scene","_this$children","currentActiveCubeFace","getActiveCubeFace","currentActiveMipmapLevel","getActiveMipmapLevel","currentXrEnabled","xr","setRenderTarget","render","needsPMREMUpdate","CubeTexture","_Texture3","_this20","isCubeTexture","WebGLCubeRenderTarget","_WebGLRenderTarget3","_this21","isWebGLCubeRenderTarget","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","_sphere$5","_vector$7","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","buffers","WeakMap","createBuffer","bufferType","byteLength","bindBuffer","bufferData","FLOAT","HALF_FLOAT","UNSIGNED_SHORT","SHORT","UNSIGNED_INT","INT","BYTE","UNSIGNED_BYTE","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","updateRange","bufferSubData","deleteBuffer","delete","cached","elementSize","PlaneGeometry","_BufferGeometry2","_this22","width_half","height_half","segment_width","segment_height","alphahash_fragment","alphahash_pars_fragment","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","batching_pars_vertex","batching_vertex","begin_vertex","beginnormal_vertex","bsdfs","iridescence_fragment","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","colorspace_fragment","colorspace_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_fragment","lights_lambert_pars_fragment","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphinstance_vertex","morphcolor_vertex","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","iridescence_pars_fragment","opaque_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","worldpos_vertex","vertex$h","fragment$h","vertex$g","fragment$g","vertex$f","fragment$f","vertex$e","fragment$e","vertex$d","fragment$d","vertex$c","fragment$c","vertex$b","fragment$b","vertex$a","fragment$a","vertex$9","fragment$9","vertex$8","fragment$8","vertex$7","fragment$7","vertex$6","fragment$6","vertex$5","fragment$5","vertex$4","fragment$4","vertex$3","fragment$3","vertex$2","fragment$2","vertex$1","fragment$1","ShaderChunk","background_vert","background_frag","backgroundCube_vert","backgroundCube_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","mapTransform","alphaMapTransform","specularmap","specularMapTransform","envmap","flipEnvMap","ior","aomap","aoMapTransform","lightmap","lightMapTransform","bumpmap","bumpMapTransform","normalmap","normalMapTransform","displacementmap","displacementMapTransform","emissivemap","emissiveMapTransform","metalnessmap","metalnessMapTransform","roughnessmap","roughnessMapTransform","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotLightMap","spotShadowMap","spotLightMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","uvTransform","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","backgroundIntensity","backgroundCube","backgroundBlurriness","backgroundRotation","cube","tCube","tFlip","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","physical","clearcoatMapTransform","clearcoatNormalMapTransform","clearcoatRoughnessMapTransform","iridescenceMapTransform","iridescenceThicknessMinimum","iridescenceThicknessMaximum","iridescenceThicknessMapTransform","sheenColorMap","sheenColorMapTransform","sheenRoughnessMap","sheenRoughnessMapTransform","transmissionMapTransform","transmissionSamplerSize","transmissionSamplerMap","thicknessMapTransform","specularColorMapTransform","specularIntensityMapTransform","anisotropyVector","anisotropyMapTransform","_rgb","_e1$1","_m1$1","WebGLBackground","cubemaps","cubeuvmaps","state","objects","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","renderList","forceClear","usePMREM","setClear","environmentBlendMode","getEnvironmentBlendMode","autoClear","autoClearColor","autoClearDepth","autoClearStencil","toneMapping","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","MAX_VERTEX_ATTRIBS","bindingStates","defaultState","createBindingState","currentState","forceUpdate","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","ELEMENT_ARRAY_BUFFER","setupVertexAttributes","createVertexArrayObject","createVertexArray","vao","bindVertexArray","deleteVertexArrayObject","deleteVertexArray","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","programAttributes","getAttributes","programAttribute","location","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","vertexAttribDivisor","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","integer","vertexAttribIPointer","materialDefaultAttributeValues","isInstancedInterleavedBuffer","locationSize","_maxInstanceCount","ARRAY_BUFFER","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","info","mode","setMode","drawArrays","renderInstances","primcount","drawArraysInstanced","renderMultiDraw","starts","counts","drawCount","extension","multiDrawArraysWEBGL","elementCount","WebGLCapabilities","maxAnisotropy","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","maxPrecision","logarithmicDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","maxSamples","MAX_SAMPLES","isWebGL2","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","init","enableLocalClipping","beginShadows","projectPlanes","endShadows","setGlobalState","setState","useCache","materialProperties","resetGlobalState","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","onTextureDispose","OrthographicCamera","_Camera2","_this23","isOrthographicCamera","scaleW","scaleH","LOD_MIN","EXTRA_LOD_SIGMA","_flatCamera","_clearColor","_oldTarget","_oldActiveCubeFace","_oldActiveMipmapLevel","_oldXrEnabled","PHI","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_lodMax","_cubeSize","_lodPlanes","_sizeLods","_sigmas","_blurMaterial","_cubemapMaterial","_equirectMaterial","_compileMaterial","fromScene","sigma","_setSize","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","compileCubemapShader","_getCubemapMaterial","compileEquirectangularShader","_getEquirectMaterial","_dispose","cubeSize","log2","outputTarget","_setViewport","_textureToCubeUV","params","_createRenderTarget","_createPlanes2","_createPlanes","sizeLods","lodPlanes","sigmas","_getBlurShader","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","backgroundMaterial","backgroundBox","useSolidColor","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","sum","weight","outputSize","lodMax","lod","totalLods","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","shaderMaterial","_getCommonVertexShader","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","isEquirectMap","isCubeMap","currentPMREMVersion","isCubeTextureComplete","cubemapUV","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","isInstancedBufferGeometry","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","drawElementsInstanced","multiDrawElementsWEBGL","WebGLInfo","calls","triangles","lines","instanceCount","TRIANGLES","LINES","LINE_STRIP","LINE_LOOP","POINTS","programs","autoReset","WebGLMorphtargets","capabilities","morphTextures","morph","objectInfluences","morphTargetsCount","entry","hasMorphPosition","hasMorphNormals","hasMorphColors","morphTargets","morphNormals","morphColors","vertexDataCount","vertexDataStride","morphTarget","morphNormal","morphColor","disposeTexture","morphTexture","getUniforms","setValue","morphInfluencesSum","morphBaseInfluence","WebGLObjects","updateMap","buffergeometry","onInstancedMeshDispose","instancedMesh","DepthTexture","_Texture4","_this24","isDepthTexture","compareFunction","emptyTexture","emptyShadowTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2i","uniform2iv","setValueV3i","uniform3i","uniform3iv","setValueV4i","uniform4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2ui","uniform2uiv","setValueV3ui","uniform3ui","uniform3uiv","setValueV4ui","uniform4ui","uniform4uiv","setValueT1","unit","emptyTexture2D","SAMPLER_2D_SHADOW","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","COMPLETION_STATUS_KHR","programIdCount","handleSource","errorLine","split","lines2","to","join","getEncodingComponents","workingPrimaries","encodingPrimaries","gamutMapping","getShaderErrors","status","getShaderParameter","COMPILE_STATUS","errors","getShaderInfoLog","trim","errorMatches","toUpperCase","getShaderSource","getTexelEncodingFunction","functionName","getToneMappingFunction","toneMappingName","generateVertexExtensions","chunks","extensionClipCullDistance","extensionMultiDraw","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","getAttribLocation","replaceLightNums","numSpotLightCoords","numSpotLightShadows","numSpotLightMaps","numSpotLightShadowsWithMaps","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","shaderChunkMap","Map","include","newInclude","unrollLoopPattern","unrollLoops","loopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","generateCubeUVSize","imageHeight","envMapCubeUVHeight","maxMip","texelHeight","texelWidth","WebGLProgram","cacheKey","envMapCubeUVSize","customVertexExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderType","shaderName","batching","instancing","instancingColor","instancingMorph","useFog","fogExp2","normalMapObjectSpace","normalMapTangentSpace","mapUv","alphaMapUv","lightMapUv","aoMapUv","emissiveMapUv","bumpMapUv","normalMapUv","displacementMapUv","metalnessMapUv","roughnessMapUv","anisotropyMapUv","clearcoatMapUv","clearcoatNormalMapUv","clearcoatRoughnessMapUv","iridescenceMapUv","iridescenceThicknessMapUv","sheenColorMapUv","sheenRoughnessMapUv","specularMapUv","specularColorMapUv","specularIntensityMapUv","transmissionMapUv","thicknessMapUv","vertexTangents","vertexAlphas","vertexUv1s","vertexUv2s","vertexUv3s","pointsUvs","skinning","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","numLightProbes","useLegacyLights","decodeVideoTexture","opaque","useDepthPacking","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","onFirstUse","self","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","onShaderError","vertexErrors","fragmentErrors","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","programReady","rendererExtensionParallelShaderCompile","isReady","destroy","deleteProgram","usedTimes","_id$1","WebGLShaderCache","shaderCache","materialCache","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","_iterator3","_step3","shaderStage","code","getVertexShaderID","getFragmentShaderID","stage","WebGLShaderStage","WebGLPrograms","_programLayers","_customShaders","_activeChannels","SUPPORTS_VERTEX_TEXTURES","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","getChannel","getParameters","shadows","isMeshStandardMaterial","shaderID","customVertexShaderID","customFragmentShaderID","IS_INSTANCEDMESH","IS_BATCHEDMESH","HAS_MAP","HAS_MATCAP","HAS_ENVMAP","HAS_AOMAP","HAS_LIGHTMAP","HAS_BUMPMAP","HAS_NORMALMAP","HAS_DISPLACEMENTMAP","HAS_EMISSIVEMAP","HAS_METALNESSMAP","HAS_ROUGHNESSMAP","HAS_ANISOTROPY","HAS_CLEARCOAT","HAS_IRIDESCENCE","HAS_SHEEN","HAS_TRANSMISSION","HAS_ANISOTROPYMAP","HAS_CLEARCOATMAP","HAS_CLEARCOAT_NORMALMAP","HAS_CLEARCOAT_ROUGHNESSMAP","HAS_IRIDESCENCEMAP","HAS_IRIDESCENCE_THICKNESSMAP","HAS_SHEEN_COLORMAP","HAS_SHEEN_ROUGHNESSMAP","HAS_SPECULARMAP","HAS_SPECULAR_COLORMAP","HAS_SPECULAR_INTENSITYMAP","HAS_TRANSMISSIONMAP","HAS_THICKNESSMAP","HAS_GRADIENTMAP","HAS_ALPHAMAP","HAS_ALPHATEST","HAS_ALPHAHASH","HAS_EXTENSIONS","supportsVertexTextures","isFogExp2","directional","spot","rectArea","hemi","shadowMap","_useLegacyLights","isVideoTexture","getProgramCacheKey","getProgramCacheKeyParameters","getProgramCacheKeyBooleans","morphAttributeCount","acquireProgram","pl","preexistingProgram","releaseProgram","releaseShaderCache","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","transmissive","getNextRenderItem","renderItem","sort","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","renderCallDepth","listArray","list","UniformsCache","light","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingAndTexturingLightsFirst","lightA","lightB","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","numSpotMaps","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","numSpotShadowsWithMaps","scaleFactor","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","updateMatrices","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","transmissionRenderTarget","WebGLRenderStates","renderStates","renderStateArray","renderState","_Material3","_this25","isMeshDepthMaterial","_Material4","_this26","isMeshDistanceMaterial","vertex","fragment","WebGLShadowMap","_objects","_capabilities","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","autoUpdate","_previousType","activeCubeFace","_state","setBlending","setTest","setScissorTest","toVSM","fromVSM","shadowFrameExtents","getFrameExtents","pars","viewportCount","getViewportCount","vp","getViewport","getFrustum","renderObject","isPointLightShadow","VSMPass","blurSamples","mapPass","renderBufferDirect","getDepthMaterial","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","onMaterialDispose","shadowCamera","k","kl","depthMaterial","shadowMaterial","WebGLState","_factorToGL","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","DEPTH_TEST","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","uboBindings","uboProgramMap","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentBlendColor","currentBlendAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","scissorParam","SCISSOR_BOX","viewportParam","VIEWPORT","currentScissor","currentViewport","createTexture","dimensions","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_3D","TEXTURE_2D_ARRAY","texImage3D","RGBA","texImage2D","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CULL_FACE","bindFramebuffer","framebuffer","DRAW_FRAMEBUFFER","FRAMEBUFFER","drawBuffers","COLOR_ATTACHMENT0","BACK","useProgram","equationToGL","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","factorToGL","ZERO","ONE","SRC_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","DST_COLOR","DST_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","CONSTANT_COLOR","ONE_MINUS_CONSTANT_COLOR","CONSTANT_ALPHA","ONE_MINUS_CONSTANT_ALPHA","BLEND","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","SAMPLE_ALPHA_TO_COVERAGE","frontFace","CW","CCW","cullFace","FRONT","FRONT_AND_BACK","setLineWidth","lineWidth","factor","POLYGON_OFFSET_FILL","SCISSOR_TEST","activeTexture","webglSlot","TEXTURE0","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","compressedTexImage3D","texSubImage2D","texSubImage3D","compressedTexSubImage2D","compressedTexSubImage3D","texStorage2D","texStorage3D","updateUBOMapping","uniformsGroup","blockIndex","getUniformBlockIndex","uniformBlockBinding","__bindingPointIndex","KEEP","READ_FRAMEBUFFER","WebGLTextures","_gl","utils","multisampledRTTExt","supportsInvalidateFramebuffer","navigator","userAgent","_imageDimensions","_videoTextures","_sources","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsNewCanvas","maxSize","getDimensions","VideoFrame","textureNeedsGenerateMipmaps","generateMipmap","getInternalFormat","internalFormatName","glFormat","glType","forceLinearTransfer","RED","R32F","R16F","R8","RED_INTEGER","R8UI","R16UI","R32UI","R8I","R16I","R32I","RG","RG32F","RG16F","RG8","RG_INTEGER","RG8UI","RG16UI","RG32UI","RG8I","RG16I","RG32I","RGB","UNSIGNED_INT_5_9_9_9_REV","RGB9_E5","RGBA32F","RGBA16F","SRGB8_ALPHA8","RGBA8","UNSIGNED_SHORT_4_4_4_4","RGBA4","UNSIGNED_SHORT_5_5_5_1","RGB5_A1","getMipLevels","isFramebufferTexture","isCompressedTexture","deallocateTexture","onRenderTargetDispose","deallocateRenderTarget","textureProperties","__webglInit","webglTextures","__cacheKey","deleteTexture","__webglTexture","renderTargetProperties","__webglFramebuffer","level","deleteFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","getTextureCacheKey","slot","updateVideoTexture","__version","uploadTexture","uploadCubeTexture","wrappingToGL","REPEAT","CLAMP_TO_EDGE","MIRRORED_REPEAT","filterToGL","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","compareToGL","setTextureParameters","textureType","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","TEXTURE_COMPARE_MODE","COMPARE_REF_TO_TEXTURE","TEXTURE_COMPARE_FUNC","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","forceUpload","textureCacheKey","isCompressedArrayTexture","sourceProperties","texturePrimaries","unpackConversion","NONE","BROWSER_DEFAULT_WEBGL","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","UNPACK_COLORSPACE_CONVERSION_WEBGL","verifyColorSpace","glInternalFormat","mipmap","useTexStorage","allocateMemory","levels","DEPTH_COMPONENT16","DEPTH_COMPONENT32F","DEPTH_COMPONENT24","DEPTH24_STENCIL8","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","__hasExternalTextures","useMultisampledRTT","framebufferTexture2DMultisampleEXT","getRenderTargetSamples","TEXTURE_CUBE_MAP_NEGATIVE_Z","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","RENDERBUFFER","renderbufferStorageMultisampleEXT","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","__autoAllocateDepthBuffer","createRenderbuffer","rebindTextures","colorTexture","setupRenderTarget","isMultipleRenderTargets","createFramebuffer","glTextureType","updateRenderTargetMipmap","updateMultisampleRenderTarget","COLOR_BUFFER_BIT","invalidationArray","depthStyle","ignoreDepthValues","__ignoreDepthValues","DEPTH_BUFFER_BIT","__isTransmissionRenderTarget","STENCIL_BUFFER_BIT","invalidateFramebuffer","blitFramebuffer","__useRenderToTexture","naturalWidth","naturalHeight","displayWidth","displayHeight","WebGLUtils","ALPHA","LUMINANCE","LUMINANCE_ALPHA","DEPTH_COMPONENT","RGBA_INTEGER","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT","COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT","COMPRESSED_RED_RGTC1_EXT","COMPRESSED_SIGNED_RED_RGTC1_EXT","COMPRESSED_RED_GREEN_RGTC2_EXT","COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT","UNSIGNED_INT_24_8","ArrayCamera","_PerspectiveCamera","_this27","isArrayCamera","Group","_Object3D4","_this28","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","connect","inputSource","hand","_iterator4","_step4","inputjoint","_getHandJoint","disconnect","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","session","visibilityState","_iterator5","_step5","jointPose","getJointPose","joint","transform","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","getPose","targetRaySpace","jointName","_occlusion_vertex","_occlusion_fragment","WebXRDepthSensing","depthNear","depthFar","depthData","texProps","cameraXR","depthColor","depthWidth","depthHeight","WebXRManager","_EventDispatcher6","_this29","framebufferScaleFactor","referenceSpaceType","foveation","customReferenceSpace","pose","glBinding","glProjLayer","glBaseLayer","xrFrame","depthSensing","getContextAttributes","initialRenderTarget","newRenderTarget","controllers","controllerInputSources","currentSize","currentPixelRatio","cameraL","cameraR","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","controller","getControllerGrip","getHand","onSessionEvent","controllerIndex","onSessionEnd","onInputSourcesChange","setPixelRatio","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setReferenceSpace","space","getBaseLayer","getBinding","getFrame","getSession","setSession","_ref","_asyncToGenerator","_callee","layerInit","depthFormat","depthType","glDepthFormat","projectionlayerInit","_callee$","_context8","xrCompatible","makeXRCompatible","getPixelRatio","antialias","XRWebGLLayer","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","colorFormat","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","setFoveation","requestReferenceSpace","_x3","removed","added","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","updateCamera","updateUserCamera","getCamera","getFoveation","fixedFoveation","hasDepthSensing","onAnimationFrameCallback","getViewerPose","views","setRenderTargetFramebuffer","cameraXRNeedsUpdate","glSubImage","getViewSubImage","setRenderTargetTextures","depthStencilTexture","enabledFeatures","includes","getDepthInformation","isValid","detectedPlanes","_e1","_m1","WebGLMaterials","refreshTransformUniform","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","refreshUniformsCommon","isMeshLambertMaterial","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","refreshUniformsStandard","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDistance","isMeshNormalMaterial","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","WebGLUniformsGroups","updateList","allocatedBindingPoints","maxBindingPoints","MAX_UNIFORM_BUFFER_BINDINGS","bind","webglProgram","prepareUniformsGroup","onUniformsGroupsDispose","updateBufferData","bindingPointIndex","allocateBindingPointIndex","__size","UNIFORM_BUFFER","bindBufferBase","__cache","uniformArray","hasUniformChanged","__offset","arrayOffset","getUniformSize","__data","storage","indexArray","indexString","cachedObject","chunkSize","chunkOffsetUniform","boundary","chunkOffset","WebGLRenderer","_parameters$canvas","_parameters$context","_parameters$depth","_parameters$stencil","_parameters$alpha","_parameters$antialias","_parameters$premultip","_parameters$preserveD","preserveDrawingBuffer","_parameters$powerPref","powerPreference","_parameters$failIfMaj","failIfMajorPerformanceCaveat","isWebGLRenderer","_alpha","WebGLRenderingContext","uintClearColor","intClearColor","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","_outputColorSpace","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_currentClearColor","_currentClearAlpha","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","contextName","contextAttributes","onContextLost","onContextRestore","onContextCreationError","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","setTransparentSort","bits","isIntegerFormat","targetFormat","targetType","isUnsignedType","clearBufferuiv","COLOR","clearBufferiv","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","statusMessage","deallocateMaterial","releaseMaterialProgramReferences","setProgram","rangeFactor","drawStart","drawEnd","isLineSegments","isLineLoop","isSprite","_multiDrawStarts","_multiDrawCounts","_multiDrawCount","maxInstanceCount","prepareMaterial","getProgram","targetScene","material2","compileAsync","checkMaterialsReady","setTimeout","projectObject","camera2","renderScene","isLOD","opaqueObjects","transmissiveObjects","transparentObjects","renderTransmissionPass","renderObjects","currentToneMapping","renderTargetNeedsUpdate","currentSide","lightsStateVersion","programCacheKey","environmentRotation","updateCommonMaterialProperties","needsLights","materialNeedsLights","uniformsList","getUniformList","progUniforms","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","boneTexture","computeBoneTexture","isMeshGouraudMaterial","environmentIntensity","markUniformsLightsNeedsUpdate","defaultFramebuffer","__useDefaultFramebuffer","useDefaultFramebuffer","isRenderTarget3D","framebufferBound","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","halfFloatSupportedByExt","IMPLEMENTATION_COLOR_READ_TYPE","readPixels","copyFramebufferToTexture","levelScale","copyTexSubImage2D","copyTextureToTexture","srcTexture","dstTexture","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","UNPACK_ROW_LENGTH","unpackImageHeight","UNPACK_IMAGE_HEIGHT","unpackSkipPixels","UNPACK_SKIP_PIXELS","unpackSkipRows","UNPACK_SKIP_ROWS","unpackSkipImages","UNPACK_SKIP_IMAGES","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","drawingBufferColorSpace","unpackColorSpace","FogExp2","Fog","Scene","_Object3D5","_this30","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","_vector$6","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_Material5","_this31","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","_Object3D6","_this32","float32Array","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_Object3D7","_this33","_currentLevel","addLevel","hysteresis","getCurrentLevel","getObjectForDistance","levelDistance","_basePosition","_skinIndex","_skinWeight","_matrix4","_vertex","_sphere$4","_inverseMatrix$2","_ray$2","SkinnedMesh","_Mesh","_this34","bindMatrixInverse","applyBoneTransform","calculateInverses","normalizeSkinWeights","skinWeight","skinIndex","boneIndex","bones","boneInverses","Bone","_Object3D8","_this35","isBone","DataTexture","_Texture5","_this36","_offsetMatrix","_identityMatrix$1","Skeleton","boneMatrices","inverse","bone","getBoneByName","json","boneInverse","InstancedBufferAttribute","_BufferAttribute10","_this37","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_box3","_identity","_mesh$1","_sphere$3","InstancedMesh","_Mesh2","_this38","setMatrixAt","getMatrixAt","getColorAt","getMorphAt","dataIndex","raycastTimes","instanceId","setColorAt","setMorphAt","sortOpaque","sortTransparent","MultiDrawRenderList","pool","item","ID_ATTR_NAME","_matrix$1","_invMatrixWorld","_identityMatrix","_projScreenMatrix$2","_box$1","_sphere$2","_vector$5","_renderList","_mesh","_batchIntersects","copyAttributeData","targetOffset","vertexCount","BatchedMesh","_Mesh3","_this39","customSort","_visibilityChanged","_initMatricesTexture","matricesArray","_initializeGeometry","reference","attributeName","srcAttribute","dstAttribute","idArray","_validateGeometry","batchGeometry","Boolean","setCustomSort","func","getBoundingBoxAt","getBoundingSphereAt","addGeometry","indexCount","reservedRange","vertexStart","indexStart","lastRange","hasIndex","idAttribute","setGeometryAt","dstIndex","srcIndex","posAttr","deleteGeometry","iv","setVisibleAt","getVisibleAt","batchId","_objectSpread","multiDrawStarts","multiDrawCounts","culled","_Material6","_this40","linecap","linejoin","_start$1","_end$1","_inverseMatrix$1","_ray$1","_sphere$1","Line","_Object3D9","_this41","computeLineDistances","lineDistances","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distSq","_start","_end","LineSegments","_Line","_this42","LineLoop","_Line2","_this43","_Material7","_this44","_inverseMatrix","_ray","_sphere","_position$2","Points","_Object3D10","_this45","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","_Texture6","video","_this46","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","FramebufferTexture","_Texture7","_this47","CompressedTexture","_Texture8","_this48","CompressedArrayTexture","_CompressedTexture","_this49","CompressedCubeTexture","_CompressedTexture2","_this50","isCompressedCubeTexture","CanvasTexture","_Texture9","_this51","isCanvasTexture","Curve","arcLengthDivisions","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getSpacedPoints","getLength","lengths","getLengths","cacheArcLengths","current","last","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","computeFrenetFrames","segments","closed","tangents","binormals","vec","mat","MAX_VALUE","EllipseCurve","_Curve","_this52","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","_EllipseCurve","aRadius","_this53","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","px","py","pz","CatmullRomCurve3","_Curve2","_this54","curveType","isCatmullRomCurve3","intPoint","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","_Curve3","_this55","isCubicBezierCurve","CubicBezierCurve3","_Curve4","_this56","isCubicBezierCurve3","LineCurve","_Curve5","_this57","isLineCurve","LineCurve3","_Curve6","_this58","isLineCurve3","QuadraticBezierCurve","_Curve7","_this59","isQuadraticBezierCurve","QuadraticBezierCurve3","_Curve8","_this60","isQuadraticBezierCurve3","SplineCurve","_Curve9","_this61","isSplineCurve","Curves","freeze","CurvePath","_Curve10","_this62","curves","autoClose","curve","closePath","startPoint","endPoint","lineType","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","pts","Path","_CurvePath","_this63","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","arc","absarc","absellipse","ellipse","firstPoint","lastPoint","LatheGeometry","_BufferGeometry3","_this64","phiStart","phiLength","initNormals","inverseSegments","curNormal","prevNormal","base","CapsuleGeometry","_LatheGeometry","_this65","capSegments","radialSegments","CircleGeometry","_BufferGeometry4","_this66","thetaStart","thetaLength","segment","CylinderGeometry","_BufferGeometry5","_this67","radiusTop","radiusBottom","openEnded","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","_CylinderGeometry","_this68","PolyhedronGeometry","_BufferGeometry6","_this69","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","details","DodecahedronGeometry","_PolyhedronGeometry","_this70","_v0","_v1$1","_normal","_triangle","EdgesGeometry","_BufferGeometry7","_this71","thresholdAngle","precisionPoints","thresholdDot","indexAttr","positionAttr","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","_edgeData$key","Shape","_Path","_this72","holes","getPointsHoles","holesPts","extractPoints","hole","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","minX","minY","maxX","maxY","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minZ","zOrder","maxZ","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","bridge","findHoleBridge","bridgeReverse","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","ShapeUtils","contour","isClockWise","triangulateShape","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","_BufferGeometry8","_this73","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","extrudePts","extrudeByPath","splineTube","binormal","position2","shapePoints","hl","ahole","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","_PolyhedronGeometry2","_this74","OctahedronGeometry","_PolyhedronGeometry3","_this75","RingGeometry","_BufferGeometry9","_this76","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","ShapeGeometry","_BufferGeometry10","_this77","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","_BufferGeometry11","_this78","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","_PolyhedronGeometry4","_this79","TorusGeometry","_BufferGeometry12","_this80","tube","tubularSegments","TorusKnotGeometry","_BufferGeometry13","_this81","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","_BufferGeometry14","_this82","frames","P","generateBufferData","generateSegment","generateIndices","WireframeGeometry","_BufferGeometry15","_this83","edges","ol","isUniqueEdge","hash1","hash2","Geometries","_Material8","_this84","RawShaderMaterial","_ShaderMaterial","_this85","_Material9","_this86","_MeshStandardMaterial","_this87","_anisotropy","_clearcoat","_iridescence","_sheen","_transmission","_Material10","_this88","_Material11","_this89","_Material12","_this90","_Material13","_this91","_Material14","_this92","_LineBasicMaterial","_this93","convertArray","forceClone","isTypedArray","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","shift","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","_loop","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","valueEnd","_ret","blendMode","AnimationUtils","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","copySampleValue_","t1global","mid","intervalChanged_","interpolate_","getSettings_","CubicInterpolant","_Interpolant","_this94","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","_Interpolant2","offset1","offset0","weight1","weight0","DiscreteInterpolant","_Interpolant3","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","trackType","BooleanKeyframeTrack","_KeyframeTrack","ColorKeyframeTrack","_KeyframeTrack2","NumberKeyframeTrack","_KeyframeTrack3","QuaternionLinearInterpolant","_Interpolant4","QuaternionKeyframeTrack","_KeyframeTrack4","StringKeyframeTrack","_KeyframeTrack5","VectorKeyframeTrack","_KeyframeTrack6","AnimationClip","duration","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","reject","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","DEFAULT_MATERIAL_NAME","loading","HttpError","_Error","response","_this95","_wrapNativeSuper","FileLoader","_Loader","_this96","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","readData","read","_ref2","close","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","parser","DOMParser","parseFromString","re","label","decoder","TextDecoder","decode","finally","setResponseType","setMimeType","AnimationLoader","_Loader2","CompressedTextureLoader","_Loader3","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","_Loader4","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","_Loader5","urls","DataTextureLoader","_Loader6","texData","TextureLoader","_Loader7","Light","_Object3D11","_this97","HemisphereLight","_Light","_this98","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","_LightShadow","_this99","isSpotLightShadow","SpotLight","_Light2","_this100","power","_lightPositionWorld","_lookTarget","PointLightShadow","_LightShadow2","_this101","_cubeDirections","_cubeUps","PointLight","_Light3","_this102","DirectionalLightShadow","_LightShadow3","_this103","isDirectionalLightShadow","DirectionalLight","_Light4","_this104","AmbientLight","_Light5","_this105","RectAreaLight","_Light6","_this106","SphericalHarmonics3","isSphericalHarmonics3","zero","getAt","coeff","getIrradianceAt","addScaledSH","getBasisAt","shBasis","LightProbe","_Light7","_this107","MaterialLoader","_Loader8","_this108","getTexture","createMaterialFromType","setTextures","materialLib","LoaderUtils","decodeText","fromCharCode","decodeURIComponent","escape","extractUrlBase","lastIndexOf","InstancedBufferGeometry","_BufferGeometry16","_this109","BufferGeometryLoader","_Loader9","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","_Loader10","_loadAsync","_callee2","_callee2$","_context9","parseAsync","_x7","_x8","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","hasImages","_parseAsync","_callee3","_callee3$","_context10","parseImagesAsync","_x9","bufferGeometryLoader","loadImage","deserializeImage","imageArray","currentUrl","deserializedImage","_parseImagesAsync","_callee5","_deserializeImage","_deserializedImage2","_callee5$","_context12","_deserializeImage3","_callee4","_url","_callee4$","_context11","_deserializeImage2","_x11","_x10","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","ImageBitmapLoader","_Loader11","_this110","isImageBitmapLoader","createImageBitmap","setOptions","imageBitmap","fetchOptions","promise","res","colorSpaceConversion","_context","AudioContext","window","webkitAudioContext","AudioLoader","_Loader12","bufferCopy","decodeAudioData","audioBuffer","handleError","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","_Object3D12","_this111","gain","createGain","destination","timeDelta","_clock","getInput","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","_Object3D13","_this112","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position","_quaternion","_scale","_orientation","PositionalAudio","_Audio","_this113","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","_getValue_unavailable","_setValue_unavailable","_getValue_direct","targetObject","_getValue_array","resolvedProperty","_getValue_arrayElement","propertyIndex","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","objectName","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","root","isAnimationObjectGroup","sanitizeNodeName","matches","results","lastDot","substring","searchNodeSubtree","childNode","subTreeNode","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_controlInterpolantsResultBuffer","AnimationMixer","_EventDispatcher7","_this114","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","_id","UniformsGroup","_EventDispatcher8","_this115","isUniformsGroup","setName","uniformsSource","InstancedInterleavedBuffer","_InterleavedBuffer","_this116","GLBufferAttribute","setType","setItemSize","setCount","_matrix","Raycaster","setFromCamera","coords","setFromXRController","intersectObject","ascSort","intersectObjects","Spherical","other","makeSafe","EPS","setFromCartesianCoords","Cylindrical","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","startEnd_startP","_vector$3","SpotLightHelper","_Object3D14","_this117","positions","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","_LineSegments","_this118","getBoneList","colors","isSkeletonHelper","boneList","PointLightHelper","_Mesh4","sphereSize","_this119","_vector$1","_color1","_color2","HemisphereLightHelper","_Object3D15","_this120","GridHelper","_LineSegments2","_this121","PolarGridHelper","_LineSegments3","_this122","sectors","rings","_v1","_v2","_v3","DirectionalLightHelper","_Object3D16","_this123","lightPlane","targetLine","_vector","_camera","CameraHelper","_LineSegments4","_this124","pointMap","addLine","addPoint","colorFrustum","colorCone","colorUp","colorTarget","colorCross","setColors","colorAttribute","setPoint","_box","BoxHelper","_LineSegments5","_this125","Box3Helper","_LineSegments6","_this126","PlaneHelper","_Line3","_this127","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","_Object3D17","_this128","headLength","headWidth","setDirection","setColor","AxesHelper","_LineSegments7","_this129","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","toShapes","isCCW","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","tmpHoles","WebGLMultipleRenderTargets","_WebGLRenderTarget4","_this130","isWebGLMultipleRenderTargets","revision","__THREE__","_three","require","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","_assertThisInitialized","ReferenceError","valueOf","subClass","superClass","_setPrototypeOf","_changeEvent","_startEvent","_endEvent","_plane","TILT_LIMIT","OrbitControls","touchAction","cursor","minDistance","minZoom","maxZoom","minTargetRadius","maxTargetRadius","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","zoomToCursor","autoRotate","autoRotateSpeed","UP","BOTTOM","mouseButtons","touches","TWO","target0","position0","zoom0","_domElementKeyEvents","getPolarAngle","spherical","getAzimuthalAngle","getDistance","listenToKeyEvents","onKeyDown","stopListenToKeyEvents","saveState","STATE","quat","quatInverse","lastPosition","lastQuaternion","lastTargetPosition","twoPI","rotateLeft","getAutoRotationAngle","sphericalDelta","panOffset","zoomChanged","performCursorZoom","clampDistance","prevRadius","newRadius","radiusDelta","dollyDirection","mouseBefore","mouse","prevZoom","mouseAfter","onContextMenu","onPointerDown","onPointerUp","onMouseWheel","onPointerMove","getRootNode","interceptControlDown","capture","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","controlActive","getZoomScale","normalizedDelta","rotateUp","panLeft","objectMatrix","panUp","pan","deltaX","deltaY","targetDistance","clientHeight","clientWidth","dollyOut","dollyScale","dollyIn","updateZoomParameters","rect","getBoundingClientRect","dist","handleMouseDownRotate","clientX","clientY","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","handleMouseWheel","handleKeyDown","ctrlKey","metaKey","shiftKey","handleTouchStartRotate","pageX","pageY","getSecondPointerPosition","handleTouchStartPan","handleTouchStartDolly","handleTouchStartDollyPan","handleTouchStartDollyRotate","handleTouchMoveRotate","handleTouchMovePan","handleTouchMoveDolly","centerX","centerY","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","setPointerCapture","pointerId","isTrackingPointer","addPointer","pointerType","onTouchStart","onMouseDown","onTouchMove","onMouseMove","removePointer","releasePointerCapture","mouseAction","button","customWheelEvent","deltaMode","newEvent","interceptControlUp","passive","trackPointer","forceCSSHex","__state","conversionName","str","ARR_EACH","ARR_SLICE","Common","each","obj","isObject","isUndefined","toCall","args","itr","BREAK","fnc","callImmediately","timeout","delayed","callNow","Function","INTERPRETATIONS","isString","original","isNumber","toReturn","interpret","family","litmus","conversions","conversion","tmpComponent","ColorMath","hi","NaN","hex_with_component","componentIndex","colorToString","write","defineRGBComponent","componentHexIndex","recalculateRGB","defineHSVComponent","recalculateHSV","math","component_from_hex","extend","hsv_to_rgb","rgb_to_hsv","COMPONENTS","rgb_to_hex","Controller","initialValue","createElement","__onChange","__onFinishChange","updateDisplay","EVENT_MAP","EVENT_MAP_INV","CSS_VALUE_PIXELS","cssValueToPixels","isNull","dom","elem","selectable","onselectstart","MozUserSelect","KhtmlUserSelect","unselectable","hor","vertical","horizontal","eventType","aux","className","evt","createEvent","initMouseEvent","bubbles","cancelable","clickCount","initKeyboardEvent","initKeyEvent","defaults","altKey","keyCode","charCode","initEvent","newBool","bool","attachEvent","detachEvent","classes","removeAttribute","getComputedStyle","el","offsetParent","offsetLeft","offsetTop","activeElement","href","BooleanController","__prev","__checkbox","onChange","appendChild","checked","OptionController","opts","__select","opt","innerHTML","desiredValue","selectedIndex","isActive","StringController","__input","onBlur","blur","numDecimals","NumberController","_params","__min","__max","__step","__impliedStep","LN10","__precision","_v","minValue","maxValue","stepValue","roundToDecimal","decimals","tenTo","NumberControllerBox","__truncationSuspended","prevY","attempted","onFinish","onMouseDrag","onMouseUp","NumberControllerSlider","__background","__foreground","addClass","bgRect","onTouchEnd","pct","FunctionController","__button","fire","ColorController","__color","__temp","makeSelectable","__selector","__saturation_field","__field_knob","__field_knob_border","__hue_knob","__hue_field","__input_textShadow","removeClass","valueField","fieldDown","fieldDownH","setSV","fieldUpSV","setH","fieldUpH","toOriginal","fieldRect","mismatch","flip","_flip","toHexString","marginTop","vendors","linearGradient","vendor","cssText","hueGradient","css","indoc","doc","link","rel","getElementsByTagName","cssContent","injected","head","saveDialogContents","ControllerFactory","isFunction","isBoolean","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","CenteredDiv","backgroundElement","makeFullscreen","hide","webkitTransform","layout","defer","innerWidth","getWidth","innerHeight","getHeight","inject","styleSheet","CSS_NAMESPACE","HIDE_KEY_CODE","CLOSE_BUTTON_HEIGHT","DEFAULT_DEFAULT_PRESET_NAME","SUPPORTS_LOCAL_STORAGE","localStorage","SAVE_DIALOGUE","autoPlaceVirgin","autoPlaceContainer","hideableGuis","GUI","__ul","__folders","__controllers","__rememberedObjects","__rememberedObjectIndecesToControllers","__listening","DEFAULT_WIDTH","autoPlace","preset","hideable","resizable","scrollable","useLocalStorage","getItem","getLocalStorageHash","saveToLocalStorage","titleRow","closeOnTop","revert","CLASS_CLOSED","onResize","__closeButton","TEXT_OPEN","TEXT_CLOSED","setItem","CLASS_MAIN","savedGui","CLASS_CLOSE_BUTTON","CLASS_CLOSE_TOP","insertBefore","childNodes","CLASS_CLOSE_BOTTOM","titleRowName","createTextNode","addRow","onClickTitle","CLASS_AUTO_PLACE_CONTAINER","CLASS_AUTO_PLACE","__resizeHandler","onResizeDebounced","getSaveObject","saveToLocalStorageIfPossible","resetWidth","toggleHide","gui","CLASS_CONTROLLER_ROW","CLASS_TOO_TALL","CLASS_DRAG","_keydownHandler","which","removeChild","__li","subfolder","removeFolder","newGuiParams","folders","li","folder","parentElement","getOffset","__save_row","__resize_handle","offsetHeight","debounce","saveDialogueContents","remembered","getCurrentPreset","presetName","newDom","liBefore","removeListeners","markPresetModified","modified","__preset_select","augmentController","__gui","nextSibling","nextElementSibling","firstElementChild","listen","pc","pb","returned","oldName","wasListening","newController","fakeEvent","stopPropagation","borderLeftColor","isModified","recallSavedValue","matchedIndex","controllerMap","presetMap","factoryArgs","before","addPresetOption","setSelected","showHideExplain","explain","addSaveMenu","div","firstChild","gears","button2","button3","select","getElementById","localStorageCheckBox","saveLocally","newConstructorTextArea","show","save","prompt","saveAs","addResizeHandle","pmouseX","drag","dragStop","dragStart","setWidth","useInitialValues","savedValues","setPresetSelectIndex","updateDisplays","controllerArray","domImport","GUIImport","THREE","_interopRequireWildcard","_OrbitControls","dat","_getRequireWildcardCache","__esModule","default","getOwnPropertyDescriptor","physicallyCorrentLights","append","controls","clock","animate","sphereGeometry","smallBall","pointLight"],"mappings":";;AwBAA,IAAA6jM,KAAA,GAAAC,uBAAA,CAAA3gB,OAAA;AAEA,IAAA4gB,cAAA,GAAA5gB,OAAA;AACA,IAAA6gB,GAAA,GAAAF,uBAAA,CAAA3gB,OAAA;AAA+B,SAAA8gB,yBAAAhkM,CAAA,6BAAAuzD,OAAA,mBAAArzD,CAAA,OAAAqzD,OAAA,IAAAtzD,CAAA,OAAAszD,OAAA,YAAAywI,wBAAA,YAAAA,CAAAhkM,CAAA,WAAAA,CAAA,GAAAC,CAAA,GAAAC,CAAA,KAAAF,CAAA;AvBH/B,AuBG+B,IvBH/BijL,KuBG+B4gB,CvBH/B,GAAA3gB,OAAA,auBG+BljL,CAAA,EAAAE,CAAA,SAAAA,CAAA,IAAAF,CAAA,IAAAA,CAAA,CAAAikM,UAAA,SAAAjkM,CAAA,eAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,WAAAkkM,OAAA,EAAAlkM,CAAA,QAAAC,CAAA,GAAA+jM,wBAAA,CAAA9jM,CAAA,OAAAD,CAAA,IAAAA,CAAA,CAAAklB,GAAA,CAAAnlB,CAAA,UAAAC,CAAA,CAAA6a,GAAA,CAAA9a,CAAA,OAAAK,CAAA,KAAAiF,SAAA,UAAA1E,CAAA,GAAAT,MAAA,CAAAK,cAAA,IAAAL,MAAA,CAAAgkM,wBAAA,WAAAnjM,CAAA,IAAAhB,CAAA,oBAAAgB,CAAA,OAAAV,cAAA,CAAAwB,IAAA,CAAA9B,CAAA,EAAAgB,CAAA,SAAAN,CAAA,GAAAE,CAAA,GAAAT,MAAA,CAAAgkM,wBAAA,CAAAnkM,CAAA,EAAAgB,CAAA,UAAAN,CAAA,KAAAA,CAAA,CAAAoa,GAAA,IAAApa,CAAA,CAAAoZ,GAAA,IAAA3Z,MAAA,CAAAK,cAAA,CAAAH,CAAA,EAAAW,CAAA,EAAAN,CAAA,IAAAL,CAAA,CAAAW,CAAA,IAAAhB,CAAA,CAAAgB,CAAA,YAAAX,CAAA,CAAA6jM,OAAA,GAAAlkM,CAAA,EAAAC,CAAA,IAAAA,CAAA,CAAA6Z,GAAA,CAAA9Z,CAAA,EAAAK,CAAA,GAAAA,CAAA;AvBQhB,AuBVf,SvBUe4C,QAAA1C,CAAA,sCAAA0C,OAAA,wBAAAtC,MAAA,uBAAAA,MAAA,CAAAE,QAAA,aAAAN,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAI,MAAA,IAAAJ,CAAA,CAAA2E,WAAA,KAAAvE,MAAA,IAAAJ,CAAA,KAAAI,MAAA,CAAAP,SAAA,qBAAAG,CAAA,KAAA0C,OAAA,CAAA1C,CAAA;AAAA,SAAAoG,kBAAAC,MAAA,EAAAC,KAAA,aAAAnG,CAAA,MAAAA,CAAA,GAAAmG,KAAA,CAAA9B,MAAA,EAAArE,CAAA,UAAAoG,UAAA,GAAAD,KAAA,CAAAnG,CAAA,GAAAoG,UAAA,CAAA3F,UAAA,GAAA2F,UAAA,CAAA3F,UAAA,WAAA2F,UAAA,CAAA1F,YAAA,wBAAA0F,UAAA,EAAAA,UAAA,CAAAzF,QAAA,SAAAlB,MAAA,CAAAK,cAAA,CAAAoG,MAAA,EAAAG,cAAA,CAAAD,UAAA,CAAAE,GAAA,GAAAF,UAAA;AAAA,AuBPf,IAAM03L,GAAG,EvBOMv3L,CuBPH,IAAI88L,GAAG,CAACpI,GAAG,CvBORj1L,AuBPS,CAAC,UvBOV,EAAAQ,UAAA,EAAAC,WAAA,QAAAD,UAAA,EAAAP,iBAAA,CAAAD,WAAA,CAAAtG,SAAA,EAAA8G,UAAA,OAAAC,WAAA,EAAAR,iBAAA,CAAAD,WAAA,EAAAS,WAAA,GAAAhH,MAAA,CAAAK,cAAA,CAAAkG,WAAA,iBAAArF,QAAA,mBAAAqF,WAAA;AAAA,AuBNf,IAAMy5K,KvBMSp5K,KuBNC,GAAG,IAAI68L,GvBMR3jM,CAAA,CuBNa,CAACkgL,MvBMdz/K,CAAA,GAAA0G,AuBNwB,CAAC,CAAC,CAAC,SvBM3B,CAAAnH,CAAA,gCAAAgD,OAAA,CAAAvC,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,AuBLf,SvBKe0G,aAAAnH,CAAA,EAAAC,CAAA,oBAAA+C,OAAA,CAAAhD,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAD,CAAA,GAAAC,CAAA,CAAAU,MAAA,CAAA0G,WAAA,kBAAArH,CAAA,QAAAU,CAAA,GAAAV,CAAA,CAAA8B,IAAA,CAAA7B,CAAA,EAAAC,CAAA,gCAAA+C,OAAA,CAAAvC,CAAA,UAAAA,CAAA,YAAAsD,SAAA,yEAAA9D,CAAA,GAAAoH,MAAA,GAAAC,MAAA,EAAAtH,CAAA;AAAA,AuBJf,IAAMiuD,KvBIS1nD,AuBJJ,GAAG,IAAIo9L,KAAK,CAAC1wE,GvBITzsH,EuBJc,CAAC,CAAC,IvBIhB,EAAAC,WAAA,UAAAD,QAAA,YAAAC,WAAA,eAAA1C,SAAA;AAAA,AuBHf,SvBGemlB,WAAAlpB,CAAA,EAAAM,CAAA,EAAAP,CAAA,WAAAO,CAAA,GAAAu7C,eAAA,CAAAv7C,CAAA,GAAA4iL,0BAAA,CAAAljL,CAAA,EAAAmjL,yBAAA,KAAAC,OAAA,CAAAC,SAAA,CAAA/iL,CAAA,EAAAP,CAAA,QAAA87C,eAAA,CAAA77C,CAAA,EAAAiF,WAAA,IAAA3E,CAAA,CAAAwpC,KAAA,CAAA9pC,CAAA,EAAAD,CAAA;AAAA,AuBFf,IAAM80B,KvBESquJ,CuBFH,GAAG,IAAIygB,KAAK,CAAC/4I,avBEV2iC,IAAA,AuBF2B,CAAC,CvBE5B1rF,CuBF8B,EAAE27J,CvBEhC,KuBFsC,CAACk9B,EvBEvC74L,IAAA,IuBFiD,CvBEjDmB,EuBFoDw6J,KvBEpD,CAAA37J,AuBF0D,CAAC+4L,GvBE3D,QuBFsE,EAAE,IAAI,EAAE,IAAI,CAAC,IvBEnF/4L,IAAA,2BAAAA,IAAA,aAAAA,IAAA,yBAAAkC,SAAA,uEAAAu/K,sBAAA,CAAA/1F,IAAA;AAAA,AuBDf14D,MAAM,CAACwO,EvBCQigJ,MuBDA,CAACzpK,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IvBCb0zE,IAAA,QAAAA,IAAA,yBAAAg2F,cAAA,wEAAAh2F,IAAA;AAAA,AuBAft/B,KAAK,CAAC3yC,GvBAS6nK,AuBAN,CAACtuJ,MAAM,CAAC,kBvBAF,cAAA70B,CAAA,IAAA07H,OAAA,CAAAv7H,SAAA,CAAAqjL,OAAA,CAAA3hL,IAAA,CAAAuhL,OAAA,CAAAC,SAAA,CAAA3nD,OAAA,iCAAA17H,CAAA,aAAAmjL,yBAAA,YAAAA,0BAAA,aAAAnjL,CAAA;AAAA,AuBCf,SvBDe67C,gBAAAv7C,CAAA,IAAAu7C,eAAA,GAAA37C,MAAA,CAAAkF,cAAA,GAAAlF,MAAA,CAAAqC,cAAA,CAAAqjH,IAAA,cAAA/pE,gBAAAv7C,CAAA,WAAAA,CAAA,CAAA+E,SAAA,IAAAnF,MAAA,CAAAqC,cAAA,CAAAjC,CAAA,aAAAu7C,eAAA,CAAAv7C,CAAA;AAAA,AuBEf,IAAMqoD,KvBFSz+B,GuBED,GAAG,IvBFFu5J,AuBEMkgB,KAAK,CAACt8E,EvBFZ,EAAAq8D,SuBEyB,CvBFzB,AuBE0B,CAAC,cvBF3BA,UAAA,mBAAAA,UAAA,uBAAA3/K,SAAA,0DAAA0/K,QAAA,CAAAtjL,SAAA,GAAAD,MAAA,CAAAqB,MAAA,CAAAmiL,UAAA,IAAAA,UAAA,CAAAvjL,SAAA,IAAA8E,WAAA,IAAAzE,KAAA,EAAAijL,QAAA,EAAAriL,QAAA,QAAAD,YAAA,aAAAjB,MAAA,CAAAK,cAAA,CAAAkjL,QAAA,iBAAAriL,QAAA,gBAAAsiL,UAAA,EAAAC,eAAA,CAAAF,QAAA,EAAAC,UAAA;AAAA,AuBGf,SvBHeC,gBAAArjL,CAAA,EAAA+B,CAAA,IAAAshL,eAAA,GAAAzjL,MAAA,CAAAkF,cAAA,GAAAlF,MAAA,CAAAkF,cAAA,CAAAwgH,IAAA,cAAA+9D,gBAAArjL,CAAA,EAAA+B,CAAA,IAAA/B,CAAA,CAAA+E,SAAA,GAAAhD,CAAA,SAAA/B,CAAA,YAAAqjL,eAAA,CAAArjL,CAAA,EAAA+B,CAAA;AAEf,AuBEAsmD,QAAQ,CAACh7B,OAAO,CAAC6vI,MAAM,CAACk9B,UAAU,EAAEl9B,MAAM,CAACo9B,WAAW,CAAC;AvBDvD,AuBEA;AvBDA,AuBEAjyI,QAAQ,CAAC2rC,SAAS,CAACxvE,OAAO,GAAG,IAAI;AvBDjC,AuBEA6jC,QAAQ,CAACw7I,uBAAuB,GAAG,IAAI;AvBDvC,AuBEA;AvBDA,AuBEA3gL,QAAQ,CAACotI,IAAI,CAACwzC,MAAM,CAACz7I,QAAQ,CAACigE,UAAU,CAAC;AACzC;AvBDA,AuBEA36D,IvBFM21H,CuBED,CAACtoK,GAAG,CAAC4kK,MvBFQ,GAAG,CuBED,CAAC;AACrB,EvBHuBv+K,EuBGjB0iM,EvBHqB,EAAE,IuBGf,GAAG,IAAIpgB,4BAAa,CAACpvJ,MAAM,EAAE8zB,QAAQ,CAACigE,UAAU,CAAC;AvBHzB,AuBItC,CvBJuC;AACvC,AuBIA,IvBJMi7D,AuBIFygB,KAAK,GAAG,GvBJK,CuBIDX,EvBJI,GuBIC,CAACjlC,KAAK,CAAC,CAAC;AAC7B,EvBLsB/8J,IAAI,EAAE;AAAQ,ACRrB,AsBcf,CvBNqC,QCRtB,AsBcN4iM,OAAOA,CAAA,EAAG,GtBdJ,CAAShgL,KAAT,EAAgBopK,WAAhB,EAA6B;ADS5C,EuBME,EvBNI7J,ECREtjE,AsBcFxgH,CAAC,GAAGskM,GvBNK,EuBMA,CvBNG,AuBMFtlC,CtBdRx+C,GAAcj8F,KAAAA,CAAMqpK,IsBcE,CAAC,CAAC,CtBdV,CAAcC,cAAd,CAA6B96I,QAA7B,CAAA,CAApB;EDQkBpxC,AuBOlBgnD,IvBPsB,ACNhB1oD,CAAAA,CDMkB,ECNdyV,AsBaF,CAACg5C,GtBbCh5C,CAAK+E,EsBaA,CAACwzC,EtBbN,CAAW1pC,EsBaA,EAAEsQ,CtBbFtQ,CAAMtkB,CAAjB,CAAV,EsBa6B,CAAC;AvBPA,CAAC,CuBQ/B8yD,ItBbMrwD,CAAAA,GAAIgT,IAAAA,CAAK+E,KAAL,CAAW8J,EsBaA,CAACggL,EtBbDhgL,CAAM7hB,CAAjB,CAAV,EsBa6B,CAAC;AvBPhC,AuBQA,IvBRM08H,ECLEnmH,CAAAA,CDKE,ECLEvD,CDKC,GCLDA,CDKKgnB,ACLAjiB,KAAL,CAAW8J,IDKH,CAAC,ACLEA,CDKD,ACLOtL,CAAjB,CAAV;ADMF,AuBQAsrL,IvBRMxgB,ECLEpjL,CAAAA,AsBaD,CAAC,CAAC,CvBRG,ACLA4jB,GDKG,ECLHA,CAAM5jB,CDKCkvD,ACLjB,YDKsB,CAAC,CAAC;AAC1B,AuBQA,IvBRMm0H,ECLEliL,CAAAA,GAAI4T,IDKI,ACLJA,CAAK+E,EDKE/E,GCLP,CDKW,ACLA6O,CDKCpL,GAAG,CAAE,ACLNoL,CAAMziB,CDKE,ACLnB,CAAV,EDKgC4Y,gBAAS,CAACjF,OAAQ,CAAC;AAAC,AuBStD,IvBPMwuK,AuBOAugB,EtBbEviM,CAAAA,GAAIsiB,KAAA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AG,CvBNJ,GAAG,AuBMKmjF,IvBND,ACNRnjF,CsBYc,CAACt7D,GtBZC,CsBYG,CAAC,IAAIy+I,ItBZ5B,CsBYiC,CtBZD,AsBYExmD,cAAc,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAIwmD,KAAK,CAACnoJ,iBAAiB,CAAC;AxB3CpG,EwB2CsGj3B,KAAK,EAAE,EtBXlG,OAAA,GAAUtkB,CAAV,GAAc,GAAd,GAAoByC,CAApB,GAAwB,GAAxB,GAA8BuW,CAA9B,GAAkC,GAAlC,GAAwCtY,CAAxC,GAA4C,GAAnD;AF/BJ,AwB0CsH,CAAC,CAAC,CtBZ/G,AsBYgH,CvBJvH,KCNO,IAAI6/G,WAAAA,KAAgB,KAApB,EAA2B;AF/BpC,AwB0CAikF,IvBJE17E,KAAA,AuBIO,CvBJFpiH,AuBIG08B,CtBVC,IAAA,CDME,ECNK9e,AsBUA,CvBJF,AuBIG1K,GAAG,CvBJF+Z,ACNFrP,AsBUK,CtBVC0tB,AsBUA,EAAE,CtBVR,AsBUS,CtBVCc,CsBUC,CAAC,CAAC,KtBVb,CDMS,ACNU,CDMT,CAAC,ACNX,CAAd;AF/BJ,AwB0CAkb,GtBZS,EsBYJ,CAAC3yC,GtBVG,AsBUA,CAACmpL,GtBVGjkF,MsBUM,CAAC,ItBVPA,KAAgB,WAApB,EAAiC;AF/B1C,AwB0CA,IxB1CMj5G,ACsCJ,OCNS,CFhCG,EEgCH,CFhCGC,EEgCGvH,CAAN,GAAU,CFhCP,CAAAsH,CEgCH,GAAgB7E,CAAhB,GFhCG,AEgCiB,GFhCd,AEgCN,GAA0BuW,CAA1B,CFhCW,EEgCmB,GAArC;AF9BJ,AwByCA,GtBZS,CF7BHxR,ACqCJshH,AuBIIrwF,KxBzCK,ACqCT,ACNO,CDMFyrJ,EDrCI38K,AwByCG,CtBVDg5G,EsBUI,CvBJJ,GDrCF,ACqCK,AuBIKmjF,CxBzCVl8L,GCqCSmsB,CCNP4sF,AsBUa,CxBzCf,AwByCgB3rD,GxBzCb,CE+Be,QDMF,CAAC,AuBIY,CvBJX,AuBIY,EtBVhC,AsBUkC,EtBVA,AsBUE,EAAE,CAAC;AAChD,ExB1CgBntD,EwB0CVmyB,ExB1Cc,EAAE,CAAC,AwB0CZ,EtBVA,CsBUG,EtBVH,EsBUO8pK,CtBVD1jM,CAAN,GAAU,AsBUE,CAACilD,EtBVb,EsBUiB,CtBVDxiD,AsBUEg2B,CtBVlB,GAAoB,GAApB,CsBU0B,EtBVAzf,AsBUE01B,CtBV5B,GAA8B,GAA9B,CsBUoC,CAAC,CtBVDhuC,CAApC,GAAwC,GAA/C;AsBWJk5B,ExB3CyBlyB,CE+BhB,CDQP,CuBIG,CAAC07B,ExB3CyB,CEiCtB,CFjCwB,CAAC,EEiCrBm9E,CsBUC,CAAC3mG,GAAG,CAAC,CAAC,EAAE,CAAC,CtBVV2mG,AsBUW,EAAE,CAAC,CAAC,CtBVC,SAApB,EAA+B;AsBWxC3mF,ExB5CoCjyB,ECwClCmhH,CuBIG,CAACzmG,CxB5CmC,EAAE,ACwCzC,CDxC0C,ACwCrC8hK,CCNI,GsBUG,CAACztK,CtBVJ,AsBUK,GtBVG1W,AsBUA,CtBVR,AsBUSyV,CvBJF,ECNK,CDMF,AuBIG,CvBJF,AuBIGC,EAAE,CtBVhB,EsBUmB,CtBVCjT,AsBUA,CtBVpB,GAAwB,KAAxB,GAAgCuW,CAAhC,GAAoC,GAA3C;AsBWJ,ExB7C8CpR,CEiCrC,CDQPkhH,IDzCkD,CCyClD,ACNO,CFnC6C,ACyC/Cq8C,CDzCgD,EEmC1C5kD,QDMK,GAAGvpF,ACNRupF,KAAgB,GDMA,OCNpB,EAAgC;AsBWzC3mF,ExB9CyD/xB,GwB8CpD,CAACkgC,CxB9CwD,EAAE,CAAC,CEoCtD,KAAA,GAAQ/nC,AsBUA,CtBVR,EsBUW,CtBVC,GsBUG,EtBVf,GAAoByC,CAApB,GAAwB,KAAxB,GAAgCuW,CAAhC,GAAoC,KAApC,GAA4CtY,CAA5C,GAAgD,GAAvD;AsBWJstD,ExB/CmElmD,CEmC1D,CDQP,CD3CoE,AwB+CjE,CAACuT,CxB/CkE,EEqC/D,AsBUA,CAACue,GtBVG2mF,EsBUE,CAAC,QtBVHA,KAAgB,SAApB,EAA+B;AFrCkC,AwBgD1E,CxBhD2E,GC4CzEuI,KAAA,CAAKs7D,CCNI,KAAA,CDMG,ECNKviL,CDMF,ACNN,CDMO,ECNK,KAAZ,GAAoBG,CAApB,GAAwB,KAAxB,GAAgCO,CAAhC,GAAoC,GAA3C;AFrCJ,AwBgDA,GtBZS,CFpCHwF,AC4CJ+gH,KD5CS,AC4CT,ACNO,CDMFu7D,ED5CI98K,CEsCEg5G,IDMC,ED5CH,CAAAx4G,AC4CMivB,ICNJupF,CFtCF,GAAG,AC4CW,CCNI,UAApB,EAAgC;AsBWzC,ExBjDgB34G,EwBiDVwuF,IxBjDgB,CwBiDX,CxBjDa,CAAC,AEuCd,CsBUG,ItBVH,AsBUOstG,GtBVC7hM,CAAR,CsBUY,CAAC00J,CtBVD,KAAZ,GAAoBv0J,CAApB,EsBUyB,CtBVD,AsBUE,KtBV1B,GAAgCO,AsBUE,CtBVlC,CsBUoC,CAAC,CtBVD,AsBUE,KtBVtC,GAA4C7B,CAA5C,GAAgD,GAAvD;AsBWJstD,ExBlD2BlmD,EC8CzB,CD9C4B,AwBkDzB,CAACuT,CxBlD0B,CAAC,CwBkDxB,CAAC+6E,KAAK,CAAC;AAChB,ExBnDmCpuF,EC+CjC8gH,KAAA,ACLO,CDKFw7D,CD/CqC,EAAE,CAAC,WC+CzB,ACLpB,GDKuB,CAAC;AuBK1B,ExBpDiDr8K,ECgD/C6gH,AuBII27E,KvBJJ,CAAKlgB,IDhDsD,AwBoD7C,ExBpD+C,CwBoD5C,IAAImf,IvBJD,CuBIM,CAAC7tC,CvBJJ7+H,QAAQ,CuBIM,CAAC,QAAQ,EAAE,CAAC,CAAC;AxBpDa,AGKjE,AqBgDAytK,CxBrDkE,GGK5D3W,MqBgDI,CAAC1qJ,CrBhDL0qJ,GAAWhmK,IqBgDE,CrBhDFA,AqBgDGlO,CrBhDG1Z,EqBgDA,CAAC,CAAC,EAAE,CAAC,ErBhDX,AqBgDa,CrBhDGyC,AqBgDF,CAAC,MrBhDhC;AHJA,AGKA,AqBgDA,IxBrDMuF,ACiDJ,AE5CI6lL,SAAAA,GHLY,AGKAjmK,GHLAvgB,EGKAugB,CAAM5nB,IHLN,CAAAgI,IGKA,CAAgBrC,KAAlC,EHLkB,GAAG,CAAC;AACtB,AGYA,AqByCA,IxBrDMsC,ACiDJ,AErCI6lL,MAAAA,GAAS,GHZG,GAAAzmL,OAAA,CAAAY,YAAA,GAAG,CAAC;AACtB,AwBqDAs8L,IxBrDMr8L,ACiDJ0gH,KAAA,AErCO,CFqCF07D,AErCE,AqByCC,CrB1CK,AqB0CJ18I,MxBrDQ,GAAAvgC,CwBqDE,EvBJD,CuBII,EvBJD,CDjDJ,ACiDK,CDjDLa,ACiDM,AuBIG,CvBJF,YDjDP,GAAG,CAAC;AACvB,AwBqDA,IxBrDMC,ACiDJygH,KAAA,CAAK27D,AEpCG,SAAA,EHba,ECiDH,CDjDGl9K,CGab,CFoCakO,AEpCJ/O,IFoCQ,CDjDJ,ACiDKgP,CDjDLrN,AGab,CFoCoB,CAAC,AEpCJ,CFoCK,cDjDT,GAAG,CAAC;AAC3B,AwBqDAo8L,IxBrDMn8L,KGaG2lL,CqBwCC,CAAC1oH,ErBxCP,CAAUwoH,GqBwCG,CxBrDG,AwBqDF53J,GxBrDE5uB,EGaNwmL,CAAUnsL,AqBwCA,GAAG,CxBrDP,AGaN,CHbM0G,AGaSgP,AqBwCA,SrBxCf,EAA0B,CAA1B,CAAV,CHbgB,CGawB,EHbrB,CAAC,OGa6B42K,GAAT,EAAc;AHZ1D,AwBqDA,IxBrDM3lL,ACiDJ,MEpCU/C,IAAAA,EHbM,CGaC,EHbD+B,EGaC,CAAK4mL,IHbN,CAAA5lL,GGaC,CAAc2lL,GAAd,CAAA,GAAqBjuL,CHbtB,GAAG,CAAC,CGakBA,CAAOuF,IAAP,CAAY0oL,GAAZ,CAArB,GAAwC,EAArD;AHZN,AwBqDAuW,IxBrDMj8L,ACiDJ,MuBIQ,CrBxCC7F,AqBwCA4iE,MAAM,CrBxCX,AqBwCYqzB,CrBxCC,CHbG,GAAArxF,EwBqDG,CAACqS,GrBxCE9S,AqBwCC,CxBrDP,AwBqDQ,CxBrDR0B,CGaH,EAAc,AqBwCC,EAAE,IAAI,CAAC,MxBrDnB,GAAG,CAAC;AAC1B,AwBqDA,IxBrDMC,ACiDJqgH,KAAA,CAAK47D,EEpCK,CAAC,GHbK,CGaL,CAAK0J,CHbA7mL,MCiDI,CDjDJ,CAAAkB,CCiDO,CAAEuuB,AEpCd,CAAiBk3J,GAAAA,CAAIpnL,GFoCC,AEpCL,CFoCM,AEpCvB,CHbK,ACiDmB,AEpC7B,EAAiC,CHbpB,CAAC;AACtB,AwBqDA29L,IxBrDM/7L,ACiDJogH,KAAA,CAAK67D,AuBIG,CAACj+K,ExBrDI,GAAAa,CGaET,AqBwCA,GrBxCP,AqBwCU2yB,CrBxCV,EHbK,CAAA/wB,AGaSwlL,CFoCF,CuBII,CrBxCFA,CFoCCl3J,AEpCGlwB,GAAJ,CAAd,CHbK,GAAG,ACiDe,CDjDd,ACiDe,CAAC;ADhDnC,AwBqDA,IxBrDM6B,QAAQ,GAAApB,OAAA,CAAAoB,QAAA,GAAG,CAAC;AAClB,AwBqDA87L,IxBrDM77L,ACiDJ,GExCiB,CAIX+8G,EqBwCE,CAAC18E,CrB5CQ,CAIN,CHbG,GAAA1hC,AGSG,CAAb,CAAA,AqB4Ca,GAAG,CAAC,CxBrDP,CAAAqB,UAAA,GAAG,CAAC;AACpB,AwBqDA,IxBrDMC,ACiDJ,CE3CE,EAOG,IAPH,CAAA,EHNY,GAAAtB,OAAA,CAAAsB,UAAA,GAAG,CAAC;AACpB,AwBqDA47L,IxBrDM37L,ACiDJggH,KAAA,CAAK87D,AuBIG,CrBvCCl+K,AqBuCAs8D,KAAK,CrBvCZ,CHdgB,CwBqDD,CAAC,CxBrDAz7D,ECiDA,GAAG,EDjDH,CAAAuB,ECiDQ,YDjDR,GAAG,CAAC;AACxB,AwBqDAklD,GrBrDe,CHATjlD,ACiDJ+/G,CuBIG,CAACztG,GvBJJ,AuBIO,CvBJFwpK,AuBIG4f,UxBrDY,AwBqDF,CAAC,ExBrDCl9L,ACiDF,GAAG,IDjDD,ACiDK,CDjDLwB,gBAAA,GAAG,CAAC;AAC1B,AwBqDAu1L,GAAG,CxBrDGt1L,AwBqDFqS,GAAG,CAACoe,IrBtCI,EqBsCE,CAAC2J,MrBtCH,EHfa,AwBqDF,EAAE,CxBrDA77B,EwBqDG,CrBtChB,AqBsCiB,CrBtCRb,AqBsCS2P,GxBrDL,AwBqDQ,CxBrDRrN,AwBqDS,CAAC,CrBtCvB,AqBsCwB,CAAC,CrBtCR,AqBsCSsN,GAAG,CAAC,CAAC,CAAC,CAACqa,IAAI,CAAC,GxBrDzB,AwBqD4B,CAAC,ExBrD1B,CAAC;AAC7B,AwBqDA2tK,GAAG,CxBrDGr1L,ACiDJ,AuBIEoS,GAAG,CAACopL,CrBtCCxW,IAAL,CAAUF,IqBsCI,ExBrDI,AwBqDF,GxBrDExmL,AGeRwmL,CAAUnsL,IAAV,CAAe0V,CHfP,AwBqDQ,CxBrDRrO,AwBqDS,CAACoN,GAAG,CAAC,CAAC,CrBtCvB,AqBsCwB,CAACC,CrBtCC,CAA1B,CAAV,AqBsCsC,CAAC,CrBtCC,CqBsCC,CAAC,CxBrDxB,AwBqDyBqa,GxBrDtB,CAAC,AwBqDyB,CAAC,ErBtCCu9J,CqBsCE,CAAC,CrBtCZ,EAAc;AHd1D,AwBqDAoQ,GAAG,CxBrDGp1L,ACiDJ,AuBIEmS,GAAG,CAACopL,ErBtCIj/L,IAAAA,GAAO,CHfC,AwBqDF,EAAE,CxBrDA+B,AGeD,CAAK4mL,KqBsCG,CxBrDP,AwBqDQ,CxBrDRjlL,AwBqDSmN,CrBtCV,CAAc63K,CqBsCD,CAAC,CrBtCd,AqBsCe,CrBtCf,AqBsCgB,CAAC53K,ErBtCIrW,CqBsCD,CAAC,CAAC,CAAC,CxBrDtB,AwBqDuB0wB,CrBtCH1wB,CAAOuF,CHfxB,CAAC,AwBqDuB,CAAC,CrBtCR,CAAY0oL,CqBsCD,CAAC,CrBtCZ,CAArB,GAAwC,EAArD;AHdN,IAAM/kL,ACiDJ2/G,KAAA,CAAKg8D,CElCIniL,IHfM,GAAA4E,AGeX,CAAa,CFkCF,GAAG,EDjDH,CAAA4B,CCiDO,EElCIrC,GAAT,EAAc,GHfhB,GAAG,GAAG;AACvB,IAAMsC,ACiDJ0/G,KAAA,CAAKi8D,EElCK,IAAA,CAAKqJ,EFkCD,CDjDM,ECiDH,CDjDG7mL,ECiDA,GElCV,CAAiBb,CHfP,CAAA0C,IGeO1C,CAAOI,GAAP,CAAjB,CAAJ,EAAmC,IHfrB,GAAG,GAAG;AAC5B,IAAMuC,aGeWvC,GAAP,CAAA,GAAconL,GHfK,AGeLA,CAAIpnL,EHfCS,CGeL,CAAd,KHfmB,CAAA8B,uBAAA,GAAG,GAAG;AACnC,IAAMC,ACiDJ,WDjDe,GAAA/B,OAAA,CAAA+B,WAAA,GAAG,GAAG;AACvB,IAAMC,ACiDJu/G,GEtCiB,CAIXnD,CFkCN,CAAKq/D,EEtCY,CAIN,EHfI,EGWE,CHXFz9K,AGWX,CAAA,GFsCa,GDjDF,ACiDK,CDjDLgC,GCiDS,QDjDT,GAAG,GAAG;AACvB,IAAMC,ACiDJs/G,CEzCE,EAOG,EFkCL,CAAKm8D,CEzCH,CAAA,EHRY,GAAA19K,ICiDE,GDjDF,ACiDK,CDjDLiC,ECiDQ,QDjDR,GAAG,GAAG;AACtB,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A,GAAG,IAAI;AACtC,IAAMC,AC0CJi8G,CEjCE,IFiCF,CAAKu9D,WAAW,GAAG,ID1CS,GAAA9+K,KC0CG,ED1CH,CAAAsF,wBAAA,GAAG,IAAI;AACrC,GGhEe,CHgETC,EC2CH,OAAO,IAAI,CAAC+qB,MAAM,CAACuL,GD3CQ,GAAA77B,EC2CA,CAAC6V,ID3CD,CAAAtQ,KC2CW,CAAE,IAAI,CAACpG,MAAO,CAAC,MD3C1B,GAAG,IAAI;AACrC,IAAMqG,AC4CJ,CAAC,MElBQ,SH1BW,AG0BX,GH1BWxF,IG0BX,CAAS2mL,EH1BE,CAAAnhL,AG0BX,EAAc,cH1BH,GAAG,IAAI;AAC7B,IAAMC,AC6CJ87G,IEnBMolE,CFmBN,CAAK5H,CEnBC4H,CH1BM,AG0BFjwK,GH1BE1W,IG0BV,EAAiB,CH1BP,CAAAyF,IC6CU,CEnBIkhL,EFmBD,CD7Cb,AG0BcA,CAAIjwK,EH1Bf,IAAI,CG0BO,CFmBU0qG,AEnBV,CAAP,SFmB2B,EAAG;AD5CnD,IAAM17G,EC8CH07G,KEpBQolE,EH1BI,GAAAxmL,AC8CF,CAACiN,GEpBHu5K,CAAUnsL,EH1BN,CAAAqL,CG0BJ,CAAeihL,GAAf,CAAP,GH1BW,AC8Ce,CAAE,ED9Cd,IAAI,GC8CmB,EAAE3H,SAAU,CAAC;AD7CtD,GGpEe,CHoETr5K,EC8CH,IAAI,CAAC+4K,UD9Ce,GAAA1+K,OAAA,AC8CK,CD9CL2F,EC8CQy7G,UAAU,KD9ClB,GAAG,IAAI;AAC9B,IAAMx7G,AC+CJ,CAAC,MD/CU,GAAA5F,CG2BE,MH3BF,CAAA4F,EG2BE,KH3BF,GAAG,GG2BD,CH3BK,AG2BI+gL,GAAT,EAAc;AH1B7B,IAAM9gL,ACgDJ07G,KAAA,CAAK09D,CErBI0H,GAAAA,KH3BU,AG2BFv5K,GH3BEpN,MG2BjB,CH3BiB,CAAA6F,CCgDO,GAAG,WDhDV,CCgDsB,EDhDnB,IAAI;AAC5B,GGvEe,CHuETC,ECiDH,IAAI,CAAC44K,EDjDO,GAAA1+K,OAAA,CAAA8F,OCiDa,CAAC0H,CDjDd,GAAG,IAAI,WCiD0B,CAAE,SAAS,EAAEwxK,SAAU,CAAC;ADhDxE,IAAMj5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,CInGT,CAAS0nL,KJmGA,CAAA59K,EInGT,EAAmB,aJmGV,GAAG,IAAI;AAC9B,IAAMC,ICkFF60K,IGrLYjgK,IAAAA,CHqLH,CAACkQ,CGrLS64J,CJmGD,CCkFL,EDlFK1nL,CCkFFkO,GGrLGw5K,CHqLC,AGrLQpsG,CHqLPvsE,CDlFH,CAAAhF,CCkFM,CAAEu1C,AGrLP,CAAe,IHqLH,CAAC29H,QDlFd,GAAG,ECkFwB,EDlFpB,ACkFsB/uK,IAAI,CAACY,GAAG,CAAEwwC,KAAK,CAAC49H,UGrL5C,CAAb,EHqLsE,EAAE0B,SAAS,CAAC/vJ,GAAI,CAAE,CAAC;ADjFnG,IAAM7kB,ICmFF40K,IGtLUjgK,IAAAA,CHsLD,CAAC+zJ,GGtLS,IJmGI,AInGjB,CHsLY,CAAC,AGtLM,CJmGF1yK,ACmFH,ODnFG,CAAAgK,qBAAA,GAAG,CAAC;AAC/B,IAAMC,aInGa,KAAP,EJmGc,GAAAjK,OAAA,CAAAiK,oBAAA,GAAG,CAAC;QCqF1B;ADnFJ,eIlGiB;AJmGjB,IAAMC,ICoFF,IAAKo1C,IDpFS,CCoFJ,AGtLK,CHsLJ+9H,CDpFGr9K,GInGD,IJmGC,CAAAkK,ICoFU,KAAK,GDpFf,CCoFmB,EDpFhB,ACoFmB,EDpFjB;AACvB,IAAMC,MCqFDm1C,GGvLUzU,EHuLL,CAAC1rC,EDrFS,GAAAa,CCqFH,CAACiU,AGvLH42B,CAAWlsB,IJkGN,AIlGMA,CJkGNxU,AIlGW,CAAL,CAAX,CAFE,MHyLgB,CAAE01K,IDrFf,GAAG,ECqFqB,EAAEvgI,EDrFjB,GCqFsB,CAACg+H,aAAc,CAAC;ADpFnE,IAAMlzK,ICsFF,CAAC,IGxLUygC,EHwLJ,QGxLIA,CJkGW,AIlGAlsB,GJkGA3e,CIlGA2e,CAAK,CAAL,CAAX,CAHE,EJqGS,CAAAvU,oBAAA,GAAG,aAAa;AAC1C,IAAMC,MCuFDi1C,GGzLUzU,EHyLL,CAAC1rC,MAAM,CDvFQ,ACuFP2U,AGzLH+2B,CAAWlsB,EJkGD3e,ACuFJ,CAAE6/K,CGzLGlhK,CAAK,CAAL,CAAX,EJkGU,CAAAtU,ECuFQ,CAAC,gBDvFT,GAAG,YAAY;AACxC,IAAMC,ICwFF,CG/LM,oBJuGqB,GAAAtK,OAAA,CAAAsK,yBAAA,GAAG,mBAAmB;AAErD,IAAMC,GIhHS,WJgHK,GAAAvK,OAAA,CAAAuK,cAAA,GAAG,QAAQ;AAC/B,IAAMC,ICuFF,KGzLW+gC,GJkGG,GAAAvrC,OAAA,CAAAwK,YAAA,GAAG,MAAM;AAE3B,IAAMC,CIzJW,GH+Ob60C,KAAK,CAACngD,KDtFW,CCsFL,CAAC+U,CDtFIlU,ECsFD,CAAEs/C,IDtFD,CAAA70C,ACsFM,CAACkyK,MAAO,CAAC,ODtFf,GAAG,QAAQ;AAChC,IAAMjyK,ICsFF40C,KAAK,CAACngD,AGxLM,CJkGC,GAAAa,ECsFD,CAAC8U,IDtFA,CAAApK,MCsFW,CAAE40C,IDtFb,CCsFkB,CAACy9H,CDtFhB,IAAI,UCsF2B,EAAEz9H,KAAK,CAAC09H,eAAgB,CAAC;ADpF5E,IAAMryK,ICqFF20C,IGxLU,CHwLL,CAACngD,GDrFS,GAAAa,ACqFH,CAAC8T,AGxLH,GHwLM,CAAEwrC,AGxLR,CAASooI,CJmGJ,CAAA/8K,ECqFQ,CAACgyK,GGxLd,EAAmB,CHwLE,CAAC,GDrFjB,GAAG,CAAC;AACvB,IAAM/xK,ICsFF,IAAIk1K,AGzLQnhK,IAAAA,CJmGG,EInGI+oK,CJmGJ1nL,GCsFA,GAAG,CDtFH,AInGI0nL,CJmGJ98K,AInGa0wE,GHyLL,EGzLJ,CAAe,OJmGnB,GAAG,IAAI,4CInGH,CAAb;AJoGV,IAAMzwE,ICsFF,IGzLU8T,IAAAA,IJmGQ,CInGC,EJmGD3e,EInGZ,EAAmB,GJmGP,CAAA6K,gBAAA,GAAG,IAAI;AAC7B,IAAMC,ICsFF,SGzLe,KJmGK,AInGZ,GJmGY9K,OAAA,CAAA8K,kBAAA,GAAG,IAAI;AAC/B,IAAMC,ICsFF,IAAKu0C,KAAK,CAACy+H,IDtFS,GAAA/9K,KCsFG,EDtFH,CAAA+K,CCsFOg1K,iBDtFP,ACsFwB,GDtFrB,CCsFyBzgI,GDtFrB,ECsF0B,CAAChvB,MAAM,CAAC45C,oBAAoB,EAAG;ADrFxF,IAAMl/D,MCuFD4zK,KGzLY,IHyLH,CAAChwJ,MDvFa,ACuFP,GDvFO5uB,ACuFJggL,ODvFI,CAAAh1K,KCuFS,CAAE4zK,SAAS,CAAChwJ,MDvFrB,ACuF4B,CAAC,EDvF1B,KAAK;AACpC,IAAM3jB,ICwFF,CAAC,MAAM,EG1LQ,KADF,IJmGW,GAAAjL,OAAA,CAAAiL,sBAAA,GAAG,KAAK;AACpC,IAAMC,MCyFD,GG3LU2/B,CH2LJo1I,KDzFU,GAAAjgL,CIlGN6qC,CH2LM,AG3LKlsB,GH2LFigK,CG3LEjgK,CJkGL,AIlGU,CJkGVzT,AIlGK,CAAX,CAFE,IH6LgB,CAAC0jB,MAAM,EDzFnB,GAAG,IAAI;AAE5B,IAAMzjB,MCwFDyzK,GG3LU/zI,MH2LD,CDxFQ,ACwFPjc,GDxFO5uB,AInGP6qC,CAAWlsB,EH2LL,EG3LKA,CH2LFqhK,AG3LO,CJmGT,AInGI,CJmGJ70K,AInGP,CAHE,UH8LoB,CAAEyzK,IDxFjB,GAAG,ECwFuB,CDxFpB,ACwFqBhwJ,MAAM,GAAG3T,KAAM,CAAC;ADvFjE,IAAM7P,MCwFD00K,GG3LUj1I,MJmGM,ECwFL,CDxFK7qC,CInGN6qC,CH2LIo1I,AG3LOthK,IAAAA,CJmGL,AInGU,CJmGVvT,AInGK,CAAX,CAJE,EH+LY,IAAIwzK,ODxFZ,ECwFqB,CDxFlB,ACwFmBhwJ,GDxFhB,GCwFsB;ADvFjD,IAAMvjB,ICyFF,KG5LWw/B,OJmGO,GAAA7qC,AInGP6qC,CAAWlsB,IAAAA,CAAK,CJmGT,AInGI,CJmGJtT,AInGP,gBJmGO,GAAG,GAAG;AAC5B,IAAMC,IC0FFmL,CGnMM,KHmMA,CAACiY,SD1Fe,GAAA1uB,IC0FC,CAAE4+K,ED1FH,CAAAtzK,MC0Fa,CAAC,aD1Fd,GAAG,GAAG;AAChC,IAAMC,GIjHU,eJiHQ,GAAAvL,OAAA,CAAAuL,kBAAA,GAAG,GAAG;AAC9B,IAAMC,IC0FF,KG5LW+/B,UJkGU,GAAAvrC,OAAA,CAAAwL,mBAAA,GAAG,GAAG;AAC/B,IAAMC,IC0FFgL,MAAM,CAAC+V,YD1FkB,GAAAxsB,AC0FH,CAAEq/K,MD1FC,CAAA5zK,IC0FW,CAAC,kBD1FZ,GAAG,GAAG;AACnC,IAAMC,IC2FFmwB,QAAQ,CAAChoB,ID3FU,AC2FN,CAAEyrC,ED3FIt/C,GC2FC,CAACb,GD3FF,CAAAuM,EC2FS,CAAC,CAACoI,GAAG,CAAE2C,MAAO,CAAC,ED3FxB,GAAG,GAAG;AAE7B,CIlLwB,EAkFtB,CJgGI9K,IC2FF2zC,KAAK,CAAChvB,ED3FQ,GAAAtwB,CC2FF,CAACu1B,KD3FC,CAAA5pB,AC2FK,CAAE2zC,KAAK,CAACngD,KD3Fb,CC2FoB,CAAC,CD3FlB,GAAG;AACxB,IAAMyM,IC4FF,EG5LQujD,EH4LH7P,GD5FQ,CIhGL6P,CH4LE,AG5LKw4H,CJgGF3nL,AC4FFq9K,OD5FE,AIjGf,CJiGezxK,KC4FW,KAAK,CD5FhB,GAAG,AC4FiB,EAAG,CD5FjB;AACvB,IAAMC,MC6FD+zK,KG5LY,CJ+FC,GAAA5/K,KC6FC,CAAC2V,CD7FF,CAAA9J,GC6FO,IAAM,CAAC,GAAGyzC,CD7FjB,GAAG,CC6FmB,CAACg+H,CD7FjB,YC6FgC;AD5FxD,IAAMxxK,KI9FK,CH2LN8zK,UD7FiB,GAAA5/K,CC6FH,CAAC6uB,GAAG,ED7FD,CAAA/iB,CC6FO,CAAC,GAAGwzC,KAAK,CAACg+H,KD7FjB,GAAG,GAAG,EC6F0B;AD5FtD,IAAMvxK,MC8FD8zK,EG5LS,MJ8FM,CC8FN,CAACvrK,CD9FKtU,AI9FN,IAAA,CAAS0nL,EJ8FH,CAAA37K,KC8FS,AG5Lf,CH4LiB,CAAC,AG5LC,GH4LEuzC,ID9Ff,CC8FoB,CAACg+H,CD9FlB,GAAG,SC8F6B,CAAC;AD7FxD,IAAMtxK,IC+FF,CAAC,MAAM,AG7LM,IJ8FI,GAAAhM,OAAA,CAAAgM,eAAA,GAAG,GAAG;AAC3B,IAAMC,MCgGD2zK,OG9Lc,KADF,CJ+FQ,CCgGN,CAACvtK,CDhGKrS,ECgGF,CAAE,CAAC,EAAE,CDhGH,ACgGI,CDhGJiM,CCgGM,CAAE,CAAC,gBDhGT,GAAG,GAAG;AAC/B,IAAMC,MCiGD2zK,KG/LY6H,EJ8FE,ECiGL,CDjGK1nL,ACiGJqS,GAAG,AGjMD,CHiMG,CAAC,EDjGF,ACiGI,CDjGJnG,ACiGK,EAAE,CAAE,CAAC,SDjGV,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AI;ID1G7BnkD,GAAA,AIlGJ,KH8MX,IAAMihL,UAAU,GAAG,IAAIp0J,cAAO,CAAEk0J,KAAK,CAACnxK,CAAC,EAAEmxK,KAAK,CAAC5lL,CAAC,EAAE,CAAE,CAAC;ID5GtC1B,KAAA,EAEpB,CC2GKwnL,CGjMS,OJsFdvzK,EC2Ge,AGjMD,CHiMEugB,IGjMF,CAASzQ,IHiME,CAAEuiC,AGjMb,EAAgB,EJsFZnlD,CC2Gc,CAACm2B,ED3GX,EAAEpjB,EC2GgB,CAAC,KD3GT,EAAG;MAElC,IAAK,EC2GDoyC,ED3GK,CAACnyC,AIvFK,CAAC4P,CHkMP,CAACuT,GGlMMvT,CAAMtkB,CAAP,CHkMC,CD3GI,AC2GHojC,AGlMQ9e,KJuFA3P,AIvFA2P,CAAM7hB,CAAhB,CHkMU,CAACgZ,AGlMQ6I,GHkML,CAAEyjK,CD3GG,AIvFAzjK,CAAMtL,CJuFH,AIvFtB,CAAP,GJuFiC,CAACtE,EC2GA,CAAC,CAAC2G,GAAG,CAAEusK,ED3GG,GAAG,CAAC,CAAC,IC2GI,CAAC;MDzG9D,IAAMhzK,EC0GFiyC,KAAK,CAAChvB,CD1GK,GAAG,EC0GF,CAACiT,CD1GK,CAACp2B,UAAU,KC0GC,CAAC,CAAC;KGnNrB,CJ2Gf,IAAKE,EC0GD6yK,OD1GU,CAAE/lL,CC0GH,GD1GO,AC0GJsc,CD1GM,KAAKrJ,AC0GL,CAAC9P,MAAM,CAAC,CD1GM,AC0GL,ED1GQ;QAEtC+P,EC0GE,CAAC,KGnMY,CJyFN,AC0GA,CD1GElT,IAAI,CAAE,GAAG,EAAE;MAEvB,MC0GImY,AGpMQ,OHoMD,CAACC,CGpMA,GHoMI,CAAE,AGpMN,CAASm1K,QAAT,EAAmB,8EHoM6E,CAAC;MDxG7G,IAAKr6K,ECyGDiyC,AGpMQooI,KHoMH,CAAC3J,CDzGI,CAAE5jL,AI3FJutL,CAASpqL,GJ2FD,CAAE,CAACgQ,CI3FX,GHoMU,EGpMU,CJ2FF,ACyGL,AGpMjB,CJ2FwBJ,CI3FG,GHoML,IDzGW,AI3FC,CJ2FA,II3FP,CJ2FY,CAAE,CAAC,EAAG;QAEpDG,ECyGE,KGrMY,EJ4FL,CAAElT,IAAI,CAAE,CAAC8C,IAAI,C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AAE,CAAE,CAAC;QAEjC,IC0GG,OGzMe,KADF;MJkGjB,IC0GG,KG1MYg6K,QAAAA,CAASjvL,CAFP;IJoGlB,IC0GG,CAAC,MAAM,AG3MMivL,IH2MDpoI,IG3MCooI,CH2MI,AG3MKxsL,CH2MJo1B,AG9MH,MH8MS,CAAC45C,oBAAoB,EAAG;ED1GlD,QC4GG,IAAMq2G,CG5MMmH,QH4ME,AG5MFA,CAASj2K,CAJP,CHgNG6tC,KAAK,CAAChvB,MAAM,CAACozB,IAAI;ID5GrCnkD,GAAA,GC6GG+/C,KAAK,AG5MOooI,CH4MNp3J,MAAM,CAACozB,AG5MDgkI,CAASvuL,GH4MJ,GAAG+U,IAAI,CAACa,GAAG,CAAEuwC,KAAK,CAACu9H,OAAO,EAAE3uK,IAAI,CAACY,GAAG,CAAEwwC,KAAK,CAACw9H,OAAO,EAAEx9H,KAAK,CAAChvB,MAAM,CAACozB,IAAI,GAAGzoC,KAAM,CAAE,CAAC;ID7GtGjiB,KAAA,CC+GG,CD7GJ,AItGW,GHmNFunL,MD7GT3yK,GC6GiB,KAAK0xC,KAAK,CD7GZzxC,AC6GayiB,KD7GR,CC6Gc,CD7GX,AC6GYozB,IAAI,EAAG;MD3GzC,IAAK,EC6GDpE,ED7GK,CAACnyC,EC6GD,CAACmjB,MAAM,CD7GI,AC6GHyzB,KD7GQ32C,SAAS,EAAG,MC6GE,CAAC,CAAC;MD3GzC,IAAMC,EC4GFyyK,GG9MW,IJkGA,CIlGP,EJkGU,CC4GH,GD5GO,AC4GJ,CD5GK3yK,GC4GD,OD5GW;MACjC,CIjHc,GJiHRM,AC6GH,aD7GgB,GAAGJ,SAAS,CAAEQ,KAAK,CAAC1T,IAAI,CAAE;MAE7C,EC6GE,ED7GGsT,GIlGQ,SAAA,CJkGK,IIlGL,CJkGUL,AIlGD2P,KAAT,EAAgB,EJkGG,EAAG;QAElClP,AC6GCoN,KD7GI,AC6GC,CD7GA9b,CInGQ,CHgNL,CAAC,GD7GE,GAAG,IAAI;QC8GlB4gL,KGhNWhjK,KAAAA,CAAMtkB,CADJ,KHiNI,GAAG,KAAK;QD5G1B,KInGYskB,KAAAA,CAAM7hB,CAFJ;QJsGd,AC6GC,ID7GK4S,CInGMiP,IJmGD,CInGCA,CAAMtL,CJmGJhE,AItGA,aJsGa,CAACnP,KAAK,CAAE,CAAE,CAAC;QAEtC,AC4GC,KD5GK,AIpGMye,IJoGF9jB,CAAC,AIpGC8jB,CAAM5jB,EJoGJ,CAAC,EAAEoB,CAAC,GAAGuT,KAAK,CAACxQ,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;QC6GhD,CGrNM,CJ0GN6U,KAAK,CAAE7U,CAAC,CAAE,CAACoB,IAAI,CAAE,IAAI,EAAEwT,KAAM,CAAC;QAE/B;KIhIc,GJkIdA,ACyGC,IAAKiyK,CDzGD,CAAC3gL,MAAM,GAAG,ACyGE,IDzGE,AC0GjBmgL,YAAY,CAACxpK,iBAAiB,CAAEwpC,KAAK,CAAChvB,MAAM,CAACuL,QAAS,CAAC,GAAG82I,GAAG,IAC7D,CAAC,IAAK,CAAC,GAAG4M,cAAc,CAACrqK,GAAG,CAAEoqC,KAAK,CAAChvB,MAAM,CAACrI,UAAW,CAAC,CAAE,GAAG0qJ,GAAG,IAC/D6M,kBAAkB,CAAC1pK,iBAAiB,CAAEwpC,KAAK,CAACngD,MAAO,CAAC,GAAGwzK,GAAG,EAAG;MD1GhE,IC4GGrzH,GGnNU,EHmNL,CAAC1xC,aAAa,CAAEwuK,YAAa,CAAC;ID1GvC,MC4GIkD,EGpNS,SAAA,CHoNG,CAACzrK,EGpNJ,CAAS6zK,CHoND,CAAEpoI,KAAK,CAAChvB,AGpNhB,EAAmB,IHoNG,CAACuL,QAAS,CAAC;ED5G7C,QC6GG0jJ,EGpNSpwH,MAAAA,CAAOw4H,KHoNF,CAAC9zK,EGpNN,CAAgB6zK,CHoNN,CAAEpoI,KAAK,CAAChvB,AGpNFo3J,CAASjvL,CAAzB,CAAA,GHoNwB,CAACwvB,AGnN3BknC,MAAAA,CAAOw4H,GHmN+B,CAAC,IGnNvC,CAAgBD,QAAAA,CAASxsL,CAAzB,CADE,IAEFi0D,MAAAA,CAAOw4H,QAAP,CAAgBD,QAAAA,CAASj2K,CAAzB,CAFF,EAE+B;AJqGvC,UC8GG+tK,OGlNc,WHkNI,CAAC3rK,IAAI,CAAEyrC,KAAK,CAACngD,MAAO,CAAC;AD1G5C,IAAM4O,IAAI,EC4GL,CD5GQ,CAAE,IAAI,CC4GP,CD5GS,CIvGA,EHmNL,CD5GS,EAAE,AIxGR,IJwgD,IAAIC,IC4GA,CD5GK,GAAG,GIxGK05K,IJwGE,IIxGFA,CAASjvL,CAFP;AJ6GnB,IAAMwV,IC2GF,GD3GS,GAAGC,CC2GL,AGrNMw5K,GJ0GG,CAACv5K,CC2GL,CD3GO,EI1GNu5K,CJ0GS,AI1GAxsL,CAHP,EJ6GU;AAC7B,IAAMkT,EC4GH,CAAC,ID5GS,GAAG,CI1GCs5K,EJ0GE,GAAGx5K,GI1GLw5K,CJ0GS,AI1GAj2K,CJ0GCtD,EAAE;IC8G3B,CAAC,CAAC,CAAC,IG5NO;AJgHZ,IC8GEozG,KAAA,CAAKp+F,OAAO,GAAG,YAAY;AD7G7B,MC+GGm8B,GD/GMjxC,EC+GD,CAAC+yG,GGzNQ,KAAP,CJ0GW/yG,CAAA,AC+GF,CAACb,CD/GI,kBC+Ge,CAAE,aAAa,EAAEizK,aAAc,CAAC;ED7GtE,IAAMnyK,AC+GJgxC,CGvOY,CJwHN,GAAGpxC,AC+GJ,CAACkzG,GD/GO,CAAC7yG,MAAM,AC+GJ,CD/GK,AC+GJf,CD/GK,GAAG,UAAU,GAAG,CAAC,CC+GH,CAAE,aAAa,EAAEkzK,aAAc,CAAC;ED9GtE,IAAMlyK,AC+GJ8wC,ED/GM,GAAGpxC,AC+GJ,CAACkzG,CGzNM,EJ0GC,CAAC7yG,MAAM,AC+GJ,AGzNJ,CJ0GS,AC+GJf,CD/GK,GAAG,AI1Gb,CAASuP,KAAT,EAAgB,EJ0GO,GAAG,CAAC,CC+GH,CAAE,eAAe,EAAE4jK,WAAY,CAAC;ED9GtE,IAAMlyK,AC+GJ6wC,ED/GM,GAAGpxC,AC+GJ,CAACkzG,GD/GO,AI1GC,CJ0GA7yG,MAAM,AC+GJ,CD/GK,AC+GJf,CD/GK,GAAG,UAAU,GAAG,CAAC,CC+GH,CAAE,OAAO,EAAEozK,YAAa,CAAC;ED9G/D,IAAMlyK,ACgHJ4wC,EDhHM,GAAGpxC,ACgHJ,CAACkzG,CG1NMrkG,EJ0GC,CAACxO,EI1GFwO,CAAMtkB,CADJ,EJ2GM,ACgHJ,CDhHK,ACgHJ+U,CDhHK,GAAG,UAAU,GAAG,CAAC,CCgHH,CAAE,aAAa,EAAEqzK,aAAc,CAAC;ED/GtE,IAAMlyK,ACgHJ2wC,IDhHQ,CCgHH,CAAC8h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MitK,CDrGCnwK,UAAUA,CAAEd,CAAC,CCqGA,CDrGEL,ECqGC,CDrGE,EAAEC,CCqGAqd,EDrGG,EAAG,UCqGC,CAAC,CAAC;EDnGrC,ECoGC,EDpGIjd,CAAC,CCoGCmxK,GDpGGxxK,ECoGE,CDpGC,EAAG,ACoGD,IAAIqE,GDpGI,CAAC,UCoGE,CAAC,CAAC;CGzdL,CJsXvB,AItXD,EH0dE,EDpGIhE,CAAC,CCoGD4wK,GDpGKhxK,GAAG,EAAG,OAAO,CAAC,CCoGF,GAAG,KAAK;AGzN/B,EJuHCI,CAAC,CCoGA,AG3NE2zB,EJuHC,CAAE3zB,CAAC,ACoGA2yK,EG3NJh/I,CJuHOh0B,EIvHPg0B,CJuHU,ECoGE,EG3NZA,CJuHiB/zB,ACoGF,AG3NnB,EH2NqB,CDpGG,GAAGD,GAAG,CAAE;AItHhC,EJwHC,ECmGC,AG3NE84K,IH2NI7F,CDnGA5yK,CAAC,EIxHLy4K,CJwHQz4K,CAAC,CIxHTy4K,GJwHc,CAAC,CIxHfA,CAAJ,CJwHsB,CAAC,CCmGC,EDnGEz4K,CAAC,ACmGA,CDnGE,ACmGD,CAAC;ADjG7B,AIxHA,IH2NE,AG3NI04K,IH2NA7F,KG3NA6F,GAAY,KH2NC,GAAG,CG3NhBA,IH2NqB,KG3NT,CAAA,EAAW;AJ0H7B,ICmGE,KDnGO33K,ICmGEyvK,AG5NE,KAAX,GJyHmBzvK,CAAEf,CAAC,EAAEL,GAAG,EAAEC,GAAG,ACmGH4wK,CAAE7T,CDnGI,QCmGK,EAAG;EDjG5C,IAAK38J,ACmGH,AG5NKu4K,CJyHD,GCmGC5b,CDnGGh9J,GAAG,AIzHN44K,EJyHS,CIzHE33K,EH4NF,IDnGO,CAAC,ACmGH,EG5NHA,CAAUzS,CH4NH,EAAG,GG5NV,GAAmB,CAAnB,GAAuB6xD,MAAAA,CAAOz4C,OAAP,CAAe3G,SAAf,CAAvB,GAAmDA,SAAAA,CAAU,CAAV,CAApE;EJ0HD,IAAKZ,CAAC,CCoGH,CG7NKu3K,EJyHE33K,EIzHT,CJyHY,AIzHAy4K,CH6ND,CDpGI,ACoGH,GAAGt5K,IDpGO,ACoGH,CDpGI,ACoGHC,EAAE,GAAG,AG7NzB,EH6N2B,AG7NE,GH6NCmxC,KAAK,CAAC2+H,CG7NE6J,MAAT,EAAiB,MH6NK,GAAKhc,SAAS;EDlGlE38J,CAAC,GAAG,ACoGF,CDpGIA,ACoGH,CDpGI,AI1HA24K,GJ0HGh5K,ECoGD,CDpGI,AI1HNg5K,CAAOC,IJ0HMh5K,EI1Hb,CJ0HgB,AI1HF24K,GJ0HK54K,GAAG,CAAE,CI1HxB,CAAJ,EAA6B;EJ4HhC,MCoGG,CDpGIK,CAAC,GAAGA,AI3HCu3K,CJ2HA,CCoGF,CAAC,CDpGIv3K,AI3HV,CJ2HW,AI3HC24K,CH+NH55K,GDpGOiB,CAAC,ACoGJ,CAAChB,AG/NF25K,CAAOE,CH+NH,CDpGM74K,CAAC,CCoGJ,EDpGO,ACoGL,CDpGM,ECoGH,CDpGM,CCoGJ,AG/N1B,CJ2HgC,CAAE,AI3HF,CH+NHmwC,EDpGQ,EAAE,CAAE,ACoGP,CAAC2+H,GG/NMgK,UAAT,EH+NkB,AG/NG5B,cAArB,EAAqC;AJ6H3E,MCoGG,WGhOc4B,UAAAA,CAAWn+B,IAAX,CAAgB49B,QAAhB,CAAT;IHkON,QGhOUE,QAAAA,KAAa,KAAb,IAAsB9kJ,MAAAA,KAAW,KAArC,EAA4C;AJ4HpD,ICsGE,SAASm/I,QGjOUn/I,IHiOEm/I,CAAEvtJ,CGjOf,IHiOoB,EAAG;ADrGjC,MCuGG,GDvGMvkB,CCuGA+xK,MDvGO/xK,CAAEC,AI3HDi2K,GJ2HI,EAAEh2K,GCuGC,CDvGG,EAAG,ACuGHnC,GGlOjB,CHkOqB,CAAC8B,CGlOEq2K,EHkOC,CAAE3xJ,KAAK,GAAG,GGlOnC,CHkOwC,CAAC;EDrGlD,ICsGE,GDtGKtkB,GAAG,CCsGDlC,EDtGIA,ECsGA,AGlOG+5K,CHkOF/2K,CDtGG,CAACZ,CCsGD,CAAE,GDtGI,CAAEpC,ACsGF,CGlOd,CHkOgBoxC,EDtGI,AI5HA2oI,CJ4HC15K,ECsGA,CAACivK,GDtGK,CAAC,CAAC,CI5H7B,GJ4HkCntK,ACsGH,GAAG6xK,CDtGI,GAAG9xK,GAAG,GAAG,CAAC,CAAG,CAAC,ECsGF,CAAC;ADpG7D,ICsGE,aGnOe++C,MAAAA,CAAO83H,KAAd;IHqOR,SAASvH,UAAUA,CAAEnqK,KAAK,EAAG;ADtG/B,MCwGGqqK,CG9OG,CAAA,YH8OW,CAACjqK,KAAK,IAAIJ,KAAK;ADvGhC,ICyGE,KDzGOhF,II5HI4+C,KJ4HK5+C,CAAEH,AI5HP++C,CAAO83H,EJ4HG,EAAE52K,CI5HnB,GJ4HuB,EAAG;EAE/B,ECyGC,KDzGMD,GAAG,CCyGA+xK,EDzGGj0K,IAAI,CAACK,CCyGA4zK,CAAE5sK,IDzGI,CAAC,ACyGA,CDzGC,CCyGE,GDzGGlF,IAAI,GAAGD,GAAG,CAAE;AAE5C,GI7IE,CAAA,EHsPCwvK,cAAc,CAAC/wJ,GAAG,IAAItZ,KAAK;IAE5B,KGvOOqyK,QAAP;AJ8HF,CInJA,GH8PE,IAAMxF,OAAO,GAAG,YAAY;AD1G9B,AK3ZA,IAAI8F,EJugBD,GD5GM13K,CC4GAxV,CAAC,GAAG,EIvgBTktL,EJugBa97J,CIvgBb87J,KL2ZoB13K,AK3ZpB03K,CL2ZsBz3K,AK3Z1B,KL2Z+B,EAAG,AC4GV,CAAC,CAAC;AIrgB1B,EL2ZC,EK3ZK03K,EJugBH,GD5GK13K,IC4GE,AIvgBJ03K,CL2ZO,EK3ZK,EL2ZA,GAAG,CC4GF/F,ED5GKl0K,IAAI,CAACK,AC4GH6zK,CAAE1gJ,KD5GO,CAAC,CAAC,CAAE,AC4GH,EAAE2gJ,YAAY,EAAG;AD1GrD,QC4GIrnL,CAAC,CAACm0B,IIxgBQ,SAAA,MJwgBW,CAAEkzJ,GIxgBb,CAAS/nL,CAAT,EAAYG,CAAZ,EAAeO,CAAf,CJwgByB,CIxgBP,CJwgBS,CAAE,CAAC,CAAC,CAAC;QAC1CA,AIxgBMotL,CJwgBL,CAAC9zK,AIxgBI8zK,GAAKl6K,IAAAA,CAAKoC,KAAL,CJwgBK,AIxgBMhW,CJwgBJ,AIxgBIA,CJwgBFonC,EIxgBM,EAAf,CAAA,GJwgBkB,AIxgBG,CJwgBF,AIxgB9B;AL6ZJ,QC6GIm+I,AIxgBMrlL,CAAAA,GAAIF,CAAAA,GAAI,CJwgBL,CAACwZ,AIxgBA,GJwgBG,AIxgBM5F,CJwgBJlT,CAAE,CAAC,CIxgBCkT,CAAKoC,KAAL,CAAWhW,CAAAA,GAAI,EAAf,CAAnB;AL4ZJ,MC8GG,CAAC,CIzgBMO,CL2ZD6V,AK3ZC7V,G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C6HE,MKhuBS,IAAIzV,CNmmBA,EAAEyV,EMnmBN,CAAU,YNmmBW,yBMnmBrB,CAAN;ENomBLC,IC8HE+tC,KAAK,CAACl3B,MAAM,CAAC,CAAC,UD9HY,EAAE7W,4BAA4B;EAC1DyB,EC+HC,KKjuBOozK,ENkmBC,EAAEpzK,GMlmBR,CAAa7Z,CAAb,GAAiB,CNkmBA,GMlmBA,CAAKitL,OAAL,CAAajtL,CAAb,IAAkB,CAAnC;ENmmBHqZ,ECgIC,SDhIU,ACgIDqxK,EDhIGrxK,WCgIUqxK,CAAEh2K,KAAK,EAAG;AD/HlC,CAAC,KCiIE,IAAIkV,WAAW,GAAG,KAAK;ADjIxB,IAEI5P,ECiIH,KDjIU,GAAAnT,ACiID6N,KAAK,CAACu6E,CDjIL,CAAAj1E,ECiIS,KDjIT;EAEZ,MCiIG,GDjIHA,ECiIQmsC,KAAK,CDjIb,ACiIcrhD,EDjIc,ECiIV,CAACigL,EAAE,KKtuBT;INqmBgB,IAAf/uK,CAAC,CCmIV,EDnIUY,CMpmBJy4K,CLuuBD36K,KAAK,CAACi2K,CDnID,CAAAxmL,IMpmBJkrL,CLuuBY,AKvuBE,CNomBV,GCmIY36K,AKvuBhB,CAAP,INomBWkC,ACmIiB,CAACg0K,OAAO,CDnIzB,GCmI6Bl2K,KDnI7BT,ACmIkC,CAAC42K,QDnInC,ACmI2C,EAAG,CDnI9Cj0K,SAAA,MAAG,CAAC;IAAA,IAAErV,CAAC,GAAAqV,ACqIhBoyK,QAAQ,CDrIQ,ACqIN,CDrIM7kL,ACqIL,GAAG4Q,GDrIE,CCqIE,CAACC,EAAE,GAAGmxC,CDrIRvvC,ICqIa,CAAC2tK,IDrId,OCqIyB,CDrIzBtwK,ECqI4BkyC,KAAK,CAAC8hE,CDrIlC,GAAArxG,MCqI4C,CAAC4yK,EDrI7C,MAAG,CAAC,GCqIsD,CAAC;IDrIvD5jL,MCuIrB,CAAC,MAAM,EDvIc,OAAAoU,OAAA;IAExBA,OAAO,CAACxa,ACuIJ4pL,GAAG,CAAE,CAAC,EAAEjjI,EDvIK,CAAClsC,ECuID,CAAC0qK,MDvIS,GAAG,ECuIA,CAAC,CDvIG;IAElC,IAAI,CAAC3uK,CAAC,ACuIH,GDvIMA,CAAC,oBMrmBI;INsmBd,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uL,CAAC,ACkJF6nL,CK/vBO6D,EN6mBF1rL,ACkJF,CDlJG,ACkJD,CAAE4kD,GK/vBL,CAAai4D,CL+vBH,CAACumE,GK/vBX,GAAqB,KL+vBC,AK/vBtB,EL+vBwB,CAAE,CAAC;MDhJjC,ICkJG,GDlJI,IAAI;IAEZ,MCkJI/6J,CKhwBMqjK,OAAL,CAAa3vI,ELgwBH,GAAG,IAAI,AKhwBjB,CAAA,GAA0Bz7C,CAA1B;EN8mBJ,QCmJG;GKlxBH,CN+nBAuE,AM/nBA,ELoxBC,CDrJD;IAAAvG,ECuJC,GDvJD,CCuJM+pB,CDrJP,SAAAzP,CCqJkB,EAAG,ODrJVC,MAAM,EAAG;AM3mBrB,MN6mBE,ECqJE,CKlwBKs1K,CN6mBH,CAAC15K,CAAC,GAAGoE,MAAM,MM7mBjB,CAA4BpU,MAA5B,EAAoCs3C,SAApC,EAA+C;MN8mB7C,ECqJE5oC,CKlwBK9U,CN6mBH,CAAC2B,CAAC,CCqJC,CAAC2qH,CDrJC9xG,MAAM,EM7mBf,CAAsBpU,ILkwBA,CAAC,CAAC,AKlwBxB,EAA8Bs3C,SAA9B,EAAyC;MN+mBzC,ECqJE6I,CKnwBK,IN8mBA,ACqJA,CAACl3B,GDrJG,CM9mBJ,ELmwBO,CAAC,CAAC,EKnwBT,CAAA,EAAW;INgnBnB,ECqJE,IKpwBO,IAAA,CAAKg+J,OAAL,CAAa7uE,KAAb,KAAuB,KAA3B,EAAkC;EN+mBtC,ECwJA,WKtwBa,IAAA,CAAK6uE,OAAL,CAAa3vI,SAAb,CAAP;IN8mBNl3C,AC0JA,GD1JA,MC0JS0kL,sBAAsBA,CAAEp2K,KAAK,EAAG;ID1JzC7U,EC4JC,GD5JD,CC4JM8oL,CD1JP,CM7mBWgH,MLuwBI,CAACxrL,CD1JhBkW,KAAMrE,AC0JgB,CD1Jf,AM7mBF,CAAqB,CN6mBhB,EC0JiB,CAAC,AKvwBvB,CAAA,CLuwB0B;MDxJ9B,EC0JEkyK,ED1JE,CAAClyK,CAAC,CM7mBK,EN6mBFA,CAAC,CM7mBC,CAAKi3K,CLuwBH,CAAC/zK,GAAG,CAAExE,CKvwBR,CAAa4oC,GLuwBA,CAACytI,KAAK,AKvwBnB,CAAP,CLuwB4Br2K,KAAK,CAACs2K,KAAM,CAAC;KK/wBJ,CNunBzC,AC0JC,CAAC,MD1JK,AC0JC,ID1JG;IAEZ,IC0JG,CKxwBK,GLwwBCtoJ,MKxwBD,ELwwBS,GAAGuoJ,CKxwBZ,CAASppL,CAAT,EAAY,mBLwwBwB,CAAE6S,KAAM,CAAC;ED1JpD,MC4JE,EKzwBM,ELywBAsB,CAAC,CKzwBD,CAAKi3K,CLywBD,GAAG,GKzwBP,CLywBYv4K,AKzwBC0pG,KLywBI,AKzwBjB,CLywBkB2sE,IKzwBK,CLywBA,GAAGroJ,CKzwB9B,EAAkC,KLywBI,CAAC1sB,CAAC,CAAE;ID5J9C5P,GAAA,CC6JE,IAAM7E,CAAC,CKzwBGouL,ELywBA,GAAG,IAAKj7K,KAAK,AKzwBnB,CLywBoBs2K,AKzwBC,IAArB,CLywByB,AKzwBzB,GLywB4BtoJ,QAAQ,CAACnhC,CAAC,CAAE;ID7J9C1B,IC+JEqoL,CD/JF,EAED,EM7mBY+E,ML0wBE,CD7Jd3yK,AC6JepB,AK1wBR,CAAaklG,EL0wBF,CAAEpoG,CD7JdzU,AC6Je,CD7Jd,AM7mBA,CL0wBgBA,CD7Jb,AC6Je,CAAC,AK1wBE,KAArB;MN+mBN,AC6JC,ID7JG,CAACA,CAAC,GAAGA,CAAC;IC+JV,ED7JA,KM9mBS0rL,EN8mBF,IAAI,CM9mBP,CAAa3vI,SAAb,CAAA,GAA0Bz7C,CAA1B;INgnBL,AC6JC,SAASqpL,mBAAmBA,CAAEx2K,KAAK,EAAG;ED7JtC,CMjoBA,CAAA,ELgyBC,IAAKi0K,QAAQ,CAACxkL,MAAM,KAAK,CAAC,EAAG;ID/J9BiC,GAAA,CCiKEiiL,QAAQ,CAACnvK,GAAG,CAAExE,KAAK,CAACq2K,KAAK,EAAEr2K,KAAK,CAACs2K,KAAM,CAAC;AK3wB5C95I,IN0mBErxC,CM1mBFqxC,CL6wBG,AK7wBGu+I,CL6wBF,EDnKF,EAED,ECiKS,ODjKTl1K,AM5mBD,GAAuB,UN4mBRhG,AM5mBiBqP,KN4mBZ,AM5mBG,EN4mBD/jB,AM5mBiBy9C,KN4mBZ,EAAG,EM5mBP,EAA2BkyI,iBAA3B,EAA8C;MN8mBnE,AM7mBI5rK,EL8wBF,GK9wBEA,CL8wBI8e,AK9wBEuqJ,EN6mBD14K,KAAK,AM7mBV,CL8wBY,AK9wBE6pG,GL8wBC6sE,EK9wBf,KAAwB,KAA5B,EAAmC,UL8wBQ,CAAEv2K,KAAM,CAAC;QD/JnD,ACiKC,EK/wBMu4K,EL+wBAj3K,CDjKF,ACiKG,CDjKF,ECiKK,CK/wBV,CAAcsnC,CL+wBD,IAAK5oC,IK/wBlB,CL+wBuB,AK/wBvB,CL+wBwBq2K,EK/wBG6E,GL+wBE,GAAGltJ,GK/wBLktJ,CAAKC,IL+wBQ,CAAC75K,CAAC,CAAE,WK/wBjB,CAAwB4N,KAAAA,CAAMqpK,OAAN,CAAc37I,GAAtC,EAA2Ck+I,iBAA3C,CAA3B;GADF,KLixBE,CK/wBK,CN6mBE,ECkKDjuL,CAAC,AK/wBEqiB,CN6mBE,CAAC5N,CAAC,ACkKH,EK/wBD4N,CN6mBO/jB,ACkKH,AK/wBEotL,IL+wBGv4K,CDlKG,EM7mBZ,CAAc0pG,CL+wBA,CAAC4sE,GK/wBf,EL+wBoB,GAAGtoJ,AK/wBC,KAA5B,EAAmC,CL+wBA,CAACnhC,CAAC,CAAE;QAE5C8mL,EDpKuB,CM5mBhByH,KLgxBC,CAAC52K,AKhxBT,CAAc0K,ELgxBF,CAAE5N,CAAC,CKhxBD4N,CLgxBGriB,AKhxBG0rL,CLgxBD,CAAC,KKhxBpB,EAA6B2C,SAAAA,CAAKG,UAAL,CAAgBnsK,KAAAA,CAAMqpK,OAAN,CAAc9rL,CAA9B,EAAiCyiB,KAAAA,CAAMqpK,OAAN,CAAc3rL,CAA/C,EAAkDsiB,KAAAA,CAAMqpK,OAAN,CAAcprL,CAAhE,CAA7B,CAAA;GADK,GLmxBN,EDrKA,CM5mBM,IN4mBD,CAAC;ICuKP,MDvKS,AM3mBD,IN2mBK,AM3mBDa,CN2mBEnB,CAAC,GAAG1B,AM3mBV,CAAU,IN2mBK,mBM3mBf,CAAN;ILoxBF,MDzKyB,GCyKhBsrL,qBAAqBA,CAAEz2K,KAAK,EAAG;CK1xB1C,KL4xBG,ED1KA,EC0KMguB,QAAQ,GAAGuoJ,wBAAwB,CAAEv2K,KAAM,CAAC;AKlxBrDw8B,KAAAA,CLoxBG,AKpxBGy+I,INwmBM,AC4KH/yK,EAAE,GAAGlI,CD5KI,IAAIhS,AC4KH,AKpxBnB,CLoxBoBqoL,EKpxBG,ENwmBI,CAAE,AC4KJ,GAAGroJ,IKpxBI9e,ILoxBI,CAAC5N,AKpxBd,CLoxBe,CKpxBC,WNwmBe,GAAGzB,KAAM,CAAC;MAE9D,AC2KC,AKpxBKo1B,ILoxBC9sB,EAAE,AKpxBH8sB,GLoxBMj1B,AKpxBGk7K,KLoxBE,CAAC5E,GKpxBH4E,CAAKI,CLoxBG,GAAGttJ,MKpxBX,CAAgB9e,CLoxBG,CAACriB,CAAC,EKpxBLqiB,CAAMtkB,CAAtB,EAAyBskB,KAAAA,CAAM7hB,CAA/B,EAAkC6hB,KAAAA,CAAMtL,CAAxC,CAAf;MN2mBA,AC2KC,GKpxBMw3K,CLoxBAvnJ,GD3KA,EMzmBP,CAAc3kB,CNymBH,CC2KI,GAAG7O,AKpxBJ6O,CAAMqpK,GLoxBE,CAAC/wK,GKpxBvB,CLoxB2B,CAAEU,AKnxB3B,ELmxB6B,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAG,CAAC;IDzKjD,EC2KE2rK,CKpxBM7+I,MAAAA,CAAOroC,CADZ,CLqxBS,CAAC4X,GAAG,CAAE,CAAC,EAAEqvB,QAAS,CAAC;ED3K9B,EC6KA,GKrxBOoB,MAAAA,CAAO9nC;GAHd,CN2mBAuE,AC+KA,AK1xBA,GN2mBA,MC+KSglL,wBAAwBA,CAAE12K,KAAK,EAAG;ID/K3C7U,ECiLC,AKtxBG,CAACm2D,ENqmBL,CCiLM7P,CD/KP,EMvmBM6P,CAAO9xD,CLsxBD,CAACkgL,GKtxBP,CNumBN5pK,AMvmBmBmvB,MLsxBI,AKtxBJA,CAAOxoC,CLsxBAgqL,AKtxBpB,CAAL,EAA6B,ENumBhB52K,KAAK,EAAG,SC+KyB,CAAEG,KAAM,CAAC;MD7KvD,AC+KC,IAAKyxC,AKvxBE8mI,INwmBC14K,CC+KE,CAACiwK,CKvxBV,CAAcrjL,CNwmBF,AMxmBZ,GAAkBwoC,GLuxBC,EAAGuhJ,CKvxBJvhJ,CAAOxoC,CAAzB,gBLuxByC,CAAEuT,KAAM,CAAC;GKxxBpD,CL0xBA,ID/KC,CMzmBM,INymBD,AMzmBKshD,CNymBJ,KMzmBIA,CAAO03H,WAAP,CAAmB9pK,KAAAA,CAAMqpK,OAAN,CAAc9rL,CAAjC,CAAJ,EAAyC;IL0xBhD,MDjLS,AMxmBD8rL,GLyxBC5B,IDjLO,AMxmBd,CAAclqL,CAAd,ENwmBkB,CAAC6U,AMxmBD,CNwmBE,AMxmBpB,iBLyxBkCq1K,CAAE32K,KAAK,EAAG;MAE7C,EDlLA,ECkLKyxC,GDlLA,CAAC,CCkLI,CAACi+H,UAAU,EAAG+G,qBAAqB,CAAEz2K,KAAM,CAAC;CKvyBzD,KLyyBG,IDpLQ,ACoLHyxC,KAAK,CAACm+H,CDpLI,IAAI,CAAC/iL,CAAC,KCoLE,EAAGupL,sBAAsB,CAAEp2K,KAAM,CAAC;AKzxB5Dw8B,IL2xBE,CK3xBFA,CAAM++I,ENsmBH,QMtmBH,GAAmB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,KAA/B,EAAsC,GAAtC,CAAnB;AAEAV,IL2xBE,MDvLU,GCuLDjE,GDvLO,EMpmBlBiE,CAAmBr+I,CNomBGxuC,IMpmBHwuC,CNomBQ,AMpmBF1xC,CNomBI,QCuLG8rL,AK3xBhC,CL2xBkC52K,CK3xBE,GAApC,CL2xBuC,CK3xBE,CL2xBC,AK3xB1C,CAAA,QNomBsD,GAAGH,KAAM,CAAC;AMnmBhEg7K,MNqmBE,ACuLC,IAAK5G,QAAQ,AK5xBhB4G,CL4xBiBprL,AK5xBE+sC,KAAAA,CL4xBI,AK5xBE1xC,IL4xBE,CAAC,EAAG,EK5xB/B,EAAoC,GAApC,EAAyC,CAAzC,CAAA;AACA+vL,INsmBC,ICuLGpH,SAAS,CAACjvK,AK7xBdq2K,CAAmBr+I,EL6xBF,CAAEx8B,EK7xBAw8B,CAAM1xC,EL6xBD,CAACurL,KAAK,CK7xB9B,CL6xBgCr2K,CK7xBI,GAApC,CL6xBqC,CAACs2K,AK7xBG,CAAzC,CAAA,GL6xB4C,CAAC;AK3xB7C0E,ENomBE,ICyLC,CAAC,MAAM,KK7xBVA,CAAmBx+I,KAAAA,CAAM1xC,SAAzB,EAAoC,GAApC,CAAA;AACAkwL,INmmBEtpL,GAAA,CC2LE,IAAMs8B,MK9xBVgtJ,CAAmBx+I,CL8xBD,GAAG+5I,CK9xBF/5I,CAAM1xC,SAAzB,EAAoC,GAApC,CAAA,OL8xB6C,CAAEkV,KAAM,CAAC;AK7xBtDg7K,INkmBE7vL,IC6LE,CD7LF,EAED,CC2LSmW,CAAC,GAAG,EK/xBd05K,CL+xBiB,AK/xBEx+I,CNomBlBz2B,GC2LqB/F,CK/xBHw8B,CAAM1xC,CNomBxB,EAAQ,AC2LkB,CAACurL,KAAK,AK/xBjC,EAAoC,CL+xBAroJ,EK/xBpC,CAAA,KL+xB4C,CAAC1sB,CAAC,CAAE;AK7xBhDzW,MNomBE,AMpmBFA,CAAOK,CL8xBH,IAAM2B,CD1LD,AC0LE,GAAG,CD1LD,EC0LI,ED1LA,AMpmBjB,CNomBkB+C,AMpmBI4sC,CL8xBAx8B,IK9xBAw8B,CL8xBK,AK9xBC1xC,CL8xBAwrL,ID1LC,CAAE,AC0LE,GAAGtoJ,AK9xBpC,CNomBmC,CAAC1sB,AMpmBG,CNomBF,EAAE,AMpmBvC,EAA4C,CL8xBA,CD1LD,AC0LEzU,CD1LDA,AC0LE,CD1LA,AC0LE,CD1LD;IAE9C,GMrmBM,CL+xBH4mL,QK/xBG,CL+xBM,CAACjvK,GAAG,CAAElD,AK/xBZ,CL+xBa,AK/xBb,EL+xBezU,AK/xBJ,CL+xBM,CAAC;ED1LvB,IC4LC,KKhyBQ,IAAA,CAAK0rL,OAAL,CAAajtL,CAApB;GAFwC,CNsmB1CoG,EC8LCgiL,CD9LD,UC8LY,CAACntK,UAAU,CAAEktK,SAAS,EAAED,WAAY,CAAC,CAAC/sK,cAAc,CAAEgrC,KAAK,CAACo+H,WAAY,CAAC;ID9LrF1kL,ECgMC,CKjyBI,ENimBL,CCgMOstC,CD9LR,KMnmBM,CLiyBS,GD9LfzyB,AC8LkByrC,EKjyBZ,CAAStkD,CAAT,CNmmBAA,AC8LiB,CD9LhB,AC8LiBomH,AKjyBN,ENmmBR,QC8LwB;MD5LjC,AC8LCs+D,GKlyBM0G,CNomBH,CAACj3K,CAAC,GAAGnU,CAAC,AC8LC,AKlyBT,CNomBSmU,AC8LE,AKlyBEhW,CNomBH,AC8LE,AKlyBZ,GLkyBe+U,AKlyBElT,CAAjB,GLkyBmB,CAACmT,EAAE,GAAGozK,WAAW,CAACpyK,CAAC,GAAGm3B,OAAO,CAACq8I,YAAa,CAAC,CAAC,CAAC;MD7LnE,IAAI,CAACjoL,CAAC,GAAGM,CAAC,CAACN,CAAC;CM3mBd,CAAA,IN6mBE,AC6LCynL,OD7LM,CC6LE,CAAE,CAAC,CD7LD,EC6LIj0K,IAAI,CAACC,EAAE,GAAGozK,WAAW,CAAC7mL,CAAC,GAAG4rC,OAAO,CAACq8I,YAAa,CAAC;AKhyBjEjqL,INqmBC,EC6LE2oL,AKlyBH3oL,CAAOK,ULkyBO,CAAC8a,GKlyBf,CLkyBmB,AKlyBGw2B,CLkyBDi3I,IKlyBCj3I,CAAM1xC,ILkyBG,CAAC,IKlyBhC,EAAuC,KAAvC,EAA8C;ENqmB5C,EC+LA,GKnyBK,SAAA,MAAA,CAAA,EAAW;INomBhB4G,ACiMA,GDjMA,CMnmBM,IAAA,CLoyBGmlL,AKpyBE0B,OAAL,CAAa7uE,KAAb,KLoyBqBmtE,AKpyBE,CLoyBA72K,IKpyB3B,CLoyBgC,CKpyBE,CLoyBC;IDjMrC7U,ECmMC,GDnMD,CCmMM8oL,CDjMP,AMpmBUsE,OLqyBK,AKryBV,CLqyBW9oL,AKryBEmtC,CNomBlB32B,EMpmBK,ENomBA9Y,CAAC,ACiMgB,AKryBE+tL,ENomBf,GCiMkB,CAAC,EAAG,CKryBPA,CAAKM,UAAL,CAAgB,IAAA,CAAK5wL,CAArB,EAAwB,IAAA,CAAKyC,CAA7B,EAAgC,IAAA,CAAKuW,CAArC,CAAnB;MNsmBJ,ECiMEgwK,EDjME,CAACtyK,AMrmBIi3K,CNqmBH,ECiME,CAAC/zK,CDjMCrX,CAAC,CAACmU,ACiMA,AKtyBR,CNqmBS,ACiMCtB,AKtyBG0pG,KLsyBE,AKtyBf,CLsyBgB2sE,EKtyBK,GLsyBA,EAAEr2K,AKtyBvB,KLsyB4B,CAACs2K,KAAM,CAAC;MDhMxC,ACkMC,CAAC,GDlME,CAACzpL,CAAC,CCkME,GDlMEM,CAAC,CAACN,CAAC;MAEb,ECkME,GKvyBO,CLuyBDmhC,CDlMD,EMrmBE,CAAKuqJ,CNqmBH,GCkMK,GAAGhC,AKvyBV,CAAa35I,GAApB,oBLuyByC,CAAE58B,KAAM,CAAC;GK9yBR,CN8mB7C,ICkMG,IAAMsB,CAAC,GAAG,GAAG,IAAKtB,KAAK,CAACq2K,KAAK,GAAGroJ,QAAQ,CAAC1sB,CAAC,CAAE;EDlM9C,KMpmBK,CLuyBH,IAAMzU,CAAC,GAAG,AKvyBP,GLuyBU,GKvyBV,CLuyBemT,AKvyBN7S,CAAT,EAAY,ELuyBQ,CAACmpL,KAAK,GAAGtoJ,QAAQ,CAACnhC,CAAC,CAAE;IDnM9C6E,GAAA,CCqMEkiL,CKxyBK2E,KLwyBC,CAAC/zK,CKxyBP,CAAaklG,CLwyBH,CAAEpoG,CAAC,EAAEzU,AKxyBf,CLwyBiB,CAAC,CKxyBG,KAArB;INmmBF1B,ECuMC,GDvMD,AMlmBOotL,ENomBR,KMpmBG,CAAa37I,GNomBhB12B,AMpmBG,GAAmB/Y,CAAnB,MNomBQP,CAAC,EAAG;MAEd,ACqMCinL,IDrMG,CAACvyK,CAAC,ECqMG,CAACiF,CDrMA3Z,CAAC,QCqMS,CAAEgnL,MAAM,EAAED,QAAS,CAAC,CAACltK,cAAc,CAAEgrC,KAAK,CAACs+H,QAAS,CAAC;CKvzB3E,CAAA,INmnBE,ACsMC2E,GAAG,CDtMA,ACsMEb,CDtMDhnL,CAAC,IAAID,CAAC,CCsMG,CAAC0U,CAAC,EAAEuyK,QAAQ,CAAChnL,CAAE,CAAC;IM76B1B4uL,EPyuBJ,ACsMC9H,ODtMM,CCsME,AM/6BL8H,CN+6BMz1K,EDtMC,AOzuBPy1K,EN+6BU,CAAE7H,MAAO,CAAC,EM/6BpB6H;IP2uBL,ACsMC,kBMh7BYh5J,MAAZ,EAAoBuwB,QAApB,EAA8B;EP0uB9B,ECwMA,SAAS8jI,oBAAoBA,CAAE92K,KAAK,EAAG;IDxMvCtO,EC0MC,CD1MD,EOzuBOgqL,CNm7BA1tJ,QAAQ,GAAGuoJ,AMn7BhB,GAAoB9zJ,MAAAA,CAAOuwB,QAAP,CAApB,KNm7BwC,CAAEhzC,KAAM,CAAC;ID1MnD7U,EC4MC,GD5MD,AOnuBOooH,CN+6BArrG,CD1MR,CC0MU,GAAGlI,IM/6BV,CPquBHmG,AC0MkB,CAACkwK,CM/6BEloK,IN+6BG,GAAG6f,CM/6BN7f,CPquBT7iB,AOruBkBqwL,CPquBjB,EAAE/3K,CAAC,EAAG,AC0MgB,CAACtC,CAAC,KM/6BhB,CAAuB,KAAvB,CAAlB;MPuuBF,ACyMC,GM16BMmhB,CPiuBH,ACyMGta,CDzMF7G,CAAC,ACyMG,GDzMAhW,ACyMG0U,AM16BV,CPiuBQ,CAACsB,CAAC,AOjuBImhB,EN06BC,CDzMF7e,ACyMG0yK,CDzMF,CAACh1K,CAAC,AOjuBhB,EN06BqB,GAAG0sB,QAAQ,CAACnhC,CAAC;MDxMpC,AC0MC,GMt6BMmmD,CP4tBH,AC0MGnf,CD1MFhnC,CAAC,GAAGvB,CAAC,CAACuB,AO5tBT,CP4tBU,AC0MG,EMt6BGmmD,CP4tBHpvC,AC0MGvD,CD1MF,CAACxT,CAAC,CC0MI,CAAC2a,EMt6BrB,ENs6ByB,CAAEU,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAG,CAAC;MDxMhD,AC0MC4rK,GMj6BM6H,IPutBA,CC0ME,CAACp3K,ED1MC,CC0ME,CAAE,AMj6Bb,CNi6Bc,EAAEqvB,AMj6BEt0B,QNi6BO,CAAC,AMj6B1B;IPytBH,EC0MEy0K,GM55BM6H,ON45BI,CAACr3K,GAAG,CAAE,CAAC,EAAEnE,CM55BlB,GN45BsB,AM55BEd,CN45BD8D,GAAG,CAAE0wK,IM55B5B,IN45BoC,CAAClnL,CAAC,GAAGinL,UAAU,CAACjnL,CAAC,EAAE4kD,KAAK,CAACk+H,SAAU,CAAE,CAAC;ED1M5E,IC4MCqF,QAAQ,CAAEhB,UAAU,CAACnnL,CAAE,CAAC;ID5MzB6E,EC8MCoiL,CD9MD,SC8MW,CAAC9tK,IAAI,CAAE+tK,QAAS,CAAC;ID9M5B5oL,ECgNC,GDhND,CCgNO4rL,CD9MR,MC8Me,GD9Mf3wK,AC8MkB,CAAEpG,KAAK,CAACq2K,KAAK,GAAGroJ,CD9MjB7gC,CAAC,EAAEP,CAAC,EAAG,CC8MkB,CAAC0U,CAAC,IAAK,GAAG;MD5MnD,AC6MC,ID7MG,AC6MG01K,CD7MF11K,CAAC,IAAInU,CAAC,AC6MG,CD7MFmU,CAAC,CC6MI,CAAEtB,CD7MHpT,CAAC,GC6MO,CAAC0pL,EMx5BhB+C,GNw5BqB,AMx5BrBA,EAAK,CNw5BmBrrJ,QAAQ,CAACnhC,CAAC,IAAK,GAAG;MD5MnD,AC8MCsoL,ID9MG,CAACtoL,AO3sBE+uL,CP2sBD,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BzG,KAAM,CAAC,SDvNP0F,MAAM,EAAG;MAExB,ACuNC,IDvNG,CAACpE,CAAC,IAAIoE,MAAM;ICyNhB,EDxNA,IAAI,CAAC7Y,CAAC,IAAI6Y,MAAM;IC0NhB,EDxNA,OAAO,ACwNEstK,IDxNE,SCwNWA,CAAEhzK,KAAK,EAAG;AOpgClC,IR8yBC,AQ9yBK+7K,EPsgCH,IAAKtqI,GOtgCFsqI,EPsgCO,CAACtsK,AOtgCI,OPsgCG,KAAK,KAAK,EAAG;EDxNhC,IC0NC,IAAKzP,IOvgCM,CPugCD,AOvgCE,CPugCDu3K,OOvgCA,CADI,GPwgCO,KAAK,OAAO,EAAG;ID1NtC7lL,GAAA,CC4NEgmL,OOxgCW,CAAC,GPwgCD,CAAE13K,GOxgCF,EPwgCQ,AOxgCE,CPwgCD,UOxgCT,EAAuB,WAAvB,EAAoC,SAApC,EAA+C,WAA/C,CAFG;IR8yBhB7U,EC8NC,CAAC,ED9NF,EAED,EC4NS,KOzgCQ,CAAC,CR6yBlBub,OAAQvZ,CAAC,AQ7yBQ,ER6yBL;CQhzBb,KRkzBE,EC4NEwqL,ED5NE,CAACr2K,CAAC,IAAInU,CAAC,CAACmU,CAAC,AC4NA,CAAEtB,KAAM,CAAC;AOxgCxB,IAAMg8K,ER6yBJ,AC6NC,ID7NG,CAACnvL,CAAC,IAAIM,CAAC,AQ7yBP6uL,CR6yBQnvL,CAAC,CQ7yBO,CAAA,CAAtB;AACAy0D,IP2gCE,ED7NA,AQ9yBFA,CAAOu3H,IAAP,CAAYkD,CR8yBH,IAAI,IQ9yBb,EAAuB,UAAS5uL,CAAT,EAAY07F,CAAZ,EAAe;IRgzBrC,AC6NC,KO5gCOgwF,IP4gCE/F,AO5gCT,CAAY3lL,CAAZ,EAAe,OP4gCK2lL,CAAE9yK,EO5gCEtV,CAAT,EP4gCY,AO5gCA,EP4gCG;ED7N9B,IC+NCktL,YO7gCeltL,CP6gCF,AO7gCZ,CP6gCcsV,AO7gCd,GAAmB6oF,CAAnB,CP6gCoB,CAAC;GO9gCvB,CR+yBAn3F,AQ/yBA,EPghCC,CDjOD,OCiOUuiL,QAAQ,CAACxkL,MAAM;COjhC3B,CAAA,ERgzBEtE,ICmOE,CDnOF,EAED,ECiOQ,CAAC,MDjOTwb,aAAcjB,MAAM,EAAG;AQ5yBxB,IAAMu2K,ER8yBJ,ICiOGxqI,GDjOI,ECiOC,CAAC8hE,CDjOE,CAAC9sG,EQ9yBRw1K,GAAmB,GP+gCJ,CAACpE,KDjOM,CAAE,CAAC,GAAGnyK,GQ9yBlC,GR8yByC,CAAC,ICiOC,CAAE1F,KAAK,CAACo3K,SAAU,CAAC;AO7gC9D,IR8yBC,KQ9yBQ8E,CP+gCJzqI,KAAK,CAAC8hE,SO/gCX,CP+gCqB,AO/gCKnsE,CP+gCJznC,EO/gCtB,EAA+B,eP+gCU,CAAE,aAAa,EAAEqzK,aAAc,CAAC;EDjOvE,IQ7yBI5rI,GAAAA,CP+gCDqK,IO/gCS,CP+gCJ,CAAC8hE,CO/gCL,IAAejyD,KP+gCA,CAAC3hD,AO/gCD2hD,CAAO03H,WAAP,CAAmB5xI,GAAnB,CAAnB,EP+gCuC,AO/gCK,CP+gCH,WAAW,EAAE0rI,WAAY,CAAC;IDlOnEphL,GAAA,GCoOG+/C,COhhCM,CAAP,GPghCM,CAAC1xC,aAAa,CAAE0uK,SAAU,CAAC;IDpOnCtjL,KAAA,CCsOG2mE,CDpOJ,ICoOS,GAAGw/G,EDpOZ1qK,GCoOiB,CAACm0F,IAAI,KDpOR35F,CAAC,EAAG;MAEjB,AQ7yBMqsE,IR6yBAnsE,ACoOH,CDpOI,AQ7yBDmsE,GR6yBI,AQ7yBIrmC,GAAAA,CR6yBA,AQ7yBIqmC,CR6yBHnsE,CAAC,GQ7yBF,CAAU26K,gBAAV,CAAd;MAEI,CAAC36H,CR2yBaz0D,ACsOhB,CDtOiB,GAAG,CCsOf,AOjhCFy0D,CPihCG,AOjhCI66H,ER2yBc,CAACtvL,CAAC,EQ3yBvB,CAAc4gF,KAAd,CAAL,EAA2B;MR4yB3B,IAAM/iF,ACuOH,CDvOI,AQ3yBEsyC,GR2yBC57B,ACuODg2K,CDvOE,CAACvwK,KQ3yBHm2B,CAAWywC,CPkhCF,CDvOE,ECuOCwmG,COlhCDxmG,CAAM,CAAN,CAAX,CAAP,GPkhC2B,CAAE,CAAC,CAAE;MDrOlC,IAAI,ACsOD,CDtOEnsE,CAAC,ECsOG0sB,CDtOAtjC,CAAC,CAAE,CAAC,CAAE,GAAG4W,ACsOD,CDtOE,ECsOC4yK,CDtOExpL,CAAC,CAAE,CAAC,CAAE,GAAGmC,CA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vPS,ACuPR5sE,GAAG,CDvPS,AQrxBH4sE,CRqxBIh+D,AQrxBGzU,CRqxBD,AQrxBN,CRqxBO,GQrxBKyyE,MAAAA,CAAOm2G,OAAnB,IAA8B,CAA9C;MRsxBN,IAAI,ACwPD,CDxPE5oL,CAAC,ECwPEmT,AO7gCEm9K,CRqxBD98K,IAAI,ACwPA,CDxPCoC,ACwPAwzK,KDxPK,CAAE,CCwPA,CO7gCf,CAAmB6G,CRqxBA,CAACjwL,ACwPDmT,CDxPG,CAAC,GCwPC,CAACk2K,CO7gCzB,EAA8B52G,IP6gCE,EO7gCFA,CAAO89G,CP6gCDp9K,KAAK,CAACm2K,AO7gCZ,IAAkB,IP6gCE,CO7gClD,CP6gCqD,CO5gCnD72G,MAAAA,CAAO+9G,UAAP,IAAqB,IADvB,EAC6Bl1B,MAD7B,EACqC7oF,MAAAA,CAAOg+G,UAAP,IAAqB,CAD1D,EAEE,CAFF,GAAA,SAAA,SAAA,OAAA,EAMS,KANT,EAMgB,KANhB,EAMuB,KANvB,EAM8B,CAN9B,EAMiC,IANjC,CAAA;MRuxBN,MCwPI,CDxPG,GCwPE7rI,CDxPE,ICwPG,CAACm+H,YAAY,KAAK,KAAK,EAAG;IDtPzC,QCwPK2F,qBAAqB,CAAEv1K,KAAM,CAAC;EDxPlC,SQhxBS,CP0gCL8xD,KAAK,GAAGw/G,KAAK,CAAC9+K,CO1gCd,KP0gCoB;ID1PxBd,GAAA,GC4PG,CAAC,MAAM;ID5PVvG,KAAA,EAED,CC4PK,EO5gCQwvE,EP4gCHlpB,EO5gCGkpB,ERgxBbr3D,CC4Pe,AO5gCK25K,CP4gCJnN,EO5gCImN,CRgxBpB,AQhxBwBM,ERgxBjB,IC4PkB,KAAK,KAAK,CO5gCf,CP4gCkB,GO5gCON,GAAAA,CAAIO,YAA1C;MRkxBN,IAAI,CAACl8K,CAAC,AC4PFq0K,GD5PKt1K,EQjxBIo9K,ERixBA,CAACn6K,IAAI,CAAE,AQjxBd,CAAgBg8D,GRixBE,CAACh+D,AC4PH,CD5PK,AC4PHtB,CD5PI,AQjxBtB,EAAwB,EP6gCA,CAAC;MD3P/B,IAAI,CAACnT,CAAC,AC6PFilE,GD7PKzxD,EC6PA,ED7PI,CAACiD,AC6PFguK,ID7PM,AQjxBE,CRixBA,AC6PH,CAAC5+K,EO/gCY,CRkxBN,AC6PH,CD7PI7F,CAAE,CAAC;MAE5B,IC6PG,GD7PI,IAAI,IQlxBM,KAFa;IRsxB/B,MC6PI,UOhhCa,KAHc;ERsxB9B,MC+PE,cOjhCgB,KAJY;IRsxB9B6E,GAAA,GCiQGogE,KAAK,GAAGw/G,GOlhCM,EPkhCD,CAACv2E,EOvhCa,EPuhCT;IDjQrB5vG,ECmQC,GDnQD,EAED,SAAAia,CQlxBkB7F,KRkxBlB,EAAQ,EQxxBuB;MR0xB9B,ACiQC,IDjQG,ACiQEuyD,CDjQDxwD,CAAC,GAAGjB,ACiQE,IDjQE,CAAC+E,ACiQEksK,EOphCE/xK,GRmxBC,ACiQE,CDjQA,ACiQCw7F,IDjQG,ACiQC,CDjQAz5F,CAAE,ACiQC,CDjQA;MAC7B,ECkQEmwC,EDlQE,CAAC5kD,AQ3xBC,CR2xBA,AQ3xBA,CP6hCC,CAACkT,CDlQCM,IAAI,CAAC+E,KAAK,CAAE,CCkQA,CAAEopK,EDlQE,CAAC3hL,CAAE,CAAC,MCkQM,CAAC;MDhQpC,ACkQC,ODlQM,EQpxBIiwL,ERoxBA,OQpxBL,EAAgBx9G,MAAAA,CAAO89G,OAAP,IAAkB,KAAlC,EACE99G,MAAAA,CAAO+9G,UADT,EACqBl1B,MADrB,EAEE7oF,MAAAA,CAAO22G,OAFT,EAEkB32G,MAAAA,CAAOo+G,MAFzB,EAGEp+G,MAAAA,CAAO62G,QAHT,EAGmB72G,MAAAA,CAAO42G,OAH1B,EAIE52G,MAAAA,CAAOq+G,OAJT,EAIkBr+G,MAAAA,CAAOs+G,QAJzB,CAAA;IRsxBP,ACkQC;EDlQA,ECoQA,SAASjG,WAAWA,CAAE33K,KAAK,EAAG;IDpQ9BtO,ECsQC,CDtQD,OCsQUogE,KAAK;IDtQf3mE,ICwQE,CDxQF,EAED,ECsQQmmL,KAAK,CAAC9+K,CDtQd0U,KCsQoB,ODtQpB,EAAc;MAEb,IAAI,ACsQD,CDtQE5F,CAAC,ECsQEmwC,AOvhCEosI,CRixBDx9K,IAAI,ACsQA,CDtQC8G,ACsQAyoK,GOvhCR,CAAckN,CRixBD,CAAE,IAAI,CAACx7K,CAAE,ACsQF,CDtQG,AQjxBvB,EAAyBg+D,EPuhCA,IOvhCAA,CPuhCK,AOvhCE89G,EPuhCC,KOvhCR,IAAkB,KAA3C,EAAkD99G,MAAAA,CAAO+9G,UAAP,IAAqB,IAAvE,CAAA;MRkxBN,IAAI,ACuQDzH,CDvQE/oL,CAAC,GAAGwT,IAAI,CAAC8G,KAAK,CAAE,IAAI,CAACta,ACuQF,CDvQI,ACuQFmT,CDvQG,ICuQG,CAAC;MDrQjC,ICuQG,GDvQI,IAAI;IAEZ,ICuQG,KAAKsxK,KAAK,CAAC7+K,KAAK;EDvQlB,QCyQG,CO3hCMgrL,GP2hCDhsI,KAAK,AO3hCX,CP2hCYi+H,AO3hCIuN,GAAhB,EAAqBF,GAArB,CAAA,CP2hCsB,KAAK,KAAK,EAAG;IDzQrCrrL,GAAA,EQjxBOqO,CP4hCJ81K,YO5hCD,CAAmBoH,GAAnB,CAAA,GP4hCqB,CAAEj9K,KAAM,CAAC;GOnoCtB,CRw3BV7U,KAAA,CC6QG,CD3QJ,SAAAic,OAAA,EAAS;MAER,EC2QE,AOthCI,ER2wBF,CAAC9F,CAAC,CC2QCgwK,ED3QE,CAAE,CQ3wBL,CPshCM,CAAC5+K,CD3QE,CAAC4O,AQ3wBV,CR2wBW,AC2QD,AOthCD+6K,IAAT,EAAer8K,KAAf,EAAsBumH,IAAtB,EAA4Bu3D,OAA5B,EAAqC;MR4wB3C,EQ3wBQC,ER2wBJ,AC4QD,CD5QElxL,CAAC,AQ3wBEkxL,EPuhCAtsI,CD5QC,AQ3wBMqsI,CR2wBJ,GC4QE,CD5QE,AC4QDhO,CD5QEjjL,CAAC,AQ3wBFixL,IAAW,GPuhCH,EOvhCrB,GPuhC0B,KAAK,EAAG;MD1QpC,EQ5wBMzB,EPwhCHvG,EOxhCGuG,CR4wBC,AQ5wBIj9K,IR4wBA,WC4QU,CAAEY,AOxhCrB,EAA2B,GPwhCA,CAAC;ID1Q/B,MC4QI,COzhCMZ,gBAAL,CAAsBY,KAAtB,EAA6BumH,IAA7B,EAAmCw3D,IAAnC,CAAA;ER6wBJ,GQ9wBE,CP4hCD,KO1hCQ,IAAI1B,IAAAA,CAAK2B,WAAT,EAAsB;IR4wB/BtsL,ACgRA,GDhRA,IQ3wBSssL,WAAL,CAAiB,IAAA,GAAOh+K,KAAxB,EAA+BumH,IAA/B,CAAA;IR2wBJp7H,ACkRA,KDlRA,EAED,ECgRU4nL,ODhRV1rK,IAAKla,CAAC,ACgRgB4lL,CAAE/yK,CDhRf,ICgRoB,EAAG;MD9Q/B,ACgRC,IAAKyxC,CO7hCG2qI,ER6wBF,CQ7wBL,CP6hCS,CAAC3sK,CDhRD,CAACnO,CAAC,GAAGnU,CAAC,ACgRE,CDhRDmU,CAAC,GAAG,ACgRE,IDhRE,CAACzU,ACgRE,CDhRD,GAAGM,ACgREskD,CDhRD,CAAC5kD,CAAC,ECgRI,CAAC6iL,UAAU,KAAK,KAAK,IAAI59G,KAAK,KAAKw/G,KAAK,CAACv2E,IAAI,EAAG;GOrpC5E,CRu4BX,ECgRE/6F,KAAK,CAACw3G,cAAc,CAAC,CAAC;EDhRvB,ICkRC/lE,IOvhCO,CPuhCF,CAAC1xC,OOvhCC,MPuhCY,AOvhCZ,CPuhCcyuK,AOvhCL6N,IAAT,EAAer8K,KPuhCW,AOvhC1B,CPuhC2B,COvhCLumH,IAAtB,EAA4Bu3D,OAA5B,EAAqC;IRqwB7CpsL,ECoRCqkL,CDpRD,CQpwBQgI,IAAAA,GAAOD,OPwhCE,AOxhCFA,CPwhCI9F,GOxhCO,KAAxB,QPwhCiC,CAAEh4K,KAAM,CAAE,CAAC;IDpR9C7U,ECsRCsmD,EOzhCK4qI,CRmwBN,EAED,ACoRO,CAACt8K,AOzhCDs8K,CAAK18K,ORqwBZ2H,KCoRqB,CDpRdna,ACoRgBshL,CDpRf,EAAG,GQrwBR,EAA8B,CPyhCA,CAAC;IAEjC,EDpRA,KQtwBS9uK,ERswBF,IAAI,CAAC2B,CAAC,GAAGnU,CAAC,CAACN,CAAC,GAAG,EQtwBlB,CAAyBmT,CRswBH,CAACnT,CAAC,EQtwBxB,CRswB2BM,CAAC,AQtwBIo5H,CRswBHjlH,CAAC,EQtwB9B,EAAsCy8K,IAAtC,CAAA;IRwwBL,ACoRC,CO7hCE,MAEO,EP2hCA/F,EO3hCIqE,IAAAA,CAAK4B,SP2hCOjG,CAAEh4K,CO3hClB,EAAsB,EP2hCC,EAAG;EDpRnC,ICsRC,IAAMu3D,CO5hCE0mH,GP4hCE,GAAGj+K,KAAK,AO5hCf,CP4hCgBi4K,AO5hCC,IAAA,GAAOj4K,EP4hCC,GO5hCzB,EAA+BumH,IAA/B,CAAA;IRs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ASkL,EAAT,EAAa;IR0uBxB3sL,EC0RC,CD1RD,CQzuBM2qL,IAAAA,GAAOgC,EAAX;IRyuBFlzL,AC4RA,IOpgCQyd,CRwuBR,EAED,GQ1uBSA,GAAS,GR0uBlBX,kBAAmB9a,CAAC,EAAG;IC4RtB,ED1RA,AQ5uBmB0hC,IR4uBb3mB,AQ5uBa2mB,ER4uBX,AQ5uBiB,CPsgChBsiJ,AOtgCQ,ER4uBN,IAAI,CAAC7vK,CAAC,CC0RC6vK,CAAEnxK,CD1RA7S,CAAC,CAACmU,CAAC,CC0RE,EAAG;MAE3B,AOxgC2BytB,ER4uBH5mB,CQ5uBG4mB,CR4uBD,AC4RrB0iB,COxgC2B,ER4uBH,EC4RnB,CAAChiC,CD5RsB,CAAC5iB,CAAC,GAAGM,CAAC,AC4RrB,CD5RsBN,CAAC,GC4RlB,KAAK,IAAI4kD,KAAK,CAACq+H,SAAS,KAAK,KAAK,EAAG;IOxgC5C,CAAf,CR6uBF,AC6RCkG,OD7RM9tK,EAAE,GAAGA,CC6RE,CD7RA,AC6RElI,GD7RCmI,EAAE,AC6RG,CAAC,ED7RDA,EAAE;IAEzB,AC6RC,IO3gCMk0K,IAAAA,CAAKiC,YAAT,EAAuB;ER8uBzB,EC+RA,KO5gCO,IP4gCE9G,YAAYA,CAAEx3K,KAAK,EAAG;ID/R/BtO,ECiSC2mL,CDjSD,QQ5uBaxpJ,GP6gCA,CAAE7uB,AO7gCT,IAAeq8K,CP6gCA,CAAC,EO7gCDA,CAAKkC,UAApB;IR4uBNpzL,ECmSC,GDnSD,EAED,GCiSW8oL,CO9gCGllJ,GAAP,ER6uBP3mB,ECiSmB,AO9gCEi0K,CP8gCD5sL,GO9gCC4sL,CAAKmC,EP8gCA,OO9gCnB,IR6uBcrxL,CAAC,EAAG;MAExB,ECiSE,KDjSKkT,ACiSA,CAAC,CO/gCKg8K,ER8uBF,CAACl6K,CQ9uBCk6K,CAAKiC,CR8uBH,CAAE,IAAI,CAACh9K,CAAC,GAAGnU,CAAC,AQ9uBrB,CR8uBsBmU,CAAE,CAAC,GAAGjB,IAAI,CAAC8B,GAAG,CAAE,IAAI,CAACtV,CAAC,GAAGM,CAAC,CAACN,CAAE,CAAC;IAE3D,GQnvBK,GPohCD,KOhhCUwvL,GPghCD5qI,COphCR,IPohCa,CAAC++H,OAAO,CAACvgF,GAAG;EDjS7B,UCmSI,KAAKt9F,YAAK,CAACH,MAAM;IDnSrBd,GAAA,IQ7uBSkX,GPkhCJ,GOlhCH,CPkhCQ6oC,KAAK,CAACm+H,YAAY,KAAK,KAAK,EAAG;GOrvC/B,CRg9BVzkL,KAAA,EAED,GCqSMirL,MDrSN/tK,UAAW5Y,MAAM,ACqSW,CAAEuQ,CDrSV,ICqSgB,CAAC;MDnSpC,MQzuBU,CRyuBH,CCqSF8xD,GDrSM,CAAC3sD,CCqSF,EO9gCA,CP8gCGmsK,KDrSQ,ACqSH,CDrSI,ACqSH8B,CDrSI,AQzuBb,CRyuBc3sK,AQzuBL41K,IAAT,EAAe,IP8gCM,IDrSO,CAAE5sL,MAAO,CAAC;IAEjD,OQ1uBU4sL,GP+gCJ,CO/gCIA,KAASluK,QAAAA,CAASswK,aAAlB,KAAoCpC,IAAAA,CAAK/vL,IAAL,IAAa+vL,IAAAA,CAAKqC,IAAtD,CAAP;ER0uBF,UCuSI,KAAK/rL,YAAK,CAACD,GAAG;CO7vCpB,GRs9BEhB,GAAA,OCySK,IAAK+/C,KAAK,CAACq+H,SAAS,KAAK,KAAK,EAAG;IDzStC3kL,ASh/BIwzL,KTg/BJ,EAED,GCySMnI,MDzSN50K,CSl/BK+8K,GAAAA,CTk/BCxxL,CAAC,EAAEmb,KAAK,ACySW,CAAEtI,AQ3xCtB2+K,CTk/BY,ICySgB,CAAC,KQ3xC7BA,EAAAA;MTo/BJ,IAAI,CAACr9K,CAAC,ECySDwwD,EDzSK,CAAE3kE,CAAC,CAACmU,ACySJ,CDzSK,ECySFgwK,CDzSK,IAAI,ACySJ,CDzSKhwK,ACySJ+xK,CDzSK,IAAK/qK,ICySD,CDzSM;MAClC,IAAI,CAACzb,CAAC,EC0SD,ED1SK,CAAEM,CAAC,CAACN,CAAC,GAAG,IAAI,CAACA,CAAC,ASp/BZ41B,ITo/BiBna,ESp/B7B,EAAoB0qC,CTo/Bc,OSp/BlC,EAA8B;MTs/B9B,MC0SI,CD1SG,IAAI;IAEZ,UC0SM8e,KAAK,GAAGw/G,KAAK,CAACv2E,IAAI,sGQjyCft4E,MADsB,EACduwB,QADc,CAAA,CAAA;ETw/B9B,MSr/BQ0gE,ERiyCL,GQjyCKA,GAAAA,MAAN;ITq/BFhiH,GAAA,GC8SG,CQlyCIktL,MAAL,GAAc,MAAA,CAAK5rB,QAAL,CAAA,CAAd;ITo/BF7nK,ICgTE,CDhTF,EAED,ASp/BQ0zL,ERkyCA,CAAC,MD9STt2K,CSp/BG,GAAkB4F,QTo/BR3F,ASp/BQ2F,CAASwtK,CTo/Bf,EAAElzK,EAAE,EAAEH,KAAK,CSp/BL,CTo/BQ,ASp/Be,OAAvB,CAAlB;MTs/BF,IAAI,AC8SD,CD9SEhH,ASr/BEu9K,CTq/BD,GAAGr2K,EAAE,CAAClH,AC8SAmwC,CD9SC,ESr/BX,CTq/Bc,ASr/BEpG,CTq/BA5iC,AC8SD,CAAC+nK,CD9SE,CAAClvK,CAAC,GAAGkH,CC8SA,CD9SE,AC8SDioK,CD9SEnvK,CAAC,ASr/B3B,CRmyC2B,AQnyCE,GTq/BGgH,GSr/BhC,ETq/BqC,ASr/BA,UAArC,CAAA;MTs/BF,IAAI,CAACzb,CAAC,AC+SF,CQnyCOiyL,ETo/BFt2K,EAAE,AC+SF7V,CD/SG9F,CAAC,ESp/BX,CTo/Bc,ASp/Bd,CTo/BgB4b,CSp/BI,CTo/BF,CAAC5b,CAAC,EC+SR,CD/SW2b,AC+SV5V,ED/SY,CAAC/F,CAAC,IAAKyb,CC+SV,ID/Se;MAEvC,MSr/BU49D,CTq/BH,CC+SF,GD/SM,CC+SDz0B,EQpyCN,CAAe,CAACiiE,CRoyCL,CAACg8D,GQpyCIh8D,CAAMkrE,MRoyCA,AQpyCtB,CAAA,IRoyC2B,KAAK,IAAIntI,KAAK,CAACq+H,SAAS,KAAK,KAAK,EAAG;ID7SrE,UC+SM4G,wBAAwB,CAAE12K,KAAM,CAAC;ED/StC,MSp/BMuwG,IAAJ,CAAS,CRqyCNz+C,KAAK,AQryCC,CAAK+sH,ERqyCHvN,KAAK,CAACgC,EQryCjB,EAA0B,QAA1B,EAAoCwL,CRqyCJ,OQryChC,EAA8C,KAA9C,CAAA;ITo/BFptL,GAAA,ISl/BO6hH,GRqyCF,OQryCH,CAAgBwrE,WAAhB,CAA4B,MAAA,CAAKF,UAAjC,CAAA;ITk/BF1zL,KAAA,EAED,ASj/BQ2wL,CRoyCH,KAAKnpL,GDnTV+V,ISj/BG,CAAA,CAAA,CTi/BKvb,CAAC,CCmTM,CDnTH,ACmTI0F,YAAY;MDjT3B,OAAW1F,CAAC,ACmTP,CDnTQmU,CAAC,ECmTJmwC,GDnTS,ECmTJ,CAACi+H,CDnTO,CAACpuK,CAAC,IAAQnU,CAAC,CAACN,CAAC,ACmTV,KDnTe,ACmTV,IDnTc,CAACA,ACmTV,CDnTa,GCmTT4kD,KAAK,CAACm+H,YAAY,KAAK,KAAK,EAAG;IDjTxE,UCmTM+G,2BAA2B,CAAE32K,KAAM,CAAC;EDnTzC,YCqTK8xD,KAAK,GAAGw/G,KAAK,CAACiC,kBAAkB;IDrTrC7hL,GAAA,OCuTK;IDvTLvG,KAAA,EAED,CCuTK,QDvTLwd,SSp/BUxb,CTo/BC8S,ASp/BD9S,EAAG,GTo/BG,EAAe;MAAA,IAAbyb,ASn/BTmxK,IR4yCHjoH,EDzTkB,ESn/BfioH,CTm/Be73K,ACyTb,EQ5yCF63K,CR4yCKzI,EQ5yCLyI,CAAAA,ER4yCU,CDzTK,ACyTJh/E,CDzTItrG,GCyTA,GDzTA,OSn/BfsqL,CTm/Be73K,ASn/Bf63K,STm/Be,ASn/BfA,CAAAA,OTm/Bex6K,ESn/Bfw6K,IAAAA,GTm/Be,GAAA73K,ASn/Bf63K,CAAAA,QTm/Be,MAAG,ASn/BlBA,CTm/BmB,ASn/BnBA,iBAAAA,CAAAA,SAAAA,CAAAA,EAAAA,UAAAA,EAAAA,IAAAA,CAAAA,CAAAA,IAAAA,CAAAA,IAAAA,EAA0B5sL,CAA1B,CAAN;MTq/BF,IAAI,ACyTD,AQ7yCG,CTo/BDmU,CAAC,ESp/BA,CTo/BGrB,ASp/BE47K,KTo/BG,CAAEjzK,MAAM,CAAE,GSp/BtB,EAA2B;MTq/B7B,IAAI,AC0TD,CD1TE/b,CAAC,CSp/BGgvL,ETo/BA57K,KAAK,CAAE2I,MAAM,ESp/BlB,CTo/BqB,ASp/BCpc,CTo/BA,CAAE,ESp/BxB,CAA2B,IAA3B,EAAiC,IAAA,CAAKwmK,QAAL,CAAA,CAAjC,CAAA;MTs/BJ,EC0TE,KD1TK,IAAI;IAEZ,MC0TIlhG,CQhzCI8sH,IRgzCC,EQhzCN,CRgzCStN,EQhzCK,GRgzCA,CAACv2E,AQhzCD,CAAKi4D,GRgzCA,KQhzCL,CAAA,CAAd;ETs/BF,IC4TC,OQjzCQ+mB,QAAP;ITq/BFroL,EC8TC,CD9TD,GC8TMogE,KAAK,KAAKw/G,KAAK,CAACv2E,IAAI,EAAG;ID9T7B5vG,ICgUEsmD,CDhUF,EAED,EC8TQ,CAAC1xC,MD9TT8I,OC8TsB,CD9TtB,AC8TwB2lK,ED9TU,SC8TE,CAAC;MD9TH,ACgUhC,IDhUOvuK,KAAK,GAAAiC,SAAA,CAAAzS,MAAA,QAAAyS,SAAA,QAAA3C,SAAA,GAAA2C,SAAA,MAAG,EAAE;ICkUlB,EDlUkB,IAAE0G,MAAM,GAAA1G,SAAA,CAAAzS,MAAA,CSp/BV,OTo/BUyS,SAAA,QAAA3C,SAAA,GAAA2C,SAAA,MAAG,CAAC;ICoU9B,EDlUAjC,ISr/BM,CTq/BD,CAAE2I,CCkUE8uK,CQvzCH,CAAK1kB,GTq/BE,CAAE,GAAG,CSr/BZ,CRuzCc0kB,AQvzCd,CRuzCgB13K,AQvzChB,CTq/BgB,CAACsB,CAAC,ECkUG,AQvzCD,ERuzCI,EQvzC5B,EAA8B;MTs/BhCrB,ACmUCo4K,KDnUI,CAAEzvK,CSr/BEi2K,KTq/BI,ACmUA,CAAE7+K,EDnUC,CAAC,CAAE,ASr/Bf,CRwzCiB,AQxzCDqrC,CRwzCE,CDnUA,IAAI,CAACx+C,CAAC,ISr/BxB,CAA6B,SAA7B,EAAwC,SAAxC,CAAA;MTu/BJ,ACmUC,ODnUMoT,ASt/BE4+K,CRyzCC/sH,IDnUE,CCmUG,IQzzCX,CAAgBktH,OAAhB,GAA0B,IAA1B;ITw/BL,ICmUG,KAAK1N,AQ1zCEsN,KR0zCG,CAACxL,AQ1zCT,GAAc,IAAd,KR0zCqB;EDnUzB,KS1/BE,GR+zCC,GQ3zCM,CR2zCD3hI,KAAK,CAACm+H,YAAY,KAAK,KAAK,EAAG;IDrUvCl+K,GAAA,GCuUGklL,GQ5zCMiI,UAAL,CAAgBG,OR4zCI,AQ5zCpB,CR4zCsBh/K,EQ5zCI,GR4zCE,CAAC,CQ5zC7B;ITq/BJ7U,KAAA,CCyUGsmD,CDvUJ,ESt/BUmtI,ER6zCD,CAACrkK,GQ7zCL,CTs/BLzR,ECuUgB,AQ7zCG,CR6zCF,CAAC,GQ7zCb,aTs/BgBC,SAAS,EAAElJ,KAAK,EAAG;MAEvC,IAAI,ACuUD,CDvUEyB,CAAC,GAAGyH,SAAS,CAACC,IAAI,CAAEnJ,KAAM,CAAC;MAChC,ECwUE,EDxUE,CAAChT,CAAC,CCwUCykL,EDxUEvoK,GCwUG,CAACsqK,KDxUK,CAACpqK,GCwUG,CDxUC,CAAEpJ,KAAM,CAAC;MAEhC,ICwUG,GDxUI,CCwUC4xC,GDxUG,ECwUE,CAACq+H,SAAS,KAAK,KAAK,EAAG;IDtUrC,MCwUI+G,kBAAkB,CAAE72K,KAAM,CAAC;EDxU9B,QC0UGyxC,KAAK,CAACl3B,MAAM,CAAC,CAAC;EQ72CakhK,ETmiC9B/pL,GAAA,GC4UG,EQ/2C2B+pL,CAAAA;ITmiC9BtwL,AU/hCI8zL,IT62CF,CD9UF,EAED,EC4UQ3N,KAAK,CAACgC,CD5UdpqK,AUjiCK+1K,GAAAA,UViiCS91K,AUjiCT81K,CT62CwB,KD5UT,EAAEv3K,GUjiCjBu3K,EViiCsB,AUjiCtBA,EViiCyB;MAE7B,IAAMzzL,AC4UH,CD5UI,GAAG6U,AC4UFoxC,ID5UM,CAAC3tC,AC4UF,CAAC4rK,ED5UI,CAAEhoK,KAAM,CAAC,CC4UH,KAAK,KAAK,IAAI+pC,KAAK,CAACq+H,SAAS,KAAK,KAAK,EAAG;QD5UrCljL,CAAC,CC8U3BqqL,ED9U8B52K,IAAI,CAAC0D,GAAG,CAAE2D,KAAM,CAAC,CUliCtC+a,KTg3Cc,CAAEziB,ASh3C5B,EAAoBgzC,GTg3Cc,CAAC,ISh3CnC,EAA8BksI,IAA9B,EAAoC;MVoiCpC,IAAM59K,AC8UHmwC,CD9UI,GAAG,CC8UF,CAACl3B,ED9UK,CAACjZ,CAAC,EC8UD,CD9UI6H,AC8UH,CAAC,KD9UQ,CAAC7H,CAAC;MAC3B,IAAMzU,AC+UH,CD/UI,GAAG,IAAI,CAACA,CAAC,GAAGsc,MAAM,CAACtc,CAAC,qGUpiCnB41B,MAD4B,EACpBuwB,QADoB,CAAA,CAAA;MVuiCpC,EC+UE,ASn3CIv7B,EVoiCF,CAACnW,CAAC,CC+UCgwK,ED/UEhwK,AUpiCHmW,CVoiCI,EC+UE,ASn3CIynK,CVoiCH1zL,AC+UA+nL,CD/UC,EUpiCZ,CVoiCe1mL,CAAC,GAAGD,CAAC,GAAGuc,MAAM,AC+UA,CD/UC7H,CAAC;MACjC,EUniCQoyG,EVmiCJ,ACgVD,CDhVE7mH,CAAC,CUniCE6mH,CTm3CAjiE,CDhVCnwC,CAAC,AUniCFoyG,GVmiCK9mH,ACgVA,CDhVC,ACgVA8iL,ESn3CZ,CVmiCe7iL,CAAC,GAAGrB,CAAC,ECgVE,CDhVC2d,ICgVI,EDhVE,CAACtc,CAAC,CCgVC,IAAI4kD,KAAK,CAACm+H,YAAY,KAAK,KAAK,EAAG;MD9UrE,ICgVGsH,CS/2CIiI,EV+hCA,IAAI,EU/hCT,GAAgBhxK,QAAAA,CAASwtK,KT+2CE,CAAE37K,KAAM,CAAC,CS/2CpB,CAAuB,QAAvB,CAAhB;IViiCH,IU/hCOshD,ET+2CH7P,IS/2CG6P,CT+2CE,AS/2CK3uC,CT+2CJ4H,MAAM,AS/2CT,CT+2CU,AS/2CK9C,CT+2CJ,MS/2CX,CAAJ,EAA6B;EV+hC/B,QCkVG,ASh3COyf,GAAAA,GAAM,CAAA,CAAZ;IV8hCJxlC,GAAA,CCoVE,KSj3CSmnL,IAAP,CAAYphK,OAAZ,EAAqB,UAASghB,OAAT,EAAkB;IV6hC3CttC,KAAA,CCsVG2mE,CDpVJ,CU9hCWr5B,GTk3CF,GAAG64I,CSl3CL,CV8hCP5wK,AU9hCO,GTk3CU,ASl3CK+3B,CTk3CJsiE,GDpVlB,CCoVsB,CDpVb,CU9hCF;MVgiCN,ACoVC,CSr3CG,CAAA,EViiCA,CAACz5F,CAAC,GAAGjB,IAAI,CAACK,MAAM,CAAC,CAAC;ICsVtB,EDrVA,IAAI,CAAC7T,CAAC,GAAGwT,CU/hCK62B,GV+hCD,AU/hCT,CV+hCUx2B,MAAM,CAAC,CAAC;ICuVtB,EDrVA,OAAO,ACqVEkyK,IDrVE,SCqVWA,CAAE5yK,KAAK,EAAG;IDnVjC,ECqVE,IAAKyxC,CSr3CGonI,ITq3CE,ASr3CT,CTq3CUppK,ASr3CEgI,OTq3CK,ASr3CjB,EAAqB,GTq3CC,KAAK,EAAG,ASr3CAtsB,KAAT,EAAgBuG,GAAhB,EAAqB;EVgiC5C,ICuVCsO,ISt3CSo/K,CTs3CJ,CAAC5nE,CSt3CG4nE,GAAMjxK,QAAAA,CAASwtK,CTs3CJ,CAAC,CAAC,USt3CP,CAAuB,QAAvB,CAAZ;IV+hCJjqL,ACyVA,GDzVA,EAEErG,CUhiCMg0L,KVgiCA,CAAC9zL,GUhiCL,GAAgBmG,EVgiCH,CUhiCb;IVgiCavG,ACyVjB,KDzViB,CU/hCTkgD,GTw3CCisI,SSx3CL,CTw3CeA,ASx3CE,CV+hCJ7sL,ACyVIuV,KAAK,CSx3CtB,CTw3CyB,CSx3CC7U,KAA1B,CAAA,KV+hCa,GAAA2E,IAAA,CAAlB,SAAA3E,MAAA;MAAA,AC2VE8oL,MSz3CSkL,CV8hCX10L,CC2VU,CAAC2E,IAAI,CAAE4Q,ASz3CZ,CAAe++K,ITy3CE,CAAC3H,MD3VvB,AU9hCK,CAA2BgI,EV8hChCpzL,AC2ViC,CAAC,ASz3C7B,CAAA,EV8hCL,UAAAod,OAAAC,SAAA;IC6VC,CS/3CE,CAAA,EVkiCH,kBAAAA,SAAA,CAAA9Y,IAAA,GAAA8Y,SAAA,CAAAza,IAAA;IC+VC,MD/VD,CU1hCQktL,ETy3CElE,WSz3CP,CAAA,CTy3CoBA,ASz3CpB,CTy3CsB53K,KAAK,EAAG;MAE/B,ESz3CKuwG,IVwhCPlnG,AUxhCG,CTy3CM6qK,ASz3CG,MAAA,CAAKiL,CVwhCjB,CAAAvwL,IAAA,EUxhCG,CTy3CsB,CAAEoR,ASz3CA,KTy3CK,CAACo3K,ESz3C9B,EAAkC,KTy3CK,CAAE,MSz3CI;MT23C9C,IS13CSkI,CT03CH,CDjWP,GCiWWl0L,CAAC,GDjWN,ACiWS,CAAC,EAAEA,AS13CRk0L,CVyhCA,ACiWS,CDjWRh+K,CAAC,AUzhCa,CT03CH2yK,GS13CG,CAAKx8J,IT03CA,CAAChoB,ES13CN,CAAa,GT03CD,CS13CC,CT03CCrE,AS13CIm0L,CT03CH,EAAG,EAAG,QS13CrB,CAAA,CAAiCp0L,KAAtD;QT43CF,EDnWU,ECmWL8oL,AS33CG/tG,QT23CK,AS33CX,CT23Ca96E,AS33CEk0L,CT23CD,CAAE,IAAIt/K,KAAK,CAACo3K,AS33C1B,CAAA,QT23CmC,EAAG;KS73CxC,CAAA,IT+3CCnD,EDrWS5qK,MCqWD,CAACvJ,EDrWA,CAAAlR,GCqWM,CDrWN,ACqWQxD,CAAC,EAAE,C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J,EtBqpD8C/pK,MAAA,AsBrpDlD,CAAaugK,MAAb,EAAqB,MAArB,CAAA;ItBqpDkD,EsBnpD5C+U,EtBmpDM77K,KAAK,AsBnpDX67K,GtBmpDW5qL,AsBnpDDiM,QAAAA,CtBmpDC,AsBnpDQwtK,CtBmpDRlsL,MAAA,MsBnpDD,CAAuB,CtBmpDtByS,KsBnpDD,CAAhB,GtBmpDiB,QAAA3C,SAAA,GAAA2C,SAAA,MAAG,CAAC;IAAA,IAAEgP,EsBlpDfmuK,ItBkpDqB,GAAAn9K,EsBlpD7B,GAAoB,ItBkpDS,CAAAzS,AsBlpD7B,MtBkpD6B,QAAAyS,SAAA,QAAA3C,SAAA,GAAA2C,SAAA,MAAG,CAAC;IAAA,EsBjpD7Bq/K,EtBipD+B9pK,MsBjpDnC,CtBipD0C,AsBjpD7Bq1K,GtBipD6B5qL,IsBjpD1C,EAAsB,GtBipDoB,CAAAzS,IsBjpD1C,CAAA,CtBipD0C,QAAAyS,SAAA,QAAA3C,SAAA,GAAA2C,SAAA,MAAG,CAAC,CAAC;IAAAhR,EsBhpD3CqwL,QAAJ,CAAauL,ItBgpDkC,GsBhpD/C,EAAsB,EtBgpDyBx1K,OsBhpD/C,CAAA,ItBgpD+C;IAE/CE,EsBhpDMu1K,ItBgpDN,GAAAl5K,AsBhpDMk5K,GAAU5+K,OtBgpDhB,CsBhpDgBA,CAASwtK,KtBgpDzBrkK,QsBhpDgB,CAAuB,GtBgpDvC,GsBhpDgB,CAAhB;ItBkpDAE,MAAA,AsBjpDQ6nK,CtBipDH3nK,QsBjpDL,GAAoB,GtBipDD,GAAG,EsBjpDtB,EtBipD0B;IAE1BF,EsBlpDI+pK,ItBkpDJ,CAAKtwK,GsBlpDL,CAAa87K,CtBkpDH,GAAG97K,GsBlpDb,EtBkpDkB,AsBlpDI,QAAtB,CAAA;ItBmpDAuG,EsBlpDI+pK,ItBkpDJ,CAAKrwK,GsBlpDL,CAAa67K,EtBkpDF,GAAG77K,EsBlpDd,EAAsB,EtBkpDF,MsBlpDpB,CAAA;ItBmpDAsG,EsBjpDMw1K,ItBipDN,CAAKr1K,CsBjpDCq1K,GAAS9D,CtBipDL,EsBjpDKA,CtBipDF,AsBjpDM6B,CtBipDL,csBjpDC,GAAsB58K,QAAAA,CAASwtK,aAA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","file":"main17.fac4578e.js","sourceRoot":"..\\src","sourcesContent":["/**\n * @license\n * Copyright 2010-2023 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '163';\n\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst ConstantColorFactor = 211;\nconst OneMinusConstantColorFactor = 212;\nconst ConstantAlphaFactor = 213;\nconst OneMinusConstantAlphaFactor = 214;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\nconst AgXToneMapping = 6;\nconst NeutralToneMapping = 7;\nconst AttachedBindMode = 'attached';\nconst DetachedBindMode = 'detached';\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst UnsignedInt5999Type = 35902;\nconst AlphaFormat = 1021;\nconst RGBFormat = 1022;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst RGB_BPTC_SIGNED_Format = 36494;\nconst RGB_BPTC_UNSIGNED_Format = 36495;\nconst RED_RGTC1_Format = 36283;\nconst SIGNED_RED_RGTC1_Format = 36284;\nconst RED_GREEN_RGTC2_Format = 36285;\nconst SIGNED_RED_GREEN_RGTC2_Format = 36286;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\nconst DisplayP3ColorSpace = 'display-p3';\nconst LinearDisplayP3ColorSpace = 'display-p3-linear';\n\nconst LinearTransfer = 'linear';\nconst SRGBTransfer = 'srgb';\n\nconst Rec709Primaries = 'rec709';\nconst P3Primaries = 'p3';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst NeverCompare = 512;\nconst LessCompare = 513;\nconst EqualCompare = 514;\nconst LessEqualCompare = 515;\nconst GreaterCompare = 516;\nconst NotEqualCompare = 517;\nconst GreaterEqualCompare = 518;\nconst AlwaysCompare = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst WebGLCoordinateSystem = 2000;\nconst WebGPUCoordinateSystem = 2001;\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn value / 4294967295.0;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.max( value / 2147483647.0, - 1.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn Math.round( value * 4294967295.0 );\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.round( value * 2147483647.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nconst MathUtils = {\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize\n};\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tVector2.prototype.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tMatrix3.prototype.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n21, n22, n23, n31, n32, n33 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tscale( sx, sy ) {\n\n\t\tthis.premultiply( _m3.makeScale( sx, sy ) );\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tthis.premultiply( _m3.makeRotation( - theta ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tthis.premultiply( _m3.makeTranslation( tx, ty ) );\n\n\t\treturn this;\n\n\t}\n\n\t// for 2D Transforms\n\n\tmakeTranslation( x, y ) {\n\n\t\tif ( x.isVector2 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x.x,\n\t\t\t\t0, 1, x.y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x,\n\t\t\t\t0, 1, y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotation( theta ) {\n\n\t\t// counterclockwise\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0,\n\t\t\ts, c, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0,\n\t\t\t0, y, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nconst _m3 = /*@__PURE__*/ new Matrix3();\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nconst _cache = {};\n\nfunction warnOnce( message ) {\n\n\tif ( message in _cache ) return;\n\n\t_cache[ message ] = true;\n\n\tconsole.warn( message );\n\n}\n\n/**\n * Matrices converting P3 <-> Rec. 709 primaries, without gamut mapping\n * or clipping. Based on W3C specifications for sRGB and Display P3,\n * and ICC specifications for the D50 connection space. Values in/out\n * are _linear_ sRGB and _linear_ Display P3.\n *\n * Note that both sRGB and Display P3 use the sRGB transfer functions.\n *\n * Reference:\n * - http://www.russellcottrell.com/photo/matrixCalculator.htm\n */\n\nconst LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = /*@__PURE__*/ new Matrix3().set(\n\t0.8224621, 0.177538, 0.0,\n\t0.0331941, 0.9668058, 0.0,\n\t0.0170827, 0.0723974, 0.9105199,\n);\n\nconst LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = /*@__PURE__*/ new Matrix3().set(\n\t1.2249401, - 0.2249404, 0.0,\n\t- 0.0420569, 1.0420571, 0.0,\n\t- 0.0196376, - 0.0786361, 1.0982735\n);\n\n/**\n * Defines supported color spaces by transfer function and primaries,\n * and provides conversions to/from the Linear-sRGB reference space.\n */\nconst COLOR_SPACES = {\n\t[ LinearSRGBColorSpace ]: {\n\t\ttransfer: LinearTransfer,\n\t\tprimaries: Rec709Primaries,\n\t\ttoReference: ( color ) => color,\n\t\tfromReference: ( color ) => color,\n\t},\n\t[ SRGBColorSpace ]: {\n\t\ttransfer: SRGBTransfer,\n\t\tprimaries: Rec709Primaries,\n\t\ttoReference: ( color ) => color.convertSRGBToLinear(),\n\t\tfromReference: ( color ) => color.convertLinearToSRGB(),\n\t},\n\t[ LinearDisplayP3ColorSpace ]: {\n\t\ttransfer: LinearTransfer,\n\t\tprimaries: P3Primaries,\n\t\ttoReference: ( color ) => color.applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB ),\n\t\tfromReference: ( color ) => color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ),\n\t},\n\t[ DisplayP3ColorSpace ]: {\n\t\ttransfer: SRGBTransfer,\n\t\tprimaries: P3Primaries,\n\t\ttoReference: ( color ) => color.convertSRGBToLinear().applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB ),\n\t\tfromReference: ( color ) => color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ).convertLinearToSRGB(),\n\t},\n};\n\nconst SUPPORTED_WORKING_COLOR_SPACES = new Set( [ LinearSRGBColorSpace, LinearDisplayP3ColorSpace ] );\n\nconst ColorManagement = {\n\n\tenabled: true,\n\n\t_workingColorSpace: LinearSRGBColorSpace,\n\n\tget workingColorSpace() {\n\n\t\treturn this._workingColorSpace;\n\n\t},\n\n\tset workingColorSpace( colorSpace ) {\n\n\t\tif ( ! SUPPORTED_WORKING_COLOR_SPACES.has( colorSpace ) ) {\n\n\t\t\tthrow new Error( `Unsupported working color space, \"${ colorSpace }\".` );\n\n\t\t}\n\n\t\tthis._workingColorSpace = colorSpace;\n\n\t},\n\n\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\tif ( this.enabled === false || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tconst sourceToReference = COLOR_SPACES[ sourceColorSpace ].toReference;\n\t\tconst targetFromReference = COLOR_SPACES[ targetColorSpace ].fromReference;\n\n\t\treturn targetFromReference( sourceToReference( color ) );\n\n\t},\n\n\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\treturn this.convert( color, this._workingColorSpace, targetColorSpace );\n\n\t},\n\n\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\treturn this.convert( color, sourceColorSpace, this._workingColorSpace );\n\n\t},\n\n\tgetPrimaries: function ( colorSpace ) {\n\n\t\treturn COLOR_SPACES[ colorSpace ].primaries;\n\n\t},\n\n\tgetTransfer: function ( colorSpace ) {\n\n\t\tif ( colorSpace === NoColorSpace ) return LinearTransfer;\n\n\t\treturn COLOR_SPACES[ colorSpace ].transfer;\n\n\t},\n\n};\n\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement === 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nlet _sourceId = 0;\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _sourceId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\t\tthis.dataReady = true;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.from( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nlet _textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = Texture.DEFAULT_ANISOTROPY, colorSpace = NoColorSpace ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\t\tthis.channel = 0;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\tthis.colorSpace = colorSpace;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.pmremVersion = 0; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value = null ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\t\tthis.channel = source.channel;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.colorSpace = source.colorSpace;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\t\t\tchannel: this.channel,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tinternalFormat: this.internalFormat,\n\t\t\ttype: this.type,\n\t\t\tcolorSpace: this.colorSpace,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tgenerateMipmaps: this.generateMipmaps,\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tset needsPMREMUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.pmremVersion ++;\n\n\t\t}\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\nTexture.DEFAULT_ANISOTROPY = 1;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tVector4.prototype.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\t\tthis.w = Math.trunc( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass RenderTarget extends EventDispatcher {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isRenderTarget = true;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\toptions = Object.assign( {\n\t\t\tgenerateMipmaps: false,\n\t\t\tinternalFormat: null,\n\t\t\tminFilter: LinearFilter,\n\t\t\tdepthBuffer: true,\n\t\t\tstencilBuffer: false,\n\t\t\tdepthTexture: null,\n\t\t\tsamples: 0,\n\t\t\tcount: 1\n\t\t}, options );\n\n\t\tconst texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\ttexture.flipY = false;\n\t\ttexture.generateMipmaps = options.generateMipmaps;\n\t\ttexture.internalFormat = options.internalFormat;\n\n\t\tthis.textures = [];\n\n\t\tconst count = options.count;\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.textures[ i ] = texture.clone();\n\t\t\tthis.textures[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\tthis.depthBuffer = options.depthBuffer;\n\t\tthis.stencilBuffer = options.stencilBuffer;\n\n\t\tthis.depthTexture = options.depthTexture;\n\n\t\tthis.samples = options.samples;\n\n\t}\n\n\tget texture() {\n\n\t\treturn this.textures[ 0 ];\n\n\t}\n\n\tset texture( value ) {\n\n\t\tthis.textures[ 0 ] = value;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.textures.length; i < il; i ++ ) {\n\n\t\t\t\tthis.textures[ i ].image.width = width;\n\t\t\t\tthis.textures[ i ].image.height = height;\n\t\t\t\tthis.textures[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.textures.length = 0;\n\n\t\tfor ( let i = 0, il = source.textures.length; i < il; i ++ ) {\n\n\t\t\tthis.textures[ i ] = source.textures[ i ].clone();\n\t\t\tthis.textures[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tconst image = Object.assign( {}, source.texture.image );\n\t\tthis.texture.source = new Source( image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass WebGLRenderTarget extends RenderTarget {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLRenderTarget = true;\n\n\t}\n\n}\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.isDataArrayTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.isData3DTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update = true ) {\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize(); // normalize calls _onChangeCallback()\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// sets this quaternion to a uniform random unit quaternnion\n\n\t\t// Ken Shoemake\n\t\t// Uniform random rotations\n\t\t// D. Kirk, editor, Graphics Gems III, pages 124-132. Academic Press, New York, 1992.\n\n\t\tconst theta1 = 2 * Math.PI * Math.random();\n\t\tconst theta2 = 2 * Math.PI * Math.random();\n\n\t\tconst x0 = Math.random();\n\t\tconst r1 = Math.sqrt( 1 - x0 );\n\t\tconst r2 = Math.sqrt( x0 );\n\n\t\treturn this.set(\n\t\t\tr1 * Math.sin( theta1 ),\n\t\t\tr1 * Math.cos( theta1 ),\n\t\t\tr2 * Math.sin( theta2 ),\n\t\t\tr2 * Math.cos( theta2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.toArray();\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tVector3.prototype.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t// quaternion q is assumed to have unit length\n\n\t\tconst vx = this.x, vy = this.y, vz = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// t = 2 * cross( q.xyz, v );\n\t\tconst tx = 2 * ( qy * vz - qz * vy );\n\t\tconst ty = 2 * ( qz * vx - qx * vz );\n\t\tconst tz = 2 * ( qx * vy - qy * vx );\n\n\t\t// v + q.w * t + cross( q.xyz, t );\n\t\tthis.x = vx + qw * tx + qy * tz - qz * ty;\n\t\tthis.y = vy + qw * ty + qz * tx - qx * tz;\n\t\tthis.z = vz + qw * tz + qx * ty - qy * tx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$c.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$c );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromColor( c ) {\n\n\t\tthis.x = c.r;\n\t\tthis.y = c.g;\n\t\tthis.z = c.b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst theta = Math.random() * Math.PI * 2;\n\t\tconst u = Math.random() * 2 - 1;\n\t\tconst c = Math.sqrt( 1 - u * u );\n\n\t\tthis.x = c * Math.cos( theta );\n\t\tthis.y = u;\n\t\tthis.z = c * Math.sin( theta );\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector$c = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox3 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = array.length; i < il; i += 3 ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromArray( array, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = attribute.count; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromBufferAttribute( attribute, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\t\t// precise AABB computation based on vertex data requires at least a position attribute.\n\t\t\t// instancing isn't supported so far and uses the normal (conservative) code path.\n\n\t\t\tif ( precise === true && positionAttribute !== undefined && object.isInstancedMesh !== true ) {\n\n\t\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\tif ( object.isMesh === true ) {\n\n\t\t\t\t\t\tobject.getVertexPosition( i, _vector$b );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_vector$b.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_vector$b.applyMatrix4( object.matrixWorld );\n\t\t\t\t\tthis.expandByPoint( _vector$b );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( object.boundingBox !== undefined ) {\n\n\t\t\t\t\t// object-level bounding box\n\n\t\t\t\t\tif ( object.boundingBox === null ) {\n\n\t\t\t\t\t\tobject.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( object.boundingBox );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// geometry-level bounding box\n\n\t\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( geometry.boundingBox );\n\n\t\t\t\t}\n\n\t\t\t\t_box$4.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tthis.union( _box$4 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$b );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$4.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$4, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$4 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$b ).distanceTo( point );\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\ttarget.makeEmpty();\n\n\t\t} else {\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( _vector$b ).length() * 0.5;\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\n\nconst _box$4 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$4 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$3 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.isSphere = true;\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$3.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.center.copy( point );\n\n\t\t\tthis.radius = 0;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t_v1$6.subVectors( point, this.center );\n\n\t\tconst lengthSq = _v1$6.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t// calculate the minimal sphere\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\n\t\t\tconst delta = ( length - this.radius ) * 0.5;\n\n\t\t\tthis.center.addScaledVector( _v1$6, delta / length );\n\n\t\t\tthis.radius += delta;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\tif ( sphere.isEmpty() ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.copy( sphere );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t this.radius = Math.max( this.radius, sphere.radius );\n\n\t\t} else {\n\n\t\t\t_v2$3.subVectors( sphere.center, this.center ).setLength( sphere.radius );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _v2$3 ) );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _v2$3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, t );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$a ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$a.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t\treturn _vector$a.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.origin ).addScaledVector( this.direction, s0 );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segCenter ).addScaledVector( _segDir, s1 );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$a.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$a.dot( this.direction );\n\t\tconst d2 = _vector$a.dot( _vector$a ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if t1 is behind the ray - if so, return null\n\t\tif ( t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\tif ( tymin > tmin || isNaN( tmin ) ) tmin = tymin;\n\n\t\tif ( tymax < tmax || isNaN( tmax ) ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$a ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tMatrix4.prototype.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x.x,\n\t\t\t\t0, 1, 0, x.y,\n\t\t\t\t0, 0, 1, x.z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$4.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$4.elements[ 0 ] *= invSX;\n\t\t_m1$4.elements[ 1 ] *= invSX;\n\t\t_m1$4.elements[ 2 ] *= invSX;\n\n\t\t_m1$4.elements[ 4 ] *= invSY;\n\t\t_m1$4.elements[ 5 ] *= invSY;\n\t\t_m1$4.elements[ 6 ] *= invSY;\n\n\t\t_m1$4.elements[ 8 ] *= invSZ;\n\t\t_m1$4.elements[ 9 ] *= invSZ;\n\t\t_m1$4.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$4 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\n\t\tlet c, d;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tc = - ( far + near ) / ( far - near );\n\t\t\td = ( - 2 * far * near ) / ( far - near );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tc = - far / ( far - near );\n\t\t\td = ( - far * near ) / ( far - near );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makePerspective(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a; \tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b; \tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c; \tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\n\t\tlet z, zInv;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tz = ( far + near ) * p;\n\t\t\tzInv = - 2 * p;\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tz = near * p;\n\t\t\tzInv = - 1 * p;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makeOrthographic(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\t\tte[ 8 ] = 0; \t\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0; \t\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0; \t\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0; \t\tte[ 6 ] = 0;\t\tte[ 10 ] = zInv;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0; \t\tte[ 7 ] = 0;\t\tte[ 11 ] = 0;\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$4 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix$2 = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DEFAULT_ORDER ) {\n\n\t\tthis.isEuler = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix$2.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix$2, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n}\n\nEuler.DEFAULT_ORDER = 'XYZ';\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$3 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nconst _childaddedEvent = { type: 'childadded', child: null };\nconst _childremovedEvent = { type: 'childremoved', child: null };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DEFAULT_UP.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\n\n\t\tthis.matrixWorldAutoUpdate = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE; // checked by the renderer\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonAfterShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( _m1$3.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$3.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$3.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$3 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$3.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$3 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tobject.removeFromParent();\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t\t_childaddedEvent.child = object;\n\t\t\tthis.dispatchEvent( _childaddedEvent );\n\t\t\t_childaddedEvent.child = null;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t\t_childremovedEvent.child = object;\n\t\t\tthis.dispatchEvent( _childremovedEvent );\n\t\t\t_childremovedEvent.child = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\treturn this.remove( ... this.children );\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$3.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$3.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$3 );\n\n\t\tobject.removeFromParent();\n\t\tobject.parent = this;\n\t\tthis.children.push( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t_childaddedEvent.child = object;\n\t\tthis.dispatchEvent( _childaddedEvent );\n\t\t_childaddedEvent.child = null;\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetObjectsByProperty( name, value, result = [] ) {\n\n\t\tif ( this[ name ] === value ) result.push( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].getObjectsByProperty( name, value, result );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tconst child = children[ i ];\n\n\t\t\tif ( child.matrixWorldAutoUpdate === true || force === true ) {\n\n\t\t\t\tchild.updateMatrixWorld( force );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null && parent.matrixWorldAutoUpdate === true ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tif ( child.matrixWorldAutoUpdate === true ) {\n\n\t\t\t\t\tchild.updateWorldMatrix( false, true );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( Object.keys( this.userData ).length > 0 ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\t\tobject.up = this.up.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\tif ( this.isBatchedMesh ) {\n\n\t\t\tobject.type = 'BatchedMesh';\n\t\t\tobject.perObjectFrustumCulled = this.perObjectFrustumCulled;\n\t\t\tobject.sortObjects = this.sortObjects;\n\n\t\t\tobject.drawRanges = this._drawRanges;\n\t\t\tobject.reservedRanges = this._reservedRanges;\n\n\t\t\tobject.visibility = this._visibility;\n\t\t\tobject.active = this._active;\n\t\t\tobject.bounds = this._bounds.map( bound => ( {\n\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\tboxMin: bound.box.min.toArray(),\n\t\t\t\tboxMax: bound.box.max.toArray(),\n\n\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\tsphereRadius: bound.sphere.radius,\n\t\t\t\tsphereCenter: bound.sphere.center.toArray()\n\t\t\t} ) );\n\n\t\t\tobject.maxGeometryCount = this._maxGeometryCount;\n\t\t\tobject.maxVertexCount = this._maxVertexCount;\n\t\t\tobject.maxIndexCount = this._maxIndexCount;\n\n\t\t\tobject.geometryInitialized = this._geometryInitialized;\n\t\t\tobject.geometryCount = this._geometryCount;\n\n\t\t\tobject.matricesTexture = this._matricesTexture.toJSON( meta );\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tobject.boundingSphere = {\n\t\t\t\t\tcenter: object.boundingSphere.center.toArray(),\n\t\t\t\t\tradius: object.boundingSphere.radius\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tobject.boundingBox = {\n\t\t\t\t\tmin: object.boundingBox.min.toArray(),\n\t\t\t\t\tmax: object.boundingBox.max.toArray()\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.animations = source.animations.slice();\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DEFAULT_UP = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nObject3D.DEFAULT_MATRIX_AUTO_UPDATE = true;\nObject3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$2 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\ttarget.set( 0, 0, 0 );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\t// if the triangle is degenerate then we can't contain a point\n\t\tif ( this.getBarycoord( point, a, b, c, _v3$2 ) === null ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn ( _v3$2.x >= 0 ) && ( _v3$2.y >= 0 ) && ( ( _v3$2.x + _v3$2.y ) <= 1 );\n\n\t}\n\n\tstatic getInterpolation( point, p1, p2, p3, v1, v2, v3, target ) {\n\n\t\tif ( this.getBarycoord( point, p1, p2, p3, _v3$2 ) === null ) {\n\n\t\t\ttarget.x = 0;\n\t\t\ttarget.y = 0;\n\t\t\tif ( 'z' in target ) target.z = 0;\n\t\t\tif ( 'w' in target ) target.w = 0;\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttarget.setScalar( 0 );\n\t\ttarget.addScaledVector( v1, _v3$2.x );\n\t\ttarget.addScaledVector( v2, _v3$2.y );\n\t\ttarget.addScaledVector( v3, _v3$2.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetInterpolation( point, v1, v2, v3, target ) {\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, v1, v2, v3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\treturn this.set( r, g, b );\n\n\t}\n\n\tset( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\n\t\t\tconst value = r;\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.setRGB( r, g, b );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^(\\w+)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 1 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 2 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 3 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 1 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 2 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 3 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL(\n\t\t\t\t\t\t\tparseFloat( color[ 1 ] ) / 360,\n\t\t\t\t\t\t\tparseFloat( color[ 2 ] ) / 100,\n\t\t\t\t\t\t\tparseFloat( color[ 3 ] ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color model ' + style );\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\treturn this.setRGB(\n\t\t\t\t\tparseInt( hex.charAt( 0 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 1 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 2 ), 16 ) / 15,\n\t\t\t\t\tcolorSpace\n\t\t\t\t);\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\treturn this.setHex( parseInt( hex, 16 ), colorSpace );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Invalid hex color ' + style );\n\n\t\t\t}\n\n\t\t} else if ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\treturn Math.round( clamp( _color.r * 255, 0, 255 ) ) * 65536 + Math.round( clamp( _color.g * 255, 0, 255 ) ) * 256 + Math.round( clamp( _color.b * 255, 0, 255 ) );\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\ttarget.r = _color.r;\n\t\ttarget.g = _color.g;\n\t\ttarget.b = _color.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ r.toFixed( 3 ) } ${ g.toFixed( 3 ) } ${ b.toFixed( 3 ) })`;\n\n\t\t}\n\n\t\treturn `rgb(${ Math.round( r * 255 ) },${ Math.round( g * 255 ) },${ Math.round( b * 255 ) })`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\treturn this.setHSL( _hslA.h + h, _hslA.s + s, _hslA.l + l );\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\tthis.r = v.x;\n\t\tthis.g = v.y;\n\t\tthis.b = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\t\tconst e = m.elements;\n\n\t\tthis.r = e[ 0 ] * r + e[ 3 ] * g + e[ 6 ] * b;\n\t\tthis.g = e[ 1 ] * r + e[ 4 ] * g + e[ 7 ] * b;\n\t\tthis.b = e[ 2 ] * r + e[ 5 ] * g + e[ 8 ] * b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nconst _color = /*@__PURE__*/ new Color();\n\nColor.NAMES = _colorKeywords;\n\nlet _materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\t\tthis.alphaHash = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\t\tthis.blendColor = new Color( 0, 0, 0 );\n\t\tthis.blendAlpha = 0;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\t\tthis.forceSinglePass = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: parameter '${ key }' has value of undefined.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: '${ key }' is not a property of THREE.${ this.type }.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity !== undefined && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.anisotropy !== undefined ) data.anisotropy = this.anisotropy;\n\t\tif ( this.anisotropyRotation !== undefined ) data.anisotropyRotation = this.anisotropyRotation;\n\n\t\tif ( this.anisotropyMap && this.anisotropyMap.isTexture ) {\n\n\t\t\tdata.anisotropyMap = this.anisotropyMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapRotation !== undefined ) data.envMapRotation = this.envMapRotation.toArray();\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors === true ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = true;\n\n\t\tif ( this.blendSrc !== SrcAlphaFactor ) data.blendSrc = this.blendSrc;\n\t\tif ( this.blendDst !== OneMinusSrcAlphaFactor ) data.blendDst = this.blendDst;\n\t\tif ( this.blendEquation !== AddEquation ) data.blendEquation = this.blendEquation;\n\t\tif ( this.blendSrcAlpha !== null ) data.blendSrcAlpha = this.blendSrcAlpha;\n\t\tif ( this.blendDstAlpha !== null ) data.blendDstAlpha = this.blendDstAlpha;\n\t\tif ( this.blendEquationAlpha !== null ) data.blendEquationAlpha = this.blendEquationAlpha;\n\t\tif ( this.blendColor && this.blendColor.isColor ) data.blendColor = this.blendColor.getHex();\n\t\tif ( this.blendAlpha !== 0 ) data.blendAlpha = this.blendAlpha;\n\n\t\tif ( this.depthFunc !== LessEqualDepth ) data.depthFunc = this.depthFunc;\n\t\tif ( this.depthTest === false ) data.depthTest = this.depthTest;\n\t\tif ( this.depthWrite === false ) data.depthWrite = this.depthWrite;\n\t\tif ( this.colorWrite === false ) data.colorWrite = this.colorWrite;\n\n\t\tif ( this.stencilWriteMask !== 0xff ) data.stencilWriteMask = this.stencilWriteMask;\n\t\tif ( this.stencilFunc !== AlwaysStencilFunc ) data.stencilFunc = this.stencilFunc;\n\t\tif ( this.stencilRef !== 0 ) data.stencilRef = this.stencilRef;\n\t\tif ( this.stencilFuncMask !== 0xff ) data.stencilFuncMask = this.stencilFuncMask;\n\t\tif ( this.stencilFail !== KeepStencilOp ) data.stencilFail = this.stencilFail;\n\t\tif ( this.stencilZFail !== KeepStencilOp ) data.stencilZFail = this.stencilZFail;\n\t\tif ( this.stencilZPass !== KeepStencilOp ) data.stencilZPass = this.stencilZPass;\n\t\tif ( this.stencilWrite === true ) data.stencilWrite = this.stencilWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaHash === true ) data.alphaHash = true;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = true;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = true;\n\t\tif ( this.forceSinglePass === true ) data.forceSinglePass = true;\n\n\t\tif ( this.wireframe === true ) data.wireframe = true;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\t\tthis.blendColor.copy( source.blendColor );\n\t\tthis.blendAlpha = source.blendAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaHash = source.alphaHash;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\tthis.forceSinglePass = source.forceSinglePass;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst _tables = /*@__PURE__*/ _generateTables();\n\nfunction _generateTables() {\n\n\t// float32 to float16 helpers\n\n\tconst buffer = new ArrayBuffer( 4 );\n\tconst floatView = new Float32Array( buffer );\n\tconst uint32View = new Uint32Array( buffer );\n\n\tconst baseTable = new Uint32Array( 512 );\n\tconst shiftTable = new Uint32Array( 512 );\n\n\tfor ( let i = 0; i < 256; ++ i ) {\n\n\t\tconst e = i - 127;\n\n\t\t// very small number (0, -0)\n\n\t\tif ( e < - 27 ) {\n\n\t\t\tbaseTable[ i ] = 0x0000;\n\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// small number (denorm)\n\n\t\t} else if ( e < - 14 ) {\n\n\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t\tshiftTable[ i ] = - e - 1;\n\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t\t// normal number\n\n\t\t} else if ( e <= 15 ) {\n\n\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\n\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t\t// large number (Infinity, -Infinity)\n\n\t\t} else if ( e < 128 ) {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// stay (NaN, Infinity, -Infinity)\n\n\t\t} else {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t}\n\n\t}\n\n\t// float16 to float32 helpers\n\n\tconst mantissaTable = new Uint32Array( 2048 );\n\tconst exponentTable = new Uint32Array( 64 );\n\tconst offsetTable = new Uint32Array( 64 );\n\n\tfor ( let i = 1; i < 1024; ++ i ) {\n\n\t\tlet m = i << 13; // zero pad mantissa bits\n\t\tlet e = 0; // zero exponent\n\n\t\t// normalized\n\t\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\t\tm <<= 1;\n\t\t\te -= 0x00800000; // decrement exponent\n\n\t\t}\n\n\t\tm &= ~ 0x00800000; // clear leading 1 bit\n\t\te += 0x38800000; // adjust bias\n\n\t\tmantissaTable[ i ] = m | e;\n\n\t}\n\n\tfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n\t}\n\n\tfor ( let i = 1; i < 31; ++ i ) {\n\n\t\texponentTable[ i ] = i << 23;\n\n\t}\n\n\texponentTable[ 31 ] = 0x47800000;\n\texponentTable[ 32 ] = 0x80000000;\n\n\tfor ( let i = 33; i < 63; ++ i ) {\n\n\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n\t}\n\n\texponentTable[ 63 ] = 0xc7800000;\n\n\tfor ( let i = 1; i < 64; ++ i ) {\n\n\t\tif ( i !== 32 ) {\n\n\t\t\toffsetTable[ i ] = 1024;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tfloatView: floatView,\n\t\tuint32View: uint32View,\n\t\tbaseTable: baseTable,\n\t\tshiftTable: shiftTable,\n\t\tmantissaTable: mantissaTable,\n\t\texponentTable: exponentTable,\n\t\toffsetTable: offsetTable\n\t};\n\n}\n\n// float32 to float16\n\nfunction toHalfFloat( val ) {\n\n\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\tval = clamp( val, - 65504, 65504 );\n\n\t_tables.floatView[ 0 ] = val;\n\tconst f = _tables.uint32View[ 0 ];\n\tconst e = ( f >> 23 ) & 0x1ff;\n\treturn _tables.baseTable[ e ] + ( ( f & 0x007fffff ) >> _tables.shiftTable[ e ] );\n\n}\n\n// float16 to float32\n\nfunction fromHalfFloat( val ) {\n\n\tconst m = val >> 10;\n\t_tables.uint32View[ 0 ] = _tables.mantissaTable[ _tables.offsetTable[ m ] + ( val & 0x3ff ) ] + _tables.exponentTable[ m ];\n\treturn _tables.floatView[ 0 ];\n\n}\n\nconst DataUtils = {\n\ttoHalfFloat: toHalfFloat,\n\tfromHalfFloat: fromHalfFloat,\n};\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized = false ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis._updateRange = { offset: 0, count: - 1 };\n\t\tthis.updateRanges = [];\n\t\tthis.gpuType = FloatType;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tget updateRange() {\n\n\t\twarnOnce( 'THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead.' ); // @deprecated, r159\n\t\treturn this._updateRange;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\t\tthis.gpuType = source.gpuType;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$9.fromBufferAttribute( this, i );\n\t\t\t\t_vector$9.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.itemSize + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.array[ index * this.itemSize + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.array[ index * this.itemSize ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\n\t\treturn data;\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = fromHalfFloat( this.array[ index * this.itemSize ] );\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = toHalfFloat( x );\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = fromHalfFloat( this.array[ index * this.itemSize + 1 ] );\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = fromHalfFloat( this.array[ index * this.itemSize + 2 ] );\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = fromHalfFloat( this.array[ index * this.itemSize + 3 ] );\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\t\tthis.array[ index + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$2 = 0;\n\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$8 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBufferGeometry = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$2 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1$2.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1$2.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1$2.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1$2.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1$2.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1$2.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$2.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.min, _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.max, _box$2.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$2.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$2.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$8.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$8.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst positionAttribute = attributes.position;\n\t\tconst normalAttribute = attributes.normal;\n\t\tconst uvAttribute = attributes.uv;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * positionAttribute.count ), 4 ) );\n\n\t\t}\n\n\t\tconst tangentAttribute = this.getAttribute( 'tangent' );\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromBufferAttribute( positionAttribute, a );\n\t\t\tvB.fromBufferAttribute( positionAttribute, b );\n\t\t\tvC.fromBufferAttribute( positionAttribute, c );\n\n\t\t\tuvA.fromBufferAttribute( uvAttribute, a );\n\t\t\tuvB.fromBufferAttribute( uvAttribute, b );\n\t\t\tuvC.fromBufferAttribute( uvAttribute, c );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: index.count\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindex.getX( j + 0 ),\n\t\t\t\t\tindex.getX( j + 1 ),\n\t\t\t\t\tindex.getX( j + 2 )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromBufferAttribute( normalAttribute, v );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangentAttribute.setXYZW( v, tmp.x, tmp.y, tmp.z, w );\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( index.getX( j + 0 ) );\n\t\t\t\thandleVertex( index.getX( j + 1 ) );\n\t\t\t\thandleVertex( index.getX( j + 2 ) );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$8.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nconst _inverseMatrix$3 = /*@__PURE__*/ new Matrix4();\nconst _ray$3 = /*@__PURE__*/ new Ray();\nconst _sphere$6 = /*@__PURE__*/ new Sphere();\nconst _sphereHitAt = /*@__PURE__*/ new Vector3();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _morphA = /*@__PURE__*/ new Vector3();\n\nconst _uvA$1 = /*@__PURE__*/ new Vector2();\nconst _uvB$1 = /*@__PURE__*/ new Vector2();\nconst _uvC$1 = /*@__PURE__*/ new Vector2();\n\nconst _normalA = /*@__PURE__*/ new Vector3();\nconst _normalB = /*@__PURE__*/ new Vector3();\nconst _normalC = /*@__PURE__*/ new Vector3();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isMesh = true;\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\n\t\ttarget.fromBufferAttribute( position, index );\n\n\t\tconst morphInfluences = this.morphTargetInfluences;\n\n\t\tif ( morphPosition && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morphAttribute, index );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( target ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttarget.add( _morphA );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$6.copy( geometry.boundingSphere );\n\t\t_sphere$6.applyMatrix4( matrixWorld );\n\n\t\t// check distance from ray origin to bounding sphere\n\n\t\t_ray$3.copy( raycaster.ray ).recast( raycaster.near );\n\n\t\tif ( _sphere$6.containsPoint( _ray$3.origin ) === false ) {\n\n\t\t\tif ( _ray$3.intersectSphere( _sphere$6, _sphereHitAt ) === null ) return;\n\n\t\t\tif ( _ray$3.origin.distanceToSquared( _sphereHitAt ) > ( raycaster.far - raycaster.near ) ** 2 ) return;\n\n\t\t}\n\n\t\t// convert ray to local space of mesh\n\n\t\t_inverseMatrix$3.copy( matrixWorld ).invert();\n\t\t_ray$3.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$3 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$3.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$3 );\n\n\t}\n\n\t_computeIntersections( raycaster, intersects, rayLocalSpace ) {\n\n\t\tlet intersection;\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\n\t\tconst index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\t\tconst uv = geometry.attributes.uv;\n\t\tconst uv1 = geometry.attributes.uv1;\n\t\tconst normal = geometry.attributes.normal;\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = i;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, ( material.side === FrontSide ), point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkGeometryIntersection( object, material, raycaster, ray, uv, uv1, normal, a, b, c ) {\n\n\tobject.getVertexPosition( a, _vA$1 );\n\tobject.getVertexPosition( b, _vB$1 );\n\tobject.getVertexPosition( c, _vC$1 );\n\n\tconst intersection = checkIntersection( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv1 ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv1, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv1, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv1, c );\n\n\t\t\tintersection.uv1 = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( normal ) {\n\n\t\t\t_normalA.fromBufferAttribute( normal, a );\n\t\t\t_normalB.fromBufferAttribute( normal, b );\n\t\t\t_normalC.fromBufferAttribute( normal, c );\n\n\t\t\tintersection.normal = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _normalA, _normalB, _normalC, new Vector3() );\n\n\t\t\tif ( intersection.normal.dot( ray.direction ) > 0 ) {\n\n\t\t\t\tintersection.normal.multiplyScalar( - 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tif ( property.isRenderTargetTexture ) {\n\n\t\t\t\t\tconsole.warn( 'UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms().' );\n\t\t\t\t\tdst[ u ][ p ] = null;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\nfunction cloneUniformsGroups( src ) {\n\n\tconst dst = [];\n\n\tfor ( let u = 0; u < src.length; u ++ ) {\n\n\t\tdst.push( src[ u ].clone() );\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction getUnlitUniformColorSpace( renderer ) {\n\n\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\tif ( currentRenderTarget === null ) {\n\n\t\t// https://github.com/mrdoob/three.js/pull/23937#issuecomment-1111067398\n\t\treturn renderer.outputColorSpace;\n\n\t}\n\n\t// https://github.com/mrdoob/three.js/issues/27868\n\tif ( currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\treturn currentRenderTarget.texture.colorSpace;\n\n\t}\n\n\treturn ColorManagement.workingColorSpace;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShaderMaterial = true;\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\t\tthis.uniformsGroups = [];\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.forceSinglePass = true;\n\n\t\tthis.extensions = {\n\t\t\tclipCullDistance: false, // set to use vertex shader clipping\n\t\t\tmultiDraw: false // set to use vertex shader multi_draw / enable gl_DrawID\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv1': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tdata.lights = this.lights;\n\t\tdata.clipping = this.clipping;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isCamera = true;\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t\tthis.coordinateSystem = WebGLCoordinateSystem;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\tthis.coordinateSystem = source.coordinateSystem;\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\treturn super.getWorldDirection( target ).negate();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _v3$1 = /*@__PURE__*/ new Vector3();\nconst _minTarget = /*@__PURE__*/ new Vector2();\nconst _maxTarget = /*@__PURE__*/ new Vector2();\n\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isPerspectiveCamera = true;\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Computes the 2D bounds of the camera's viewable rectangle at a given distance along the viewing direction.\n\t * Sets minTarget and maxTarget to the coordinates of the lower-left and upper-right corners of the view rectangle.\n\t */\n\tgetViewBounds( distance, minTarget, maxTarget ) {\n\n\t\t_v3$1.set( - 1, - 1, 0.5 ).applyMatrix4( this.projectionMatrixInverse );\n\n\t\tminTarget.set( _v3$1.x, _v3$1.y ).multiplyScalar( - distance / _v3$1.z );\n\n\t\t_v3$1.set( 1, 1, 0.5 ).applyMatrix4( this.projectionMatrixInverse );\n\n\t\tmaxTarget.set( _v3$1.x, _v3$1.y ).multiplyScalar( - distance / _v3$1.z );\n\n\t}\n\n\t/**\n\t * Computes the width and height of the camera's viewable rectangle at a given distance along the viewing direction.\n\t * Copies the result into the target Vector2, where x is width and y is height.\n\t */\n\tgetViewSize( distance, target ) {\n\n\t\tthis.getViewBounds( distance, _minTarget, _maxTarget );\n\n\t\treturn target.subVectors( _maxTarget, _minTarget );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst fov = - 90; // negative fov is not an error\nconst aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tthis.renderTarget = renderTarget;\n\t\tthis.coordinateSystem = null;\n\t\tthis.activeMipmapLevel = 0;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdateCoordinateSystem() {\n\n\t\tconst coordinateSystem = this.coordinateSystem;\n\n\t\tconst cameras = this.children.concat();\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = cameras;\n\n\t\tfor ( const camera of cameras ) this.remove( camera );\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, 1, 0 );\n\t\t\tcameraPX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, 1, 0 );\n\t\t\tcameraNX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, - 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\t\tcameraPX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\t\tcameraNX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tfor ( const camera of cameras ) {\n\n\t\t\tthis.add( camera );\n\n\t\t\tcamera.updateMatrixWorld();\n\n\t\t}\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst { renderTarget, activeMipmapLevel } = this;\n\n\t\tif ( this.coordinateSystem !== renderer.coordinateSystem ) {\n\n\t\t\tthis.coordinateSystem = renderer.coordinateSystem;\n\n\t\t\tthis.updateCoordinateSystem();\n\n\t\t}\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst currentActiveCubeFace = renderer.getActiveCubeFace();\n\t\tconst currentActiveMipmapLevel = renderer.getActiveMipmapLevel();\n\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\t// mipmaps are generated during the last call of render()\n\t\t// at this point, all sides of the cube render target are defined\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget, currentActiveCubeFace, currentActiveMipmapLevel );\n\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size = 1, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.colorSpace = texture.colorSpace;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\tthis.isPlane = true;\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( point ).addScaledVector( this.normal, - this.distanceToPoint( point ) );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( line.start ).addScaledVector( direction, t );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _sphere$5 = /*@__PURE__*/ new Sphere();\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me2, me6, me10, me14 ).normalize();\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\n\t\t\t_sphere$5.copy( object.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$5.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t}\n\n\t\treturn this.intersectsSphere( _sphere$5 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$5.center.set( 0, 0, 0 );\n\t\t_sphere$5.radius = 0.7071067811865476;\n\t\t_sphere$5.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$5 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$7 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl ) {\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\t\tconst size = array.byteLength;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\ttype = gl.HALF_FLOAT;\n\n\t\t\t} else {\n\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version,\n\t\t\tsize: size\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute._updateRange; // @deprecated, r159\n\t\tconst updateRanges = attribute.updateRanges;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 && updateRanges.length === 0 ) {\n\n\t\t\t// Not using update ranges\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t}\n\n\t\tif ( updateRanges.length !== 0 ) {\n\n\t\t\tfor ( let i = 0, l = updateRanges.length; i < l; i ++ ) {\n\n\t\t\t\tconst range = updateRanges[ i ];\n\n\t\t\t\tgl.bufferSubData( bufferType, range.start * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, range.start, range.count );\n\n\t\t\t}\n\n\t\t\tattribute.clearUpdateRanges();\n\n\t\t}\n\n\t\t// @deprecated, r159\n\t\tif ( updateRange.count !== - 1 ) {\n\n\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t\tattribute.onUploadCallback();\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tif ( data.size !== attribute.array.byteLength ) {\n\n\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: The size of the buffer attribute\\'s array buffer does not match the original size. Resizing buffer attributes is not supported.' );\n\n\t\t\t}\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nvar alphahash_fragment = \"#ifdef USE_ALPHAHASH\\n\\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\\n#endif\";\n\nvar alphahash_pars_fragment = \"#ifdef USE_ALPHAHASH\\n\\tconst float ALPHA_HASH_SCALE = 0.05;\\n\\tfloat hash2D( vec2 value ) {\\n\\t\\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\\n\\t}\\n\\tfloat hash3D( vec3 value ) {\\n\\t\\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\\n\\t}\\n\\tfloat getAlphaHashThreshold( vec3 position ) {\\n\\t\\tfloat maxDeriv = max(\\n\\t\\t\\tlength( dFdx( position.xyz ) ),\\n\\t\\t\\tlength( dFdy( position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\\n\\t\\tvec2 pixScales = vec2(\\n\\t\\t\\texp2( floor( log2( pixScale ) ) ),\\n\\t\\t\\texp2( ceil( log2( pixScale ) ) )\\n\\t\\t);\\n\\t\\tvec2 alpha = vec2(\\n\\t\\t\\thash3D( floor( pixScales.x * position.xyz ) ),\\n\\t\\t\\thash3D( floor( pixScales.y * position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat lerpFactor = fract( log2( pixScale ) );\\n\\t\\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\\n\\t\\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\\n\\t\\tvec3 cases = vec3(\\n\\t\\t\\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\\n\\t\\t\\t( x - 0.5 * a ) / ( 1.0 - a ),\\n\\t\\t\\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\\n\\t\\t);\\n\\t\\tfloat threshold = ( x < ( 1.0 - a ) )\\n\\t\\t\\t? ( ( x < a ) ? cases.x : cases.y )\\n\\t\\t\\t: cases.z;\\n\\t\\treturn clamp( threshold , 1.0e-6, 1.0 );\\n\\t}\\n#endif\";\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\t#ifdef ALPHA_TO_COVERAGE\\n\\tdiffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );\\n\\tif ( diffuseColor.a == 0.0 ) discard;\\n\\t#else\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n\\t#endif\\n#endif\";\n\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_CLEARCOAT ) \\n\\t\\tclearcoatSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_SHEEN ) \\n\\t\\tsheenSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar batching_pars_vertex = \"#ifdef USE_BATCHING\\n\\tattribute float batchId;\\n\\tuniform highp sampler2D batchingTexture;\\n\\tmat4 getBatchingMatrix( const in float i ) {\\n\\t\\tint size = textureSize( batchingTexture, 0 ).x;\\n\\t\\tint j = int( i ) * 4;\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\tvec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\\n\\t\\tvec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\\n\\t\\tvec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\\n\\t\\tvec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\\n\\t\\treturn mat4( v1, v2, v3, v4 );\\n\\t}\\n#endif\";\n\nvar batching_vertex = \"#ifdef USE_BATCHING\\n\\tmat4 batchingMatrix = getBatchingMatrix( batchId );\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\\n#ifdef USE_ALPHAHASH\\n\\tvPosition = vec3( position );\\n#endif\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"float G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n} // validated\";\n\nvar iridescence_fragment = \"#ifdef USE_IRIDESCENCE\\n\\tconst mat3 XYZ_TO_REC709 = mat3(\\n\\t\\t 3.2404542, -0.9692660,  0.0556434,\\n\\t\\t-1.5371385,  1.8760108, -0.2040259,\\n\\t\\t-0.4985314,  0.0415560,  1.0572252\\n\\t);\\n\\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\\n\\t\\tvec3 sqrtF0 = sqrt( fresnel0 );\\n\\t\\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\\n\\t}\\n\\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\\n\\t}\\n\\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\\n\\t}\\n\\tvec3 evalSensitivity( float OPD, vec3 shift ) {\\n\\t\\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\\n\\t\\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\\n\\t\\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\\n\\t\\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\\n\\t\\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\\n\\t\\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\\n\\t\\txyz /= 1.0685e-7;\\n\\t\\tvec3 rgb = XYZ_TO_REC709 * xyz;\\n\\t\\treturn rgb;\\n\\t}\\n\\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\\n\\t\\tvec3 I;\\n\\t\\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\\n\\t\\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\\n\\t\\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\\n\\t\\tif ( cosTheta2Sq < 0.0 ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t}\\n\\t\\tfloat cosTheta2 = sqrt( cosTheta2Sq );\\n\\t\\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\\n\\t\\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\\n\\t\\tfloat T121 = 1.0 - R12;\\n\\t\\tfloat phi12 = 0.0;\\n\\t\\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\\n\\t\\tfloat phi21 = PI - phi12;\\n\\t\\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\\t\\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\\n\\t\\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\\n\\t\\tvec3 phi23 = vec3( 0.0 );\\n\\t\\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\\n\\t\\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\\n\\t\\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\\n\\t\\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\\n\\t\\tvec3 phi = vec3( phi21 ) + phi23;\\n\\t\\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\\n\\t\\tvec3 r123 = sqrt( R123 );\\n\\t\\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\\n\\t\\tvec3 C0 = R12 + Rs;\\n\\t\\tI = C0;\\n\\t\\tvec3 Cm = Rs - T121;\\n\\t\\tfor ( int m = 1; m <= 2; ++ m ) {\\n\\t\\t\\tCm *= r123;\\n\\t\\t\\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\\n\\t\\t\\tI += Cm * Sm;\\n\\t\\t}\\n\\t\\treturn max( I, vec3( 0.0 ) );\\n\\t}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vBumpMapUv );\\n\\t\\tvec2 dSTdy = dFdy( vBumpMapUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\\n\\t\\tvec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#ifdef ALPHA_TO_COVERAGE\\n\\t\\tfloat distanceToPlane, distanceGradient;\\n\\t\\tfloat clipOpacity = 1.0;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\\n\\t\\t\\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\\n\\t\\t\\tclipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\\n\\t\\t\\tif ( clipOpacity == 0.0 ) discard;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\t\\tfloat unionClipOpacity = 1.0;\\n\\t\\t\\t#pragma unroll_loop_start\\n\\t\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\t\\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\\n\\t\\t\\t\\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\\n\\t\\t\\t\\tunionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\\n\\t\\t\\t}\\n\\t\\t\\t#pragma unroll_loop_end\\n\\t\\t\\tclipOpacity *= 1.0 - unionClipOpacity;\\n\\t\\t#endif\\n\\t\\tdiffuseColor.a *= clipOpacity;\\n\\t\\tif ( diffuseColor.a == 0.0 ) discard;\\n\\t#else\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\t\\tbool clipped = true;\\n\\t\\t\\t#pragma unroll_loop_start\\n\\t\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t\\t}\\n\\t\\t\\t#pragma unroll_loop_end\\n\\t\\t\\tif ( clipped ) discard;\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nvec3 pow2( const in vec3 x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\n#ifdef USE_ALPHAHASH\\n\\tvarying vec3 vPosition;\\n#endif\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat luminance( const in vec3 rgb ) {\\n\\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\\n\\treturn dot( weights, rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n} // validated\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define cubeUV_r0 1.0\\n\\t#define cubeUV_m0 - 2.0\\n\\t#define cubeUV_r1 0.8\\n\\t#define cubeUV_m1 - 1.0\\n\\t#define cubeUV_r4 0.4\\n\\t#define cubeUV_m4 2.0\\n\\t#define cubeUV_r5 0.305\\n\\t#define cubeUV_m5 3.0\\n\\t#define cubeUV_r6 0.21\\n\\t#define cubeUV_m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= cubeUV_r1 ) {\\n\\t\\t\\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\\n\\t\\t} else if ( roughness >= cubeUV_r4 ) {\\n\\t\\t\\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\\n\\t\\t} else if ( roughness >= cubeUV_r5 ) {\\n\\t\\t\\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\\n\\t\\t} else if ( roughness >= cubeUV_r6 ) {\\n\\t\\t\\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = objectTangent;\\n#endif\\n#ifdef USE_BATCHING\\n\\tmat3 bm = mat3( batchingMatrix );\\n\\ttransformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\\n\\ttransformedNormal = bm * transformedNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\ttransformedTangent = bm * transformedTangent;\\n\\t#endif\\n#endif\\n#ifdef USE_INSTANCING\\n\\tmat3 im = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\\n\\ttransformedNormal = im * transformedNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\ttransformedTangent = im * transformedTangent;\\n\\t#endif\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\ttransformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar colorspace_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar colorspace_pars_fragment = \"\\nconst mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(\\n\\tvec3( 0.8224621, 0.177538, 0.0 ),\\n\\tvec3( 0.0331941, 0.9668058, 0.0 ),\\n\\tvec3( 0.0170827, 0.0723974, 0.9105199 )\\n);\\nconst mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(\\n\\tvec3( 1.2249401, - 0.2249404, 0.0 ),\\n\\tvec3( - 0.0420569, 1.0420571, 0.0 ),\\n\\tvec3( - 0.0196376, - 0.0786361, 1.0982735 )\\n);\\nvec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {\\n\\treturn vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );\\n}\\nvec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {\\n\\treturn vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );\\n}\\nvec4 LinearTransferOETF( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 sRGBTransferOETF( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn sRGBTransferOETF( value );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\tuniform mat3 envMapRotation;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\tvec2 fw = fwidth( coord ) * 0.5;\\n\\t\\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\\n\\t#endif\\n}\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_fragment = \"LambertMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_lambert_pars_fragment = \"varying vec3 vViewPosition;\\nstruct LambertMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Lambert\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Lambert\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\n#if defined( USE_LIGHT_PROBES )\\n\\tuniform vec3 lightProbe[ 9 ];\\n#endif\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( LEGACY_LIGHTS )\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#else\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\\n\\t\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\t\\tvec3 bentNormal = cross( bitangent, viewDir );\\n\\t\\t\\t\\tbentNormal = normalize( cross( bentNormal, bitangent ) );\\n\\t\\t\\t\\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\\n\\t\\t\\t\\treturn getIBLRadiance( viewDir, bentNormal, roughness );\\n\\t\\t\\t#else\\n\\t\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\tmaterial.ior = ior;\\n\\t#ifdef USE_SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tmaterial.iridescence = iridescence;\\n\\tmaterial.iridescenceIOR = iridescenceIOR;\\n\\t#ifdef USE_IRIDESCENCEMAP\\n\\t\\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\t\\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\\n\\t#else\\n\\t\\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\\n\\t#endif\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\\n\\t\\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\\n\\t\\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\\n\\t#else\\n\\t\\tvec2 anisotropyV = anisotropyVector;\\n\\t#endif\\n\\tmaterial.anisotropy = length( anisotropyV );\\n\\tif( material.anisotropy == 0.0 ) {\\n\\t\\tanisotropyV = vec2( 1.0, 0.0 );\\n\\t} else {\\n\\t\\tanisotropyV /= material.anisotropy;\\n\\t\\tmaterial.anisotropy = saturate( material.anisotropy );\\n\\t}\\n\\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\\n\\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\\n\\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tfloat iridescence;\\n\\t\\tfloat iridescenceIOR;\\n\\t\\tfloat iridescenceThickness;\\n\\t\\tvec3 iridescenceFresnel;\\n\\t\\tvec3 iridescenceF0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n\\t#ifdef IOR\\n\\t\\tfloat ior;\\n\\t#endif\\n\\t#ifdef USE_TRANSMISSION\\n\\t\\tfloat transmission;\\n\\t\\tfloat transmissionAlpha;\\n\\t\\tfloat thickness;\\n\\t\\tfloat attenuationDistance;\\n\\t\\tvec3 attenuationColor;\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat anisotropy;\\n\\t\\tfloat alphaT;\\n\\t\\tvec3 anisotropyT;\\n\\t\\tvec3 anisotropyB;\\n\\t#endif\\n};\\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\\nvec3 sheenSpecularDirect = vec3( 0.0 );\\nvec3 sheenSpecularIndirect = vec3(0.0 );\\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\\n    float x2 = x * x;\\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\n#ifdef USE_ANISOTROPY\\n\\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\\n\\t\\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\\n\\t\\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\\n\\t\\tfloat v = 0.5 / ( gv + gl );\\n\\t\\treturn saturate(v);\\n\\t}\\n\\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\\n\\t\\tfloat a2 = alphaT * alphaB;\\n\\t\\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\\n\\t\\thighp float v2 = dot( v, v );\\n\\t\\tfloat w2 = a2 / v2;\\n\\t\\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\\n\\t}\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\\n\\t\\tvec3 f0 = material.clearcoatF0;\\n\\t\\tfloat f90 = material.clearcoatF90;\\n\\t\\tfloat roughness = material.clearcoatRoughness;\\n\\t\\tfloat alpha = pow2( roughness );\\n\\t\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\t\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\t\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\t\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\t\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\t\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t\\treturn F * ( V * D );\\n\\t}\\n#endif\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\\n\\tvec3 f0 = material.specularColor;\\n\\tfloat f90 = material.specularF90;\\n\\tfloat roughness = material.roughness;\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tF = mix( F, material.iridescenceFresnel, material.iridescence );\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat dotTL = dot( material.anisotropyT, lightDir );\\n\\t\\tfloat dotTV = dot( material.anisotropyT, viewDir );\\n\\t\\tfloat dotTH = dot( material.anisotropyT, halfDir );\\n\\t\\tfloat dotBL = dot( material.anisotropyB, lightDir );\\n\\t\\tfloat dotBV = dot( material.anisotropyB, viewDir );\\n\\t\\tfloat dotBH = dot( material.anisotropyB, halfDir );\\n\\t\\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\\n\\t\\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\\n\\t#else\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t#endif\\n\\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\n#ifdef USE_IRIDESCENCE\\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#else\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#endif\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\\n\\t#else\\n\\t\\tvec3 Fr = specularColor;\\n\\t#endif\\n\\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometryNormal;\\n\\t\\tvec3 viewDir = geometryViewDir;\\n\\t\\tvec3 position = geometryPosition;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tcomputeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\\n\\t#else\\n\\t\\tcomputeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\t#endif\\n\\tvec3 totalScattering = singleScattering + multiScattering;\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nvec3 geometryPosition = - vViewPosition;\\nvec3 geometryNormal = normal;\\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\nvec3 geometryClearcoatNormal = vec3( 0.0 );\\n#ifdef USE_CLEARCOAT\\n\\tgeometryClearcoatNormal = clearcoatNormal;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\\n\\tif ( material.iridescenceThickness == 0.0 ) {\\n\\t\\tmaterial.iridescence = 0.0;\\n\\t} else {\\n\\t\\tmaterial.iridescence = saturate( material.iridescence );\\n\\t}\\n\\tif ( material.iridescence > 0.0 ) {\\n\\t\\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\\n\\t\\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\\n\\t}\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometryPosition, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tvec4 spotColor;\\n\\tvec3 spotLightCoord;\\n\\tbool inSpotLightMap;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\\n\\t\\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\\n\\t\\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\\n\\t\\t#else\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#endif\\n\\t\\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\\n\\t\\t\\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\\n\\t\\t\\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\\n\\t\\t\\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\\n\\t\\t\\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\\n\\t\\t#endif\\n\\t\\t#undef SPOT_LIGHT_MAP_INDEX\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if defined( USE_LIGHT_PROBES )\\n\\t\\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometryNormal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tradiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\\n\\t#else\\n\\t\\tradiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF )\\n\\tgl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\tvFragDepth = 1.0 + gl_Position.w;\\n\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\\n\\t\\n\\t#endif\\n\\tdiffuseColor *= sampledDiffuseColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t#if defined( USE_POINTS_UV )\\n\\t\\tvec2 uv = vUv;\\n\\t#else\\n\\t\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_POINTS_UV )\\n\\tvarying vec2 vUv;\\n#else\\n\\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t\\tuniform mat3 uvTransform;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphinstance_vertex = \"#ifdef USE_INSTANCING_MORPH\\n\\tfloat morphTargetInfluences[MORPHTARGETS_COUNT];\\n\\tfloat morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\tmorphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;\\n\\t}\\n#endif\";\n\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_INSTANCING_MORPH\\n\\t\\tuniform float morphTargetBaseInfluence;\\n\\t#endif\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\t#ifndef USE_INSTANCING_MORPH\\n\\t\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\t#endif\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform ivec2 morphTargetsTextureSize;\\n\\t\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = dFdx( vViewPosition );\\n\\tvec3 fdy = dFdy( vViewPosition );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal *= faceDirection;\\n\\t#endif\\n#endif\\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\\n\\t\\t#if defined( USE_NORMALMAP )\\n\\t\\t\\tvNormalMapUv\\n\\t\\t#elif defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tvClearcoatNormalMapUv\\n\\t\\t#else\\n\\t\\t\\tvUv\\n\\t\\t#endif\\n\\t\\t);\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn[0] *= faceDirection;\\n\\t\\ttbn[1] *= faceDirection;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn2[0] *= faceDirection;\\n\\t\\ttbn2[1] *= faceDirection;\\n\\t#endif\\n#endif\\nvec3 nonPerturbedNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\tnormal = normalize( tbn * mapN );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\\n\\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( uv.st );\\n\\t\\tvec2 st1 = dFdy( uv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\\n\\t\\treturn mat3( T * scale, B * scale, N );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = nonPerturbedNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\";\n\nvar iridescence_pars_fragment = \"#ifdef USE_IRIDESCENCEMAP\\n\\tuniform sampler2D iridescenceMap;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform sampler2D iridescenceThicknessMap;\\n#endif\";\n\nvar opaque_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= material.transmissionAlpha;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec2 packDepthToRG( in highp float v ) {\\n\\treturn packDepthToRGBA( v ).yx;\\n}\\nfloat unpackRGToDepth( const in highp vec2 v ) {\\n\\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn depth * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * depth - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_BATCHING\\n\\tmvPosition = batchingMatrix * mvPosition;\\n#endif\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#if NUM_SPOT_LIGHT_MAPS > 0\\n\\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\\n\\t\\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\t\\n\\t\\tfloat lightToPositionLength = length( lightToPosition );\\n\\t\\tif ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {\\n\\t\\t\\tfloat dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\t\\tdp += shadowBias;\\n\\t\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\t\\tshadow = (\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tshadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\\n\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\tvec4 shadowWorldPosition;\\n#endif\\n#if defined( USE_SHADOWMAP )\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if NUM_SPOT_LIGHT_COORDS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition;\\n\\t\\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t\\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\\n\\t\\t#endif\\n\\t\\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tint size = textureSize( boneTexture, 0 ).x;\\n\\t\\tint j = int( i ) * 4;\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\tvec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\\n\\t\\tvec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\\n\\t\\tvec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\\n\\t\\tvec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\\n\\t\\treturn mat4( v1, v2, v3, v4 );\\n\\t}\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn saturate( toneMappingExposure * color );\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nconst mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(\\n\\tvec3( 1.6605, - 0.1246, - 0.0182 ),\\n\\tvec3( - 0.5876, 1.1329, - 0.1006 ),\\n\\tvec3( - 0.0728, - 0.0083, 1.1187 )\\n);\\nconst mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(\\n\\tvec3( 0.6274, 0.0691, 0.0164 ),\\n\\tvec3( 0.3293, 0.9195, 0.0880 ),\\n\\tvec3( 0.0433, 0.0113, 0.8956 )\\n);\\nvec3 agxDefaultContrastApprox( vec3 x ) {\\n\\tvec3 x2 = x * x;\\n\\tvec3 x4 = x2 * x2;\\n\\treturn + 15.5 * x4 * x2\\n\\t\\t- 40.14 * x4 * x\\n\\t\\t+ 31.96 * x4\\n\\t\\t- 6.868 * x2 * x\\n\\t\\t+ 0.4298 * x2\\n\\t\\t+ 0.1191 * x\\n\\t\\t- 0.00232;\\n}\\nvec3 AgXToneMapping( vec3 color ) {\\n\\tconst mat3 AgXInsetMatrix = mat3(\\n\\t\\tvec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),\\n\\t\\tvec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),\\n\\t\\tvec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )\\n\\t);\\n\\tconst mat3 AgXOutsetMatrix = mat3(\\n\\t\\tvec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),\\n\\t\\tvec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),\\n\\t\\tvec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )\\n\\t);\\n\\tconst float AgxMinEv = - 12.47393;\\tconst float AgxMaxEv = 4.026069;\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = LINEAR_SRGB_TO_LINEAR_REC2020 * color;\\n\\tcolor = AgXInsetMatrix * color;\\n\\tcolor = max( color, 1e-10 );\\tcolor = log2( color );\\n\\tcolor = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );\\n\\tcolor = clamp( color, 0.0, 1.0 );\\n\\tcolor = agxDefaultContrastApprox( color );\\n\\tcolor = AgXOutsetMatrix * color;\\n\\tcolor = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );\\n\\tcolor = LINEAR_REC2020_TO_LINEAR_SRGB * color;\\n\\tcolor = clamp( color, 0.0, 1.0 );\\n\\treturn color;\\n}\\nvec3 NeutralToneMapping( vec3 color ) {\\n\\tfloat startCompression = 0.8 - 0.04;\\n\\tfloat desaturation = 0.15;\\n\\tcolor *= toneMappingExposure;\\n\\tfloat x = min(color.r, min(color.g, color.b));\\n\\tfloat offset = x < 0.08 ? x - 6.25 * x * x : 0.04;\\n\\tcolor -= offset;\\n\\tfloat peak = max(color.r, max(color.g, color.b));\\n\\tif (peak < startCompression) return color;\\n\\tfloat d = 1. - startCompression;\\n\\tfloat newPeak = 1. - d * d / (peak + d - startCompression);\\n\\tcolor *= newPeak / peak;\\n\\tfloat g = 1. - 1. / (desaturation * (peak - newPeak) + 1.);\\n\\treturn mix(color, newPeak * vec3(1, 1, 1), g);\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tmaterial.transmission = transmission;\\n\\tmaterial.transmissionAlpha = 1.0;\\n\\tmaterial.thickness = thickness;\\n\\tmaterial.attenuationDistance = attenuationDistance;\\n\\tmaterial.attenuationColor = attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmitted = getIBLVolumeRefraction(\\n\\t\\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\\n\\t\\tmaterial.attenuationColor, material.attenuationDistance );\\n\\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\\n\\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\\n#endif\";\n\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tfloat w0( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w1( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\\n\\t}\\n\\tfloat w2( float a ){\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w3( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * a * a );\\n\\t}\\n\\tfloat g0( float a ) {\\n\\t\\treturn w0( a ) + w1( a );\\n\\t}\\n\\tfloat g1( float a ) {\\n\\t\\treturn w2( a ) + w3( a );\\n\\t}\\n\\tfloat h0( float a ) {\\n\\t\\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\\n\\t}\\n\\tfloat h1( float a ) {\\n\\t\\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\\n\\t}\\n\\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\\n\\t\\tuv = uv * texelSize.zw + 0.5;\\n\\t\\tvec2 iuv = floor( uv );\\n\\t\\tvec2 fuv = fract( uv );\\n\\t\\tfloat g0x = g0( fuv.x );\\n\\t\\tfloat g1x = g1( fuv.x );\\n\\t\\tfloat h0x = h0( fuv.x );\\n\\t\\tfloat h1x = h1( fuv.x );\\n\\t\\tfloat h0y = h0( fuv.y );\\n\\t\\tfloat h1y = h1( fuv.y );\\n\\t\\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\\n\\t\\t\\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\\n\\t}\\n\\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\\n\\t\\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\\n\\t\\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\\n\\t\\tvec2 fLodSizeInv = 1.0 / fLodSize;\\n\\t\\tvec2 cLodSizeInv = 1.0 / cLodSize;\\n\\t\\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\\n\\t\\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\\n\\t\\treturn mix( fSample, cSample, fract( lod ) );\\n\\t}\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\\n\\t}\\n\\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( isinf( attenuationDistance ) ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\tvec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform mat3 mapTransform;\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform mat3 alphaMapTransform;\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tuniform mat3 lightMapTransform;\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tuniform mat3 aoMapTransform;\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tuniform mat3 bumpMapTransform;\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tuniform mat3 normalMapTransform;\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tuniform mat3 displacementMapTransform;\\n\\tvarying vec2 vDisplacementMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tuniform mat3 emissiveMapTransform;\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tuniform mat3 metalnessMapTransform;\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tuniform mat3 roughnessMapTransform;\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tuniform mat3 anisotropyMapTransform;\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tuniform mat3 clearcoatMapTransform;\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform mat3 clearcoatNormalMapTransform;\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform mat3 clearcoatRoughnessMapTransform;\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tuniform mat3 sheenColorMapTransform;\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tuniform mat3 sheenRoughnessMapTransform;\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tuniform mat3 iridescenceMapTransform;\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform mat3 iridescenceThicknessMapTransform;\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tuniform mat3 specularMapTransform;\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tuniform mat3 specularColorMapTransform;\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tuniform mat3 specularIntensityMapTransform;\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvUv = vec3( uv, 1 ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_BATCHING\\n\\t\\tworldPosition = batchingMatrix * worldPosition;\\n\\t#endif\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nconst vertex$h = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nconst fragment$h = \"uniform sampler2D t2D;\\nuniform float backgroundIntensity;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$g = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$g = \"#ifdef ENVMAP_TYPE_CUBE\\n\\tuniform samplerCube envMap;\\n#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\tuniform sampler2D envMap;\\n#endif\\nuniform float flipEnvMap;\\nuniform float backgroundBlurriness;\\nuniform float backgroundIntensity;\\nuniform mat3 backgroundRotation;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );\\n\\t#else\\n\\t\\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$f = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = texColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$e = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <clipping_planes_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\nconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$a = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$9 = \"#define LAMBERT\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_lambert_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_lambert_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\nconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define USE_SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef USE_SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tuniform float iridescence;\\n\\tuniform float iridescenceIOR;\\n\\tuniform float iridescenceThicknessMinimum;\\n\\tuniform float iridescenceThicknessMaximum;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\tuniform vec2 anisotropyVector;\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tuniform sampler2D anisotropyMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <iridescence_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <iridescence_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\\n\\t#endif\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n#ifdef USE_POINTS_UV\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\nvoid main() {\\n\\t#ifdef USE_POINTS_UV\\n\\t\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\t#endif\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$2 = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <logdepthbuf_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst ShaderChunk = {\n\talphahash_fragment: alphahash_fragment,\n\talphahash_pars_fragment: alphahash_pars_fragment,\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbatching_pars_vertex: batching_pars_vertex,\n\tbatching_vertex: batching_vertex,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tiridescence_fragment: iridescence_fragment,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tcolorspace_fragment: colorspace_fragment,\n\tcolorspace_pars_fragment: colorspace_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_fragment: lights_lambert_fragment,\n\tlights_lambert_pars_fragment: lights_lambert_pars_fragment,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphinstance_vertex: morphinstance_vertex,\n\tmorphcolor_vertex: morphcolor_vertex,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tiridescence_pars_fragment: iridescence_pars_fragment,\n\topaque_fragment: opaque_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: vertex$h,\n\tbackground_frag: fragment$h,\n\tbackgroundCube_vert: vertex$g,\n\tbackgroundCube_frag: fragment$g,\n\tcube_vert: vertex$f,\n\tcube_frag: fragment$f,\n\tdepth_vert: vertex$e,\n\tdepth_frag: fragment$e,\n\tdistanceRGBA_vert: vertex$d,\n\tdistanceRGBA_frag: fragment$d,\n\tequirect_vert: vertex$c,\n\tequirect_frag: fragment$c,\n\tlinedashed_vert: vertex$b,\n\tlinedashed_frag: fragment$b,\n\tmeshbasic_vert: vertex$a,\n\tmeshbasic_frag: fragment$a,\n\tmeshlambert_vert: vertex$9,\n\tmeshlambert_frag: fragment$9,\n\tmeshmatcap_vert: vertex$8,\n\tmeshmatcap_frag: fragment$8,\n\tmeshnormal_vert: vertex$7,\n\tmeshnormal_frag: fragment$7,\n\tmeshphong_vert: vertex$6,\n\tmeshphong_frag: fragment$6,\n\tmeshphysical_vert: vertex$5,\n\tmeshphysical_frag: fragment$5,\n\tmeshtoon_vert: vertex$4,\n\tmeshtoon_frag: fragment$4,\n\tpoints_vert: vertex$3,\n\tpoints_frag: fragment$3,\n\tshadow_vert: vertex$2,\n\tshadow_frag: fragment$2,\n\tsprite_vert: vertex$1,\n\tsprite_frag: fragment$1\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\t\tspecularMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tenvMapRotation: { value: /*@__PURE__*/ new Matrix3() },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // physical\n\t\trefractionRatio: { value: 0.98 }, // basic, lambert, phong\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 },\n\t\taoMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 },\n\t\tlightMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tnormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null },\n\t\temissiveMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null },\n\t\tmetalnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null },\n\t\troughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: /*@__PURE__*/ new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotLightMap: { value: [] },\n\t\tspotShadowMap: { value: [] },\n\t\tspotLightMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: /*@__PURE__*/ new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: /*@__PURE__*/ new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\n\tbackgroundCube: {\n\n\t\tuniforms: {\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\tbackgroundBlurriness: { value: 0 },\n\t\t\tbackgroundIntensity: { value: 1 },\n\t\t\tbackgroundRotation: { value: /*@__PURE__*/ new Matrix3() }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.backgroundCube_vert,\n\t\tfragmentShader: ShaderChunk.backgroundCube_frag\n\n\t},\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: /*@__PURE__*/ new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: /*@__PURE__*/ new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tclearcoatNormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescence: { value: 0 },\n\t\t\tiridescenceMap: { value: null },\n\t\t\tiridescenceMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescenceIOR: { value: 1.3 },\n\t\t\tiridescenceThicknessMinimum: { value: 100 },\n\t\t\tiridescenceThicknessMaximum: { value: 400 },\n\t\t\tiridescenceThicknessMap: { value: null },\n\t\t\tiridescenceThicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\tsheenRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmissionSamplerSize: { value: /*@__PURE__*/ new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tthicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tspecularColor: { value: /*@__PURE__*/ new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t\tspecularColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularIntensityMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tanisotropyVector: { value: /*@__PURE__*/ new Vector2() },\n\t\t\tanisotropyMap: { value: null },\n\t\t\tanisotropyMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nconst _rgb = { r: 0, b: 0, g: 0 };\nconst _e1$1 = /*@__PURE__*/ new Euler();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\n\nfunction WebGLBackground( renderer, cubemaps, cubeuvmaps, state, objects, alpha, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction render( renderList, scene ) {\n\n\t\tlet forceClear = false;\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tconst usePMREM = scene.backgroundBlurriness > 0; // use PMREM if the user wants to blur the background\n\t\t\tbackground = ( usePMREM ? cubeuvmaps : cubemaps ).get( background );\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tconst environmentBlendMode = renderer.xr.getEnvironmentBlendMode();\n\n\t\tif ( environmentBlendMode === 'additive' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 1, premultipliedAlpha );\n\n\t\t} else if ( environmentBlendMode === 'alpha-blend' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 0, premultipliedAlpha );\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.backgroundCube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.backgroundCube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.backgroundCube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// add \"envMap\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\t_e1$1.copy( scene.backgroundRotation );\n\n\t\t\t// accommodate left-handed frame\n\t\t\t_e1$1.x *= - 1; _e1$1.y *= - 1; _e1$1.z *= - 1;\n\n\t\t\tif ( background.isCubeTexture && background.isRenderTargetTexture === false ) {\n\n\t\t\t\t// environment maps which are not cube render targets or PMREMs follow a different convention\n\t\t\t\t_e1$1.y *= - 1;\n\t\t\t\t_e1$1.z *= - 1;\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\t\t\tboxMesh.material.uniforms.backgroundBlurriness.value = scene.backgroundBlurriness;\n\t\t\tboxMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tboxMesh.material.uniforms.backgroundRotation.value.setFromMatrix4( _m1$1.makeRotationFromEuler( _e1$1 ) );\n\t\t\tboxMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tboxMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// add \"map\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\t\t\tplaneMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tplaneMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tplaneMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tcolor.getRGB( _rgb, getUnlitUniformColorSpace( renderer ) );\n\n\t\tstate.buffers.color.setClear( _rgb.r, _rgb.g, _rgb.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, attributes ) {\n\n\tconst maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\tlet forceUpdate = false;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tconst state = getBindingState( geometry, program, material );\n\n\t\tif ( currentState !== state ) {\n\n\t\t\tcurrentState = state;\n\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t}\n\n\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\n\n\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tif ( updateBuffers || forceUpdate ) {\n\n\t\t\tforceUpdate = false;\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\treturn gl.createVertexArray();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\treturn gl.bindVertexArray( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\treturn gl.deleteVertexArray( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( object, geometry, program, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( object, geometry, program, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet attribute = attributes[ name ];\n\n\t\t\t\tif ( attribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute && attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ name ] = data;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tgl.vertexAttribDivisor( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset, integer ) {\n\n\t\tif ( integer === true ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t// check for integer attributes\n\n\t\t\t\t\tconst integer = ( type === gl.INT || type === gl.UNSIGNED_INT || geometryAttribute.gpuType === IntType );\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\t\tforceUpdate = true;\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatibility\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info ) {\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tgl.drawArraysInstanced( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\tthis.render( starts[ i ], counts[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawArraysWEBGL( mode, starts, 0, counts, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ];\n\n\t\t\t}\n\n\t\t\tinfo.update( elementCount, mode, 1 );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\tthis.renderMultiDraw = renderMultiDraw;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tconst maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tconst maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tconst maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tconst maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tconst maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tconst maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tconst maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\n\tconst maxSamples = gl.getParameter( gl.MAX_SAMPLES );\n\n\treturn {\n\n\t\tisWebGL2: true, // keeping this for backwards compatibility\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\n\t};\n\n\tthis.setGlobalState = function ( planes, camera ) {\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isOrthographicCamera = true;\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\nlet _oldActiveCubeFace = 0;\nlet _oldActiveMipmapLevel = 0;\nlet _oldXrEnabled = false;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\t\t_oldXrEnabled = this._renderer.xr.enabled;\n\n\t\tthis._renderer.xr.enabled = false;\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t * The smallest supported equirectangular image size is 64 x 32.\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t * The smallest supported cube size is 16 x 16.\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget, _oldActiveCubeFace, _oldActiveMipmapLevel );\n\t\tthis._renderer.xr.enabled = _oldXrEnabled;\n\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\t\t_oldXrEnabled = this._renderer.xr.enabled;\n\n\t\tthis._renderer.xr.enabled = false;\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tcolorSpace: LinearSRGBColorSpace,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width || this._pingPongRenderTarget.height !== height ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t}\n\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tfor ( let i = 1; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\n\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\tconst min = - texelSize;\n\t\tconst max = 1 + texelSize;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = new Float32Array( MAX_SAMPLES );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: {\n\t\t\t'n': MAX_SAMPLES,\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t},\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCubemapMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'flipEnvMap': { value: - 1 }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\tconst currentPMREMVersion = renderTarget !== undefined ? renderTarget.texture.pmremVersion : 0;\n\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.pmremVersion !== currentPMREMVersion ) {\n\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\trenderTarget.texture.pmremVersion = texture.pmremVersion;\n\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( renderTarget !== undefined ) {\n\n\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\trenderTarget.texture.pmremVersion = texture.pmremVersion;\n\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function () {\n\n\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\t\t\tgetExtension( 'WEBGL_clip_cull_distance' );\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\t\t\tgetExtension( 'WEBGL_render_shared_exponent' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tfor ( const name in geometry.morphAttributes ) {\n\n\t\t\tconst array = geometry.morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.remove( array[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else if ( geometryPosition !== undefined ) {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info ) {\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tgl.drawElementsInstanced( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\tthis.render( starts[ i ] / bytesPerElement, counts[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawElementsWEBGL( mode, counts, 0, type, starts, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ];\n\n\t\t\t}\n\n\t\t\tinfo.update( elementCount, mode, 1 );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\tthis.renderMultiDraw = renderMultiDraw;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase gl.TRIANGLES:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINES:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_STRIP:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_LOOP:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase gl.POINTS:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tfunction update( object, geometry, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\t// instead of using attributes, the WebGL 2 code path encodes morph targets\n\t\t// into an array of data textures. Each layer represents a single morph target.\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet entry = morphTextures.get( geometry );\n\n\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\tlet vertexDataCount = 0;\n\n\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\tlet height = 1;\n\n\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t}\n\n\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\ttexture.type = FloatType;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\t// fill buffer\n\n\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tentry = {\n\t\t\t\tcount: morphTargetsCount,\n\t\t\t\ttexture: texture,\n\t\t\t\tsize: new Vector2( width, height )\n\t\t\t};\n\n\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\tfunction disposeTexture() {\n\n\t\t\t\ttexture.dispose();\n\n\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t}\n\n\t\t//\n\t\tif ( object.isInstancedMesh === true && object.morphTexture !== null ) {\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTexture', object.morphTexture, textures );\n\n\t\t} else {\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t}\n\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tif ( updateMap.get( object ) !== frame ) {\n\n\t\t\t\tattributes.update( object.instanceMatrix, gl.ARRAY_BUFFER );\n\n\t\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\t\tattributes.update( object.instanceColor, gl.ARRAY_BUFFER );\n\n\t\t\t\t}\n\n\t\t\t\tupdateMap.set( object, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( updateMap.get( skeleton ) !== frame ) {\n\n\t\t\t\tskeleton.update();\n\n\t\t\t\tupdateMap.set( skeleton, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isDepthTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.compareFunction = null;\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.compareFunction = source.compareFunction;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.compareFunction !== null ) data.compareFunction = this.compareFunction;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\n\nconst emptyTexture = /*@__PURE__*/ new Texture();\n\nconst emptyShadowTexture = /*@__PURE__*/ new DepthTexture( 1, 1 );\nemptyShadowTexture.compareFunction = LessEqualCompare;\n\nconst emptyArrayTexture = /*@__PURE__*/ new DataArrayTexture();\nconst empty3dTexture = /*@__PURE__*/ new Data3DTexture();\nconst emptyCubeTexture = /*@__PURE__*/ new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array or THREE.VectorN)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2i( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3i( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4i( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array or THREE.VectorN)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2ui( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3ui( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4ui( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\tconst emptyTexture2D = ( this.type === gl.SAMPLER_2D_SHADOW ) ? emptyShadowTexture : emptyTexture;\n\n\ttextures.setTexture2D( v || emptyTexture2D, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nclass SingleUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.type = activeInfo.type;\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass PureArrayUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.type = activeInfo.type;\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass StructuredUniform {\n\n\tconstructor( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tsetValue( gl, value, textures ) {\n\n\t\tconst seq = this.seq;\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t}\n\n}\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nclass WebGLUniforms {\n\n\tconstructor( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tconst n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\t\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tsetValue( gl, name, value, textures ) {\n\n\t\tconst u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n\t}\n\n\tsetOptional( gl, object, name ) {\n\n\t\tconst v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t}\n\n\tstatic upload( gl, seq, values, textures ) {\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tstatic seqWithValue( seq, values ) {\n\n\t\tconst r = [];\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\n// From https://www.khronos.org/registry/webgl/extensions/KHR_parallel_shader_compile/\nconst COMPLETION_STATUS_KHR = 0x91B1;\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tconst line = i + 1;\n\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( colorSpace ) {\n\n\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\tconst encodingPrimaries = ColorManagement.getPrimaries( colorSpace );\n\n\tlet gamutMapping;\n\n\tif ( workingPrimaries === encodingPrimaries ) {\n\n\t\tgamutMapping = '';\n\n\t} else if ( workingPrimaries === P3Primaries && encodingPrimaries === Rec709Primaries ) {\n\n\t\tgamutMapping = 'LinearDisplayP3ToLinearSRGB';\n\n\t} else if ( workingPrimaries === Rec709Primaries && encodingPrimaries === P3Primaries ) {\n\n\t\tgamutMapping = 'LinearSRGBToLinearDisplayP3';\n\n\t}\n\n\tswitch ( colorSpace ) {\n\n\t\tcase LinearSRGBColorSpace:\n\t\tcase LinearDisplayP3ColorSpace:\n\t\t\treturn [ gamutMapping, 'LinearTransferOETF' ];\n\n\t\tcase SRGBColorSpace:\n\t\tcase DisplayP3ColorSpace:\n\t\t\treturn [ gamutMapping, 'sRGBTransferOETF' ];\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported color space:', colorSpace );\n\t\t\treturn [ gamutMapping, 'LinearTransferOETF' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, gl.COMPILE_STATUS );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, colorSpace ) {\n\n\tconst components = getEncodingComponents( colorSpace );\n\treturn `vec4 ${functionName}( vec4 value ) { return ${components[ 0 ]}( ${components[ 1 ]}( value ) ); }`;\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase AgXToneMapping:\n\t\t\ttoneMappingName = 'AgX';\n\t\t\tbreak;\n\n\t\tcase NeutralToneMapping:\n\t\t\ttoneMappingName = 'Neutral';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateVertexExtensions( parameters ) {\n\n\tconst chunks = [\n\t\tparameters.extensionClipCullDistance ? '#extension GL_ANGLE_clip_cull_distance : require' : '',\n\t\tparameters.extensionMultiDraw ? '#extension GL_ANGLE_multi_draw : require' : '',\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === gl.FLOAT_MAT2 ) locationSize = 2;\n\t\tif ( info.type === gl.FLOAT_MAT3 ) locationSize = 3;\n\t\tif ( info.type === gl.FLOAT_MAT4 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\tconst numSpotLightCoords = parameters.numSpotLightShadows + parameters.numSpotLightMaps - parameters.numSpotLightShadowsWithMaps;\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_SPOT_LIGHT_MAPS/g, parameters.numSpotLightMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_COORDS/g, numSpotLightCoords )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, parameters.numSpotLightShadowsWithMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nconst shaderChunkMap = new Map( [\n\t[ 'encodings_fragment', 'colorspace_fragment' ], // @deprecated, r154\n\t[ 'encodings_pars_fragment', 'colorspace_pars_fragment' ], // @deprecated, r154\n\t[ 'output_fragment', 'opaque_fragment' ], // @deprecated, r154\n] );\n\nfunction includeReplacer( match, include ) {\n\n\tlet string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tconst newInclude = shaderChunkMap.get( include );\n\n\t\tif ( newInclude !== undefined ) {\n\n\t\t\tstring = ShaderChunk[ newInclude ];\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Shader chunk \"%s\" has been deprecated. Use \"%s\" instead.', include, newInclude );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string.replace( unrollLoopPattern, loopReplacer );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = `precision ${parameters.precision} float;\n\tprecision ${parameters.precision} int;\n\tprecision ${parameters.precision} sampler2D;\n\tprecision ${parameters.precision} samplerCube;\n\tprecision ${parameters.precision} sampler3D;\n\tprecision ${parameters.precision} sampler2DArray;\n\tprecision ${parameters.precision} sampler2DShadow;\n\tprecision ${parameters.precision} samplerCubeShadow;\n\tprecision ${parameters.precision} sampler2DArrayShadow;\n\tprecision ${parameters.precision} isampler2D;\n\tprecision ${parameters.precision} isampler3D;\n\tprecision ${parameters.precision} isamplerCube;\n\tprecision ${parameters.precision} isampler2DArray;\n\tprecision ${parameters.precision} usampler2D;\n\tprecision ${parameters.precision} usampler3D;\n\tprecision ${parameters.precision} usamplerCube;\n\tprecision ${parameters.precision} usampler2DArray;\n\t`;\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customVertexExtensions = generateVertexExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.extensionClipCullDistance ? '#define USE_CLIP_DISTANCE' : '',\n\t\t\tparameters.batching ? '#define USE_BATCHING' : '',\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\t\t\tparameters.instancingMorph ? '#define USE_INSTANCING_MORPH' : '',\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.displacementMap ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\t//\n\n\t\t\tparameters.mapUv ? '#define MAP_UV ' + parameters.mapUv : '',\n\t\t\tparameters.alphaMapUv ? '#define ALPHAMAP_UV ' + parameters.alphaMapUv : '',\n\t\t\tparameters.lightMapUv ? '#define LIGHTMAP_UV ' + parameters.lightMapUv : '',\n\t\t\tparameters.aoMapUv ? '#define AOMAP_UV ' + parameters.aoMapUv : '',\n\t\t\tparameters.emissiveMapUv ? '#define EMISSIVEMAP_UV ' + parameters.emissiveMapUv : '',\n\t\t\tparameters.bumpMapUv ? '#define BUMPMAP_UV ' + parameters.bumpMapUv : '',\n\t\t\tparameters.normalMapUv ? '#define NORMALMAP_UV ' + parameters.normalMapUv : '',\n\t\t\tparameters.displacementMapUv ? '#define DISPLACEMENTMAP_UV ' + parameters.displacementMapUv : '',\n\n\t\t\tparameters.metalnessMapUv ? '#define METALNESSMAP_UV ' + parameters.metalnessMapUv : '',\n\t\t\tparameters.roughnessMapUv ? '#define ROUGHNESSMAP_UV ' + parameters.roughnessMapUv : '',\n\n\t\t\tparameters.anisotropyMapUv ? '#define ANISOTROPYMAP_UV ' + parameters.anisotropyMapUv : '',\n\n\t\t\tparameters.clearcoatMapUv ? '#define CLEARCOATMAP_UV ' + parameters.clearcoatMapUv : '',\n\t\t\tparameters.clearcoatNormalMapUv ? '#define CLEARCOAT_NORMALMAP_UV ' + parameters.clearcoatNormalMapUv : '',\n\t\t\tparameters.clearcoatRoughnessMapUv ? '#define CLEARCOAT_ROUGHNESSMAP_UV ' + parameters.clearcoatRoughnessMapUv : '',\n\n\t\t\tparameters.iridescenceMapUv ? '#define IRIDESCENCEMAP_UV ' + parameters.iridescenceMapUv : '',\n\t\t\tparameters.iridescenceThicknessMapUv ? '#define IRIDESCENCE_THICKNESSMAP_UV ' + parameters.iridescenceThicknessMapUv : '',\n\n\t\t\tparameters.sheenColorMapUv ? '#define SHEEN_COLORMAP_UV ' + parameters.sheenColorMapUv : '',\n\t\t\tparameters.sheenRoughnessMapUv ? '#define SHEEN_ROUGHNESSMAP_UV ' + parameters.sheenRoughnessMapUv : '',\n\n\t\t\tparameters.specularMapUv ? '#define SPECULARMAP_UV ' + parameters.specularMapUv : '',\n\t\t\tparameters.specularColorMapUv ? '#define SPECULAR_COLORMAP_UV ' + parameters.specularColorMapUv : '',\n\t\t\tparameters.specularIntensityMapUv ? '#define SPECULAR_INTENSITYMAP_UV ' + parameters.specularIntensityMapUv : '',\n\n\t\t\tparameters.transmissionMapUv ? '#define TRANSMISSIONMAP_UV ' + parameters.transmissionMapUv : '',\n\t\t\tparameters.thicknessMapUv ? '#define THICKNESSMAP_UV ' + parameters.thicknessMapUv : '',\n\n\t\t\t//\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 ) ? '#define MORPHTARGETS_TEXTURE' : '',\n\t\t\t( parameters.morphTargetsCount > 0 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.useLegacyLights ? '#define LEGACY_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_MORPH',\n\n\t\t\t'\tuniform sampler2D morphTexture;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_UV1',\n\n\t\t\t'\tattribute vec2 uv1;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV2',\n\n\t\t\t'\tattribute vec2 uv2;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV3',\n\n\t\t\t'\tattribute vec2 uv3;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.alphaToCoverage ? '#define ALPHA_TO_COVERAGE' : '',\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.useLegacyLights ? '#define LEGACY_LIGHTS' : '',\n\n\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'colorspace_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputColorSpace ),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\tcustomVertexExtensions,\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\tfunction onFirstUse( self ) {\n\n\t\t// check for link errors\n\t\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\t\tlet runnable = true;\n\t\t\tlet haveDiagnostics = true;\n\n\t\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\t\trunnable = false;\n\n\t\t\t\tif ( typeof renderer.debug.onShaderError === 'function' ) {\n\n\t\t\t\t\trenderer.debug.onShaderError( gl, program, glVertexShader, glFragmentShader );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// default error reporting\n\n\t\t\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, gl.VALIDATE_STATUS ) + '\\n\\n' +\n\t\t\t\t\t\t'Material Name: ' + self.name + '\\n' +\n\t\t\t\t\t\t'Material Type: ' + self.type + '\\n\\n' +\n\t\t\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\t\t\tfragmentErrors\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t} else if ( programLog !== '' ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\t\thaveDiagnostics = false;\n\n\t\t\t}\n\n\t\t\tif ( haveDiagnostics ) {\n\n\t\t\t\tself.diagnostics = {\n\n\t\t\t\t\trunnable: runnable,\n\n\t\t\t\t\tprogramLog: programLog,\n\n\t\t\t\t\tvertexShader: {\n\n\t\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t\t},\n\n\t\t\t\t\tfragmentShader: {\n\n\t\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Clean up\n\n\t\t// Crashes in iOS9 and iOS10. #18402\n\t\t// gl.detachShader( program, glVertexShader );\n\t\t// gl.detachShader( program, glFragmentShader );\n\n\t\tgl.deleteShader( glVertexShader );\n\t\tgl.deleteShader( glFragmentShader );\n\n\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t}\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\t// Populates cachedUniforms and cachedAttributes\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\t// Populates cachedAttributes and cachedUniforms\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// indicate when the program is ready to be used. if the KHR_parallel_shader_compile extension isn't supported,\n\t// flag the program as ready immediately. It may cause a stall when it's first used.\n\n\tlet programReady = ( parameters.rendererExtensionParallelShaderCompile === false );\n\n\tthis.isReady = function () {\n\n\t\tif ( programReady === false ) {\n\n\t\t\tprogramReady = gl.getProgramParameter( program, COMPLETION_STATUS_KHR );\n\n\t\t}\n\n\t\treturn programReady;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.type = parameters.shaderType;\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nlet _id$1 = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\t\tlet set = cache.get( material );\n\n\t\tif ( set === undefined ) {\n\n\t\t\tset = new Set();\n\t\t\tcache.set( material, set );\n\n\t\t}\n\n\t\treturn set;\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\t\tlet stage = cache.get( code );\n\n\t\tif ( stage === undefined ) {\n\n\t\t\tstage = new WebGLShaderStage( code );\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn stage;\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor( code ) {\n\n\t\tthis.id = _id$1 ++;\n\n\t\tthis.code = code;\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst _activeChannels = new Set();\n\tconst programs = [];\n\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst SUPPORTS_VERTEX_TEXTURES = capabilities.vertexTextures;\n\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getChannel( value ) {\n\n\t\t_activeChannels.add( value );\n\n\t\tif ( value === 0 ) return 'uv';\n\n\t\treturn `uv${ value }`;\n\n\t}\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst IS_INSTANCEDMESH = object.isInstancedMesh === true;\n\t\tconst IS_BATCHEDMESH = object.isBatchedMesh === true;\n\n\t\tconst HAS_MAP = !! material.map;\n\t\tconst HAS_MATCAP = !! material.matcap;\n\t\tconst HAS_ENVMAP = !! envMap;\n\t\tconst HAS_AOMAP = !! material.aoMap;\n\t\tconst HAS_LIGHTMAP = !! material.lightMap;\n\t\tconst HAS_BUMPMAP = !! material.bumpMap;\n\t\tconst HAS_NORMALMAP = !! material.normalMap;\n\t\tconst HAS_DISPLACEMENTMAP = !! material.displacementMap;\n\t\tconst HAS_EMISSIVEMAP = !! material.emissiveMap;\n\n\t\tconst HAS_METALNESSMAP = !! material.metalnessMap;\n\t\tconst HAS_ROUGHNESSMAP = !! material.roughnessMap;\n\n\t\tconst HAS_ANISOTROPY = material.anisotropy > 0;\n\t\tconst HAS_CLEARCOAT = material.clearcoat > 0;\n\t\tconst HAS_IRIDESCENCE = material.iridescence > 0;\n\t\tconst HAS_SHEEN = material.sheen > 0;\n\t\tconst HAS_TRANSMISSION = material.transmission > 0;\n\n\t\tconst HAS_ANISOTROPYMAP = HAS_ANISOTROPY && !! material.anisotropyMap;\n\n\t\tconst HAS_CLEARCOATMAP = HAS_CLEARCOAT && !! material.clearcoatMap;\n\t\tconst HAS_CLEARCOAT_NORMALMAP = HAS_CLEARCOAT && !! material.clearcoatNormalMap;\n\t\tconst HAS_CLEARCOAT_ROUGHNESSMAP = HAS_CLEARCOAT && !! material.clearcoatRoughnessMap;\n\n\t\tconst HAS_IRIDESCENCEMAP = HAS_IRIDESCENCE && !! material.iridescenceMap;\n\t\tconst HAS_IRIDESCENCE_THICKNESSMAP = HAS_IRIDESCENCE && !! material.iridescenceThicknessMap;\n\n\t\tconst HAS_SHEEN_COLORMAP = HAS_SHEEN && !! material.sheenColorMap;\n\t\tconst HAS_SHEEN_ROUGHNESSMAP = HAS_SHEEN && !! material.sheenRoughnessMap;\n\n\t\tconst HAS_SPECULARMAP = !! material.specularMap;\n\t\tconst HAS_SPECULAR_COLORMAP = !! material.specularColorMap;\n\t\tconst HAS_SPECULAR_INTENSITYMAP = !! material.specularIntensityMap;\n\n\t\tconst HAS_TRANSMISSIONMAP = HAS_TRANSMISSION && !! material.transmissionMap;\n\t\tconst HAS_THICKNESSMAP = HAS_TRANSMISSION && !! material.thicknessMap;\n\n\t\tconst HAS_GRADIENTMAP = !! material.gradientMap;\n\n\t\tconst HAS_ALPHAMAP = !! material.alphaMap;\n\n\t\tconst HAS_ALPHATEST = material.alphaTest > 0;\n\n\t\tconst HAS_ALPHAHASH = !! material.alphaHash;\n\n\t\tconst HAS_EXTENSIONS = !! material.extensions;\n\n\t\tlet toneMapping = NoToneMapping;\n\n\t\tif ( material.toneMapped ) {\n\n\t\t\tif ( currentRenderTarget === null || currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\ttoneMapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst parameters = {\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderType: material.type,\n\t\t\tshaderName: material.name,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tbatching: IS_BATCHEDMESH,\n\t\t\tinstancing: IS_INSTANCEDMESH,\n\t\t\tinstancingColor: IS_INSTANCEDMESH && object.instanceColor !== null,\n\t\t\tinstancingMorph: IS_INSTANCEDMESH && object.morphTexture !== null,\n\n\t\t\tsupportsVertexTextures: SUPPORTS_VERTEX_TEXTURES,\n\t\t\toutputColorSpace: ( currentRenderTarget === null ) ? renderer.outputColorSpace : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace ),\n\t\t\talphaToCoverage: !! material.alphaToCoverage,\n\n\t\t\tmap: HAS_MAP,\n\t\t\tmatcap: HAS_MATCAP,\n\t\t\tenvMap: HAS_ENVMAP,\n\t\t\tenvMapMode: HAS_ENVMAP && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\taoMap: HAS_AOMAP,\n\t\t\tlightMap: HAS_LIGHTMAP,\n\t\t\tbumpMap: HAS_BUMPMAP,\n\t\t\tnormalMap: HAS_NORMALMAP,\n\t\t\tdisplacementMap: SUPPORTS_VERTEX_TEXTURES && HAS_DISPLACEMENTMAP,\n\t\t\temissiveMap: HAS_EMISSIVEMAP,\n\n\t\t\tnormalMapObjectSpace: HAS_NORMALMAP && material.normalMapType === ObjectSpaceNormalMap,\n\t\t\tnormalMapTangentSpace: HAS_NORMALMAP && material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tmetalnessMap: HAS_METALNESSMAP,\n\t\t\troughnessMap: HAS_ROUGHNESSMAP,\n\n\t\t\tanisotropy: HAS_ANISOTROPY,\n\t\t\tanisotropyMap: HAS_ANISOTROPYMAP,\n\n\t\t\tclearcoat: HAS_CLEARCOAT,\n\t\t\tclearcoatMap: HAS_CLEARCOATMAP,\n\t\t\tclearcoatNormalMap: HAS_CLEARCOAT_NORMALMAP,\n\t\t\tclearcoatRoughnessMap: HAS_CLEARCOAT_ROUGHNESSMAP,\n\n\t\t\tiridescence: HAS_IRIDESCENCE,\n\t\t\tiridescenceMap: HAS_IRIDESCENCEMAP,\n\t\t\tiridescenceThicknessMap: HAS_IRIDESCENCE_THICKNESSMAP,\n\n\t\t\tsheen: HAS_SHEEN,\n\t\t\tsheenColorMap: HAS_SHEEN_COLORMAP,\n\t\t\tsheenRoughnessMap: HAS_SHEEN_ROUGHNESSMAP,\n\n\t\t\tspecularMap: HAS_SPECULARMAP,\n\t\t\tspecularColorMap: HAS_SPECULAR_COLORMAP,\n\t\t\tspecularIntensityMap: HAS_SPECULAR_INTENSITYMAP,\n\n\t\t\ttransmission: HAS_TRANSMISSION,\n\t\t\ttransmissionMap: HAS_TRANSMISSIONMAP,\n\t\t\tthicknessMap: HAS_THICKNESSMAP,\n\n\t\t\tgradientMap: HAS_GRADIENTMAP,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending && material.alphaToCoverage === false,\n\n\t\t\talphaMap: HAS_ALPHAMAP,\n\t\t\talphaTest: HAS_ALPHATEST,\n\t\t\talphaHash: HAS_ALPHAHASH,\n\n\t\t\tcombine: material.combine,\n\n\t\t\t//\n\n\t\t\tmapUv: HAS_MAP && getChannel( material.map.channel ),\n\t\t\taoMapUv: HAS_AOMAP && getChannel( material.aoMap.channel ),\n\t\t\tlightMapUv: HAS_LIGHTMAP && getChannel( material.lightMap.channel ),\n\t\t\tbumpMapUv: HAS_BUMPMAP && getChannel( material.bumpMap.channel ),\n\t\t\tnormalMapUv: HAS_NORMALMAP && getChannel( material.normalMap.channel ),\n\t\t\tdisplacementMapUv: HAS_DISPLACEMENTMAP && getChannel( material.displacementMap.channel ),\n\t\t\temissiveMapUv: HAS_EMISSIVEMAP && getChannel( material.emissiveMap.channel ),\n\n\t\t\tmetalnessMapUv: HAS_METALNESSMAP && getChannel( material.metalnessMap.channel ),\n\t\t\troughnessMapUv: HAS_ROUGHNESSMAP && getChannel( material.roughnessMap.channel ),\n\n\t\t\tanisotropyMapUv: HAS_ANISOTROPYMAP && getChannel( material.anisotropyMap.channel ),\n\n\t\t\tclearcoatMapUv: HAS_CLEARCOATMAP && getChannel( material.clearcoatMap.channel ),\n\t\t\tclearcoatNormalMapUv: HAS_CLEARCOAT_NORMALMAP && getChannel( material.clearcoatNormalMap.channel ),\n\t\t\tclearcoatRoughnessMapUv: HAS_CLEARCOAT_ROUGHNESSMAP && getChannel( material.clearcoatRoughnessMap.channel ),\n\n\t\t\tiridescenceMapUv: HAS_IRIDESCENCEMAP && getChannel( material.iridescenceMap.channel ),\n\t\t\tiridescenceThicknessMapUv: HAS_IRIDESCENCE_THICKNESSMAP && getChannel( material.iridescenceThicknessMap.channel ),\n\n\t\t\tsheenColorMapUv: HAS_SHEEN_COLORMAP && getChannel( material.sheenColorMap.channel ),\n\t\t\tsheenRoughnessMapUv: HAS_SHEEN_ROUGHNESSMAP && getChannel( material.sheenRoughnessMap.channel ),\n\n\t\t\tspecularMapUv: HAS_SPECULARMAP && getChannel( material.specularMap.channel ),\n\t\t\tspecularColorMapUv: HAS_SPECULAR_COLORMAP && getChannel( material.specularColorMap.channel ),\n\t\t\tspecularIntensityMapUv: HAS_SPECULAR_INTENSITYMAP && getChannel( material.specularIntensityMap.channel ),\n\n\t\t\ttransmissionMapUv: HAS_TRANSMISSIONMAP && getChannel( material.transmissionMap.channel ),\n\t\t\tthicknessMapUv: HAS_THICKNESSMAP && getChannel( material.thicknessMap.channel ),\n\n\t\t\talphaMapUv: HAS_ALPHAMAP && getChannel( material.alphaMap.channel ),\n\n\t\t\t//\n\n\t\t\tvertexTangents: !! geometry.attributes.tangent && ( HAS_NORMALMAP || HAS_ANISOTROPY ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\n\t\t\tpointsUvs: object.isPoints === true && !! geometry.attributes.uv && ( HAS_MAP || HAS_ALPHAMAP ),\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( !! fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading === true,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation === true,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumSpotLightMaps: lights.spotLightMap.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\tnumSpotLightShadowsWithMaps: lights.numSpotLightShadowsWithMaps,\n\n\t\t\tnumLightProbes: lights.numLightProbes,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: toneMapping,\n\t\t\tuseLegacyLights: renderer._useLegacyLights,\n\n\t\t\tdecodeVideoTexture: HAS_MAP && ( material.map.isVideoTexture === true ) && ( ColorManagement.getTransfer( material.map.colorSpace ) === SRGBTransfer ),\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: material.depthPacking >= 0,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionClipCullDistance: HAS_EXTENSIONS && material.extensions.clipCullDistance === true && extensions.has( 'WEBGL_clip_cull_distance' ),\n\t\t\textensionMultiDraw: HAS_EXTENSIONS && material.extensions.multiDraw === true && extensions.has( 'WEBGL_multi_draw' ),\n\n\t\t\trendererExtensionParallelShaderCompile: extensions.has( 'KHR_parallel_shader_compile' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\t// the usage of getChannel() determines the active texture channels for this shader\n\n\t\tparameters.vertexUv1s = _activeChannels.has( 1 );\n\t\tparameters.vertexUv2s = _activeChannels.has( 2 );\n\t\tparameters.vertexUv3s = _activeChannels.has( 3 );\n\n\t\t_activeChannels.clear();\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputColorSpace );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputColorSpace );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.mapUv );\n\t\tarray.push( parameters.alphaMapUv );\n\t\tarray.push( parameters.lightMapUv );\n\t\tarray.push( parameters.aoMapUv );\n\t\tarray.push( parameters.bumpMapUv );\n\t\tarray.push( parameters.normalMapUv );\n\t\tarray.push( parameters.displacementMapUv );\n\t\tarray.push( parameters.emissiveMapUv );\n\t\tarray.push( parameters.metalnessMapUv );\n\t\tarray.push( parameters.roughnessMapUv );\n\t\tarray.push( parameters.anisotropyMapUv );\n\t\tarray.push( parameters.clearcoatMapUv );\n\t\tarray.push( parameters.clearcoatNormalMapUv );\n\t\tarray.push( parameters.clearcoatRoughnessMapUv );\n\t\tarray.push( parameters.iridescenceMapUv );\n\t\tarray.push( parameters.iridescenceThicknessMapUv );\n\t\tarray.push( parameters.sheenColorMapUv );\n\t\tarray.push( parameters.sheenRoughnessMapUv );\n\t\tarray.push( parameters.specularMapUv );\n\t\tarray.push( parameters.specularColorMapUv );\n\t\tarray.push( parameters.specularIntensityMapUv );\n\t\tarray.push( parameters.transmissionMapUv );\n\t\tarray.push( parameters.thicknessMapUv );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numSpotLightMaps );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.numSpotLightShadowsWithMaps );\n\t\tarray.push( parameters.numLightProbes );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingMorph )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.normalMapObjectSpace )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.normalMapTangentSpace )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.iridescence )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.vertexUv1s )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.vertexUv2s )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.vertexUv3s )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.anisotropy )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.alphaHash )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.batching )\n\t\t\t_programLayers.enable( 19 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.useLegacyLights )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.pointsUvs )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.decodeVideoTexture )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.alphaToCoverage )\n\t\t\t_programLayers.enable( 20 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tconst listArray = lists.get( scene );\n\t\tlet list;\n\n\t\tif ( listArray === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= listArray.length ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlistArray.push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = listArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingAndTexturingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 2 : 0 ) - ( lightA.castShadow ? 2 : 0 ) + ( lightB.map ? 1 : 0 ) - ( lightA.map ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1,\n\t\t\tnumSpotMaps: - 1,\n\n\t\t\tnumLightProbes: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotLightMap: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotLightMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: [],\n\t\tnumSpotLightShadowsWithMaps: 0,\n\t\tnumLightProbes: 0\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights, useLegacyLights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\t\tlet numSpotMaps = 0;\n\t\tlet numSpotShadowsWithMaps = 0;\n\n\t\tlet numLightProbes = 0;\n\n\t\t// ordering : [shadow casting + map texturing, map texturing, shadow casting, none ]\n\t\tlights.sort( shadowCastingAndTexturingLightsFirst );\n\n\t\t// artist-friendly light intensity scaling factor\n\t\tconst scaleFactor = ( useLegacyLights === true ) ? Math.PI : 1;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity * scaleFactor;\n\t\t\t\tg += color.g * intensity * scaleFactor;\n\t\t\t\tb += color.b * intensity * scaleFactor;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t\tnumLightProbes ++;\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\tif ( light.map ) {\n\n\t\t\t\t\tstate.spotLightMap[ numSpotMaps ] = light.map;\n\t\t\t\t\tnumSpotMaps ++;\n\n\t\t\t\t\t// make sure the lightMatrix is up to date\n\t\t\t\t\t// TODO : do it if required only\n\t\t\t\t\tshadow.updateMatrices( light );\n\n\t\t\t\t\tif ( light.castShadow ) numSpotShadowsWithMaps ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotLightMatrix[ spotLength ] = shadow.matrix;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity * scaleFactor );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ||\n\t\t\thash.numSpotMaps !== numSpotMaps ||\n\t\t\thash.numLightProbes !== numLightProbes ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotLightMatrix.length = numSpotShadows + numSpotMaps - numSpotShadowsWithMaps;\n\t\t\tstate.spotLightMap.length = numSpotMaps;\n\t\t\tstate.numSpotLightShadowsWithMaps = numSpotShadowsWithMaps;\n\t\t\tstate.numLightProbes = numLightProbes;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\thash.numSpotMaps = numSpotMaps;\n\n\t\t\thash.numLightProbes = numLightProbes;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions ) {\n\n\tconst lights = new WebGLLights( extensions );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( useLegacyLights ) {\n\n\t\tlights.setup( lightsArray, useLegacyLights );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights,\n\n\t\ttransmissionRenderTarget: null\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tconst renderStateArray = renderStates.get( scene );\n\t\tlet renderState;\n\n\t\tif ( renderStateArray === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStateArray.length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions );\n\t\t\t\trenderStateArray.push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStateArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDepthMaterial = true;\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDistanceMaterial = true;\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap( _renderer, _objects, _capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\tconst shadowSide = { [ FrontSide ]: BackSide, [ BackSide ]: FrontSide, [ DoubleSide ]: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\tlet _previousType = this.type;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tconst _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// check for shadow map type changes\n\n\t\tconst toVSM = ( _previousType !== VSMShadowMap && this.type === VSMShadowMap );\n\t\tconst fromVSM = ( _previousType === VSMShadowMap && this.type !== VSMShadowMap );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null || toVSM === true || fromVSM === true ) {\n\n\t\t\t\tconst pars = ( this.type !== VSMShadowMap ) ? { minFilter: NearestFilter, magFilter: NearestFilter } : {};\n\n\t\t\t\tif ( shadow.map !== null ) {\n\n\t\t\t\t\tshadow.map.dispose();\n\n\t\t\t\t}\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( shadow.isPointLightShadow !== true && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\t_previousType = this.type;\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = _objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( shadow.mapPass === null ) {\n\n\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t\tif ( ( _renderer.localClippingEnabled && material.clipShadows === true && Array.isArray( material.clippingPlanes ) && material.clippingPlanes.length !== 0 ) ||\n\t\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t\t( material.alphaMap && material.alphaTest > 0 ) ||\n\t\t\t\t( material.map && material.alphaTest > 0 ) ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\t\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\t\tresult.map = material.map;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tconst materialProperties = _renderer.properties.get( result );\n\t\t\tmaterialProperties.light = light;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = _objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, type );\n\n\t\t\t\t\t\t\tobject.onBeforeShadow( _renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t\tobject.onAfterShadow( _renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, type );\n\n\t\t\t\t\tobject.onBeforeShadow( _renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t\tobject.onAfterShadow( _renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tconst material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t// make sure to remove the unique distance/depth materials used for shadow map rendering\n\n\t\tfor ( const id in _materialCache ) {\n\n\t\t\tconst cache = _materialCache[ id ];\n\n\t\t\tconst uuid = event.target.uuid;\n\n\t\t\tif ( uuid in cache ) {\n\n\t\t\t\tconst shadowMaterial = cache[ uuid ];\n\t\t\t\tshadowMaterial.dispose();\n\t\t\t\tdelete cache[ uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction WebGLState( gl ) {\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tconst uboBindings = new WeakMap();\n\tconst uboProgramMap = new WeakMap();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentBlendColor = new Color( 0, 0, 0 );\n\tlet currentBlendAlpha = 0;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( gl.SCISSOR_BOX );\n\tconst viewportParam = gl.getParameter( gl.VIEWPORT );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count, dimensions ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tif ( type === gl.TEXTURE_3D || type === gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\tgl.texImage3D( target, 0, gl.RGBA, 1, 1, dimensions, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t} else {\n\n\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\temptyTextures[ gl.TEXTURE_2D_ARRAY ] = createTexture( gl.TEXTURE_2D_ARRAY, gl.TEXTURE_2D_ARRAY, 1, 1 );\n\temptyTextures[ gl.TEXTURE_3D ] = createTexture( gl.TEXTURE_3D, gl.TEXTURE_3D, 1, 1 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n\n\t\t\tif ( target === gl.DRAW_FRAMEBUFFER ) {\n\n\t\t\t\tcurrentBoundFramebuffers[ gl.FRAMEBUFFER ] = framebuffer;\n\n\t\t\t}\n\n\t\t\tif ( target === gl.FRAMEBUFFER ) {\n\n\t\t\t\tcurrentBoundFramebuffers[ gl.DRAW_FRAMEBUFFER ] = framebuffer;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tconst textures = renderTarget.textures;\n\n\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\tdrawBuffers[ i ] = gl.COLOR_ATTACHMENT0 + i;\n\n\t\t\t\t}\n\n\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== gl.BACK ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = gl.BACK;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t}\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: gl.FUNC_ADD,\n\t\t[ SubtractEquation ]: gl.FUNC_SUBTRACT,\n\t\t[ ReverseSubtractEquation ]: gl.FUNC_REVERSE_SUBTRACT\n\t};\n\n\tequationToGL[ MinEquation ] = gl.MIN;\n\tequationToGL[ MaxEquation ] = gl.MAX;\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: gl.ZERO,\n\t\t[ OneFactor ]: gl.ONE,\n\t\t[ SrcColorFactor ]: gl.SRC_COLOR,\n\t\t[ SrcAlphaFactor ]: gl.SRC_ALPHA,\n\t\t[ SrcAlphaSaturateFactor ]: gl.SRC_ALPHA_SATURATE,\n\t\t[ DstColorFactor ]: gl.DST_COLOR,\n\t\t[ DstAlphaFactor ]: gl.DST_ALPHA,\n\t\t[ OneMinusSrcColorFactor ]: gl.ONE_MINUS_SRC_COLOR,\n\t\t[ OneMinusSrcAlphaFactor ]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t[ OneMinusDstColorFactor ]: gl.ONE_MINUS_DST_COLOR,\n\t\t[ OneMinusDstAlphaFactor ]: gl.ONE_MINUS_DST_ALPHA,\n\t\t[ ConstantColorFactor ]: gl.CONSTANT_COLOR,\n\t\t[ OneMinusConstantColorFactor ]: gl.ONE_MINUS_CONSTANT_COLOR,\n\t\t[ ConstantAlphaFactor ]: gl.CONSTANT_ALPHA,\n\t\t[ OneMinusConstantAlphaFactor ]: gl.ONE_MINUS_CONSTANT_ALPHA\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, blendColor, blendAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( gl.BLEND );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( gl.BLEND );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\t\t\t\tcurrentBlendColor.set( 0, 0, 0 );\n\t\t\t\tcurrentBlendAlpha = 0;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tif ( blendColor.equals( currentBlendColor ) === false || blendAlpha !== currentBlendAlpha ) {\n\n\t\t\tgl.blendColor( blendColor.r, blendColor.g, blendColor.b, blendAlpha );\n\n\t\t\tcurrentBlendColor.copy( blendColor );\n\t\t\tcurrentBlendAlpha = blendAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = false;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.blendColor, material.blendAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( gl.SAMPLE_ALPHA_TO_COVERAGE )\n\t\t\t: disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture, webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\twebglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\t} else {\n\n\t\t\t\twebglSlot = currentTextureSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ webglSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ webglSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\tfunction updateUBOMapping( uniformsGroup, program ) {\n\n\t\tlet mapping = uboProgramMap.get( program );\n\n\t\tif ( mapping === undefined ) {\n\n\t\t\tmapping = new WeakMap();\n\n\t\t\tuboProgramMap.set( program, mapping );\n\n\t\t}\n\n\t\tlet blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( blockIndex === undefined ) {\n\n\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\n\n\t\t\tmapping.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\tfunction uniformBlockBinding( uniformsGroup, program ) {\n\n\t\tconst mapping = uboProgramMap.get( program );\n\t\tconst blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( uboBindings.get( program ) !== blockIndex ) {\n\n\t\t\t// bind shader specific block index to global block point\n\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\n\n\t\t\tuboBindings.set( program, blockIndex );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( gl.BLEND );\n\t\tgl.disable( gl.CULL_FACE );\n\t\tgl.disable( gl.DEPTH_TEST );\n\t\tgl.disable( gl.POLYGON_OFFSET_FILL );\n\t\tgl.disable( gl.SCISSOR_TEST );\n\t\tgl.disable( gl.STENCIL_TEST );\n\t\tgl.disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\tgl.blendFunc( gl.ONE, gl.ZERO );\n\t\tgl.blendFuncSeparate( gl.ONE, gl.ZERO, gl.ONE, gl.ZERO );\n\t\tgl.blendColor( 0, 0, 0, 0 );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( gl.LESS );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( gl.ALWAYS, 0, 0xffffffff );\n\t\tgl.stencilOp( gl.KEEP, gl.KEEP, gl.KEEP );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( gl.BACK );\n\t\tgl.frontFace( gl.CCW );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( gl.TEXTURE0 );\n\n\t\tgl.bindFramebuffer( gl.FRAMEBUFFER, null );\n\t\tgl.bindFramebuffer( gl.DRAW_FRAMEBUFFER, null );\n\t\tgl.bindFramebuffer( gl.READ_FRAMEBUFFER, null );\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentBlendColor = new Color( 0, 0, 0 );\n\t\tcurrentBlendAlpha = 0;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\tcompressedTexImage3D: compressedTexImage3D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tupdateUBOMapping: updateUBOMapping,\n\t\tuniformBlockBinding: uniformBlockBinding,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\t\tcompressedTexSubImage3D: compressedTexSubImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\tconst supportsInvalidateFramebuffer = typeof navigator === 'undefined' ? false : /OculusBrowser/g.test( navigator.userAgent );\n\n\tconst _imageDimensions = new Vector2();\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\tconst dimensions = getDimensions( image );\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( dimensions.width > maxSize || dimensions.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( dimensions.width, dimensions.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ||\n\t\t\t\t( typeof VideoFrame !== 'undefined' && image instanceof VideoFrame ) ) {\n\n\t\t\t\tconst width = Math.floor( scale * dimensions.width );\n\t\t\t\tconst height = Math.floor( scale * dimensions.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + dimensions.width + 'x' + dimensions.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + dimensions.width + 'x' + dimensions.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture ) {\n\n\t\treturn texture.generateMipmaps && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, colorSpace, forceLinearTransfer = false ) {\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === _gl.RED ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.R32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.R16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RED_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.R16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.R32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.R8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.R16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.R32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RG ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RG32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RG16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RG_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.RG16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.RG32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.RG8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.RG16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.RG32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGB ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_INT_5_9_9_9_REV ) internalFormat = _gl.RGB9_E5;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGBA ) {\n\n\t\t\tconst transfer = forceLinearTransfer ? LinearTransfer : ColorManagement.getTransfer( colorSpace );\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RGBA32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RGBA16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = ( transfer === SRGBTransfer ) ? _gl.SRGB8_ALPHA8 : _gl.RGBA8;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_4_4_4_4 ) internalFormat = _gl.RGBA4;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_5_5_5_1 ) internalFormat = _gl.RGB5_A1;\n\n\t\t}\n\n\t\tif ( internalFormat === _gl.R16F || internalFormat === _gl.R32F ||\n\t\t\tinternalFormat === _gl.RG16F || internalFormat === _gl.RG32F ||\n\t\t\tinternalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\tfunction getMipLevels( texture, image ) {\n\n\t\tif ( textureNeedsGenerateMipmaps( texture ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t// user-defined mipmaps\n\n\t\t\treturn texture.mipmaps.length;\n\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\treturn image.mipmaps.length;\n\n\t\t} else {\n\n\t\t\t// texture without mipmaps (only base level)\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures ) {\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\twebglTexture.usedTimes --;\n\n\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\tdeleteTexture( texture );\n\n\t\t\t}\n\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t_sources.delete( source );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deleteTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer[ i ] ) ) {\n\n\t\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer[ i ].length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ][ level ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer ) ) {\n\n\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer.length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ level ] );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) {\n\n\t\t\t\tfor ( let i = 0; i < renderTargetProperties.__webglColorRenderbuffer.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer[ i ] ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tconst textures = renderTarget.textures;\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\tinfo.memory.textures --;\n\n\t\t\t}\n\n\t\t\tproperties.remove( textures[ i ] );\n\n\t\t}\n\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction getTextureCacheKey( texture ) {\n\n\t\tconst array = [];\n\n\t\tarray.push( texture.wrapS );\n\t\tarray.push( texture.wrapT );\n\t\tarray.push( texture.wrapR || 0 );\n\t\tarray.push( texture.magFilter );\n\t\tarray.push( texture.minFilter );\n\t\tarray.push( texture.anisotropy );\n\t\tarray.push( texture.internalFormat );\n\t\tarray.push( texture.format );\n\t\tarray.push( texture.type );\n\t\tarray.push( texture.generateMipmaps );\n\t\tarray.push( texture.premultiplyAlpha );\n\t\tarray.push( texture.flipY );\n\t\tarray.push( texture.unpackAlignment );\n\t\tarray.push( texture.colorSpace );\n\n\t\treturn array.join();\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_3D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: _gl.REPEAT,\n\t\t[ ClampToEdgeWrapping ]: _gl.CLAMP_TO_EDGE,\n\t\t[ MirroredRepeatWrapping ]: _gl.MIRRORED_REPEAT\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: _gl.NEAREST,\n\t\t[ NearestMipmapNearestFilter ]: _gl.NEAREST_MIPMAP_NEAREST,\n\t\t[ NearestMipmapLinearFilter ]: _gl.NEAREST_MIPMAP_LINEAR,\n\n\t\t[ LinearFilter ]: _gl.LINEAR,\n\t\t[ LinearMipmapNearestFilter ]: _gl.LINEAR_MIPMAP_NEAREST,\n\t\t[ LinearMipmapLinearFilter ]: _gl.LINEAR_MIPMAP_LINEAR\n\t};\n\n\tconst compareToGL = {\n\t\t[ NeverCompare ]: _gl.NEVER,\n\t\t[ AlwaysCompare ]: _gl.ALWAYS,\n\t\t[ LessCompare ]: _gl.LESS,\n\t\t[ LessEqualCompare ]: _gl.LEQUAL,\n\t\t[ EqualCompare ]: _gl.EQUAL,\n\t\t[ GreaterEqualCompare ]: _gl.GEQUAL,\n\t\t[ GreaterCompare ]: _gl.GREATER,\n\t\t[ NotEqualCompare ]: _gl.NOTEQUAL\n\t};\n\n\tfunction setTextureParameters( textureType, texture ) {\n\n\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false &&\n\t\t\t( texture.magFilter === LinearFilter || texture.magFilter === LinearMipmapNearestFilter || texture.magFilter === NearestMipmapLinearFilter || texture.magFilter === LinearMipmapLinearFilter ||\n\t\t\ttexture.minFilter === LinearFilter || texture.minFilter === LinearMipmapNearestFilter || texture.minFilter === NearestMipmapLinearFilter || texture.minFilter === LinearMipmapLinearFilter ) ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device.' );\n\n\t\t}\n\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[ texture.wrapS ] );\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[ texture.wrapT ] );\n\n\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[ texture.wrapR ] );\n\n\t\t}\n\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[ texture.magFilter ] );\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[ texture.minFilter ] );\n\n\t\tif ( texture.compareFunction ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_MODE, _gl.COMPARE_REF_TO_TEXTURE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_FUNC, compareToGL[ texture.compareFunction ] );\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tif ( texture.magFilter === NearestFilter ) return;\n\t\t\tif ( texture.minFilter !== NearestMipmapLinearFilter && texture.minFilter !== LinearMipmapLinearFilter ) return;\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tlet forceUpload = false;\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t}\n\n\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\tconst source = texture.source;\n\t\tlet webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures === undefined ) {\n\n\t\t\twebglTextures = {};\n\t\t\t_sources.set( source, webglTextures );\n\n\t\t}\n\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t// create new entry\n\n\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\tusedTimes: 0\n\t\t\t\t};\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t// even if the image contents are identical\n\n\t\t\t\tforceUpload = true;\n\n\t\t\t}\n\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t}\n\n\t\treturn forceUpload;\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = _gl.TEXTURE_2D;\n\n\t\tif ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) textureType = _gl.TEXTURE_2D_ARRAY;\n\t\tif ( texture.isData3DTexture ) textureType = _gl.TEXTURE_3D;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tlet image = resizeImage( texture.image, false, capabilities.maxTextureSize );\n\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\n\t\t\tconst glType = utils.convert( texture.type );\n\t\t\tlet glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, texture.isVideoTexture );\n\n\t\t\tsetTextureParameters( textureType, texture );\n\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tconst useTexStorage = ( texture.isVideoTexture !== true && glInternalFormat !== RGB_ETC1_Format );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst dataReady = source.dataReady;\n\t\t\tconst levels = getMipLevels( texture, image );\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tif ( texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_3D, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_3D, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tlet width = image.width, height = image.height;\n\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t\twidth >>= 1;\n\t\t\t\t\t\t\theight >>= 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tconst dimensions = getDimensions( mipmaps[ 0 ] );\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, dimensions.width, dimensions.height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tconst dimensions = getDimensions( image );\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, dimensions.width, dimensions.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], true, capabilities.maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\n\t\t\tconst useTexStorage = ( texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst dataReady = source.dataReady;\n\t\t\tlet levels = getMipLevels( texture, image );\n\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\tconst dimensions = getDimensions( cubeImage[ 0 ] );\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, dimensions.width, dimensions.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget, level ) {\n\n\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\tconst width = Math.max( 1, renderTarget.width >> level );\n\t\t\tconst height = Math.max( 1, renderTarget.height >> level );\n\n\t\t\tif ( textureTarget === _gl.TEXTURE_3D || textureTarget === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\tstate.texImage3D( textureTarget, level, glInternalFormat, width, height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( textureTarget, level, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t} else if ( textureTarget === _gl.TEXTURE_2D || ( textureTarget >= _gl.TEXTURE_CUBE_MAP_POSITIVE_X && textureTarget <= _gl.TEXTURE_CUBE_MAP_NEGATIVE_Z ) ) { // see #24753\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, level );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tlet glInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\tif ( isMultisample || useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst textures = renderTarget.textures;\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tconst texture = textures[ i ];\n\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// rebind framebuffer with external textures\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( colorTexture !== undefined ) {\n\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, 0 );\n\n\t\t}\n\n\t\tif ( depthTexture !== undefined ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tconst textures = renderTarget.textures;\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( textures.length > 1 );\n\n\t\tif ( ! isMultipleRenderTargets ) {\n\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = [];\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ][ level ] = _gl.createFramebuffer();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ level ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ( renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = [];\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tconst texture = textures[ i ];\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer[ i ] = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, renderTarget.isXRRenderTarget === true );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ][ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, level );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, attachment );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, 0 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment ) ) {\n\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = _gl.TEXTURE_2D;\n\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture );\n\n\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, level );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, 0 );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst textures = renderTarget.textures;\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( ( renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\tconst textures = renderTarget.textures;\n\t\t\tconst width = renderTarget.width;\n\t\t\tconst height = renderTarget.height;\n\t\t\tlet mask = _gl.COLOR_BUFFER_BIT;\n\t\t\tconst invalidationArray = [];\n\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\tconst isMultipleRenderTargets = ( textures.length > 1 );\n\n\t\t\t// If MRT we need to remove FBO attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, null );\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, null, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tinvalidationArray.push( _gl.COLOR_ATTACHMENT0 + i );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\tinvalidationArray.push( depthStyle );\n\n\t\t\t\t}\n\n\t\t\t\tconst ignoreDepthValues = ( renderTargetProperties.__ignoreDepthValues !== undefined ) ? renderTargetProperties.__ignoreDepthValues : false;\n\n\t\t\t\tif ( ignoreDepthValues === false ) {\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= _gl.DEPTH_BUFFER_BIT;\n\n\t\t\t\t\t// resolving stencil is slow with a D3D backend. disable it for all transmission render targets (see #27799)\n\n\t\t\t\t\tif ( renderTarget.stencilBuffer && renderTargetProperties.__isTransmissionRenderTarget !== true ) mask |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ignoreDepthValues === true ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, [ depthStyle ] );\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, [ depthStyle ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST );\n\n\t\t\t\tif ( supportsInvalidateFramebuffer ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, invalidationArray );\n\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, null );\n\n\t\t\t// If MRT since pre-blit we removed the FBO we need to reconstruct the attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn Math.min( capabilities.maxSamples, renderTarget.samples );\n\n\t}\n\n\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\treturn renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tfunction verifyColorSpace( texture, image ) {\n\n\t\tconst colorSpace = texture.colorSpace;\n\t\tconst format = texture.format;\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isCompressedTexture === true || texture.isVideoTexture === true ) return image;\n\n\t\tif ( colorSpace !== LinearSRGBColorSpace && colorSpace !== NoColorSpace ) {\n\n\t\t\t// sRGB\n\n\t\t\tif ( ColorManagement.getTransfer( colorSpace ) === SRGBTransfer ) {\n\n\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture color space:', colorSpace );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction getDimensions( image ) {\n\n\t\tif ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) {\n\n\t\t\t// if intrinsic data are not available, fallback to width/height\n\n\t\t\t_imageDimensions.width = image.naturalWidth || image.width;\n\t\t\t_imageDimensions.height = image.naturalHeight || image.height;\n\n\t\t} else if ( typeof VideoFrame !== 'undefined' && image instanceof VideoFrame ) {\n\n\t\t\t_imageDimensions.width = image.displayWidth;\n\t\t\t_imageDimensions.height = image.displayHeight;\n\n\t\t} else {\n\n\t\t\t_imageDimensions.width = image.width;\n\t\t\t_imageDimensions.height = image.height;\n\n\t\t}\n\n\t\treturn _imageDimensions;\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.rebindTextures = rebindTextures;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\tthis.useMultisampledRTT = useMultisampledRTT;\n\n}\n\nfunction WebGLUtils( gl, extensions ) {\n\n\tfunction convert( p, colorSpace = NoColorSpace ) {\n\n\t\tlet extension;\n\n\t\tconst transfer = ColorManagement.getTransfer( colorSpace );\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\t\tif ( p === UnsignedInt5999Type ) return gl.UNSIGNED_INT_5_9_9_9_REV;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\t\tif ( p === HalfFloatType ) return gl.HALF_FLOAT;\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBFormat ) return gl.RGB;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedFormat ) return gl.RED;\n\t\tif ( p === RedIntegerFormat ) return gl.RED_INTEGER;\n\t\tif ( p === RGFormat ) return gl.RG;\n\t\tif ( p === RGIntegerFormat ) return gl.RG_INTEGER;\n\t\tif ( p === RGBAIntegerFormat ) return gl.RGBA_INTEGER;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( transfer === SRGBTransfer ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC1\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC2\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format || p === RGB_BPTC_SIGNED_Format || p === RGB_BPTC_UNSIGNED_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\t\t\t\tif ( p === RGB_BPTC_SIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;\n\t\t\t\tif ( p === RGB_BPTC_UNSIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// RGTC\n\n\t\tif ( p === RED_RGTC1_Format || p === SIGNED_RED_RGTC1_Format || p === RED_GREEN_RGTC2_Format || p === SIGNED_RED_GREEN_RGTC2_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_rgtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return extension.COMPRESSED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === SIGNED_RED_RGTC1_Format ) return extension.COMPRESSED_SIGNED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_RED_GREEN_RGTC2_EXT;\n\t\t\t\tif ( p === SIGNED_RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) return gl.UNSIGNED_INT_24_8;\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayCamera = true;\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isGroup = true;\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tconnect( inputSource ) {\n\n\t\tif ( inputSource && inputSource.hand ) {\n\n\t\t\tconst hand = this._hand;\n\n\t\t\tif ( hand ) {\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Initialize hand with joints when connected\n\t\t\t\t\tthis._getHandJoint( hand, inputjoint );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\tconst joint = this._getHandJoint( hand, inputjoint );\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.matrixWorldNeedsUpdate = true;\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\t\t\t\t\t\tgrip.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t// Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\n\t\t\t\tif ( inputPose === null && gripPose !== null ) {\n\n\t\t\t\t\tinputPose = gripPose;\n\n\t\t\t\t}\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\t\t\t\t\ttargetRay.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// private method\n\n\t_getHandJoint( hand, inputjoint ) {\n\n\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\tconst joint = new Group();\n\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\tjoint.visible = false;\n\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\n\t\t\thand.add( joint );\n\n\t\t}\n\n\t\treturn hand.joints[ inputjoint.jointName ];\n\n\t}\n\n}\n\nconst _occlusion_vertex = `\nvoid main() {\n\n\tgl_Position = vec4( position, 1.0 );\n\n}`;\n\nconst _occlusion_fragment = `\nuniform sampler2DArray depthColor;\nuniform float depthWidth;\nuniform float depthHeight;\n\nvoid main() {\n\n\tvec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );\n\n\tif ( coord.x >= 1.0 ) {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;\n\n\t} else {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;\n\n\t}\n\n}`;\n\nclass WebXRDepthSensing {\n\n\tconstructor() {\n\n\t\tthis.texture = null;\n\t\tthis.mesh = null;\n\n\t\tthis.depthNear = 0;\n\t\tthis.depthFar = 0;\n\n\t}\n\n\tinit( renderer, depthData, renderState ) {\n\n\t\tif ( this.texture === null ) {\n\n\t\t\tconst texture = new Texture();\n\n\t\t\tconst texProps = renderer.properties.get( texture );\n\t\t\ttexProps.__webglTexture = depthData.texture;\n\n\t\t\tif ( ( depthData.depthNear != renderState.depthNear ) || ( depthData.depthFar != renderState.depthFar ) ) {\n\n\t\t\t\tthis.depthNear = depthData.depthNear;\n\t\t\t\tthis.depthFar = depthData.depthFar;\n\n\t\t\t}\n\n\t\t\tthis.texture = texture;\n\n\t\t}\n\n\t}\n\n\trender( renderer, cameraXR ) {\n\n\t\tif ( this.texture !== null ) {\n\n\t\t\tif ( this.mesh === null ) {\n\n\t\t\t\tconst viewport = cameraXR.cameras[ 0 ].viewport;\n\t\t\t\tconst material = new ShaderMaterial( {\n\t\t\t\t\tvertexShader: _occlusion_vertex,\n\t\t\t\t\tfragmentShader: _occlusion_fragment,\n\t\t\t\t\tuniforms: {\n\t\t\t\t\t\tdepthColor: { value: this.texture },\n\t\t\t\t\t\tdepthWidth: { value: viewport.z },\n\t\t\t\t\t\tdepthHeight: { value: viewport.w }\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\tthis.mesh = new Mesh( new PlaneGeometry( 20, 20 ), material );\n\n\t\t\t}\n\n\t\t\trenderer.render( this.mesh, cameraXR );\n\n\t\t}\n\n\t}\n\n\treset() {\n\n\t\tthis.texture = null;\n\t\tthis.mesh = null;\n\n\t}\n\n}\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\n\t\tlet session = null;\n\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\t\t// Set default foveation to maximum.\n\t\tlet foveation = 1.0;\n\t\tlet customReferenceSpace = null;\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet xrFrame = null;\n\n\t\tconst depthSensing = new WebXRDepthSensing();\n\t\tconst attributes = gl.getContextAttributes();\n\n\t\tlet initialRenderTarget = null;\n\t\tlet newRenderTarget = null;\n\n\t\tconst controllers = [];\n\t\tconst controllerInputSources = [];\n\n\t\tconst currentSize = new Vector2();\n\t\tlet currentPixelRatio = null;\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraXR = new ArrayCamera();\n\t\tcameraXR.layers.enable( 1 );\n\t\tcameraXR.layers.enable( 2 );\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controllerIndex = controllerInputSources.indexOf( event.inputSource );\n\n\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\tcontroller.update( event.inputSource, event.frame, customReferenceSpace || referenceSpace );\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tsession.removeEventListener( 'select', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'end', onSessionEnd );\n\t\t\tsession.removeEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\n\t\t\t\tif ( inputSource === null ) continue;\n\n\t\t\t\tcontrollerInputSources[ i ] = null;\n\n\t\t\t\tcontrollers[ i ].disconnect( inputSource );\n\n\t\t\t}\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\tdepthSensing.reset();\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\t\t\tnewRenderTarget = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\trenderer.setPixelRatio( currentPixelRatio );\n\t\t\trenderer.setSize( currentSize.width, currentSize.height, false );\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn customReferenceSpace || referenceSpace;\n\n\t\t};\n\n\t\tthis.setReferenceSpace = function ( space ) {\n\n\t\t\tcustomReferenceSpace = space;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\t\trenderer.getSize( currentSize );\n\n\t\t\t\tif ( session.renderState.layers === undefined ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: attributes.antialias,\n\t\t\t\t\t\talpha: true,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\trenderer.setPixelRatio( 1 );\n\t\t\t\t\trenderer.setSize( glBaseLayer.framebufferWidth, glBaseLayer.framebufferHeight, false );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\tlet depthType = null;\n\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? gl.DEPTH24_STENCIL8 : gl.DEPTH_COMPONENT24;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: gl.RGBA8,\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\trenderer.setPixelRatio( 1 );\n\t\t\t\t\trenderer.setSize( glProjLayer.textureWidth, glProjLayer.textureHeight, false );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tconst renderTargetProperties = renderer.properties.get( newRenderTarget );\n\t\t\t\t\trenderTargetProperties.__ignoreDepthValues = glProjLayer.ignoreDepthValues;\n\n\t\t\t\t}\n\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\tthis.setFoveation( foveation );\n\n\t\t\t\tcustomReferenceSpace = null;\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getEnvironmentBlendMode = function () {\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\treturn session.environmentBlendMode;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst index = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( index >= 0 ) {\n\n\t\t\t\t\tcontrollerInputSources[ index ] = null;\n\t\t\t\t\tcontrollers[ index ].disconnect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\n\t\t\t\tlet controllerIndex = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\t\t// Assign input source a controller that currently has no input source\n\n\t\t\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\t\tif ( i >= controllerInputSources.length ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources.push( inputSource );\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t} else if ( controllerInputSources[ i ] === null ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources[ i ] = inputSource;\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// If all controllers do currently receive input we ignore new ones\n\n\t\t\t\t\tif ( controllerIndex === - 1 ) break;\n\n\t\t\t\t}\n\n\t\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.connect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tconst near2 = near + zOffset;\n\t\t\tconst far2 = far + zOffset;\n\t\t\tconst left2 = left - xOffset;\n\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tif ( depthSensing.texture !== null ) {\n\n\t\t\t\tcamera.near = depthSensing.depthNear;\n\t\t\t\tcamera.far = depthSensing.depthFar;\n\n\t\t\t}\n\n\t\t\tcameraXR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraXR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraXR.near || _currentDepthFar !== cameraXR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraXR.near,\n\t\t\t\t\tdepthFar: cameraXR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraXR.near;\n\t\t\t\t_currentDepthFar = cameraXR.far;\n\n\t\t\t\tcameraL.near = _currentDepthNear;\n\t\t\t\tcameraL.far = _currentDepthFar;\n\t\t\t\tcameraR.near = _currentDepthNear;\n\t\t\t\tcameraR.far = _currentDepthFar;\n\n\t\t\t\tcameraL.updateProjectionMatrix();\n\t\t\t\tcameraR.updateProjectionMatrix();\n\t\t\t\tcamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraXR.cameras;\n\n\t\t\tupdateCamera( cameraXR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraXR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraXR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t\t// update user camera and its children\n\n\t\t\tupdateUserCamera( camera, cameraXR, parent );\n\n\t\t};\n\n\t\tfunction updateUserCamera( camera, cameraXR, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrix.copy( cameraXR.matrixWorld );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrix.copy( parent.matrixWorld );\n\t\t\t\tcamera.matrix.invert();\n\t\t\t\tcamera.matrix.multiply( cameraXR.matrixWorld );\n\n\t\t\t}\n\n\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.updateMatrixWorld( true );\n\n\t\t\tcamera.projectionMatrix.copy( cameraXR.projectionMatrix );\n\t\t\tcamera.projectionMatrixInverse.copy( cameraXR.projectionMatrixInverse );\n\n\t\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\t\tcamera.fov = RAD2DEG * 2 * Math.atan( 1 / camera.projectionMatrix.elements[ 5 ] );\n\t\t\t\tcamera.zoom = 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraXR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer === null && glBaseLayer === null ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn foveation;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( value ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tfoveation = value;\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.hasDepthSensing = function () {\n\n\t\t\treturn depthSensing.texture !== null;\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraXRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraXR's camera list\n\n\t\t\t\tif ( views.length !== cameraXR.cameras.length ) {\n\n\t\t\t\t\tcameraXR.cameras.length = 0;\n\t\t\t\t\tcameraXRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet camera = cameras[ i ];\n\n\t\t\t\t\tif ( camera === undefined ) {\n\n\t\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\t\tcamera.layers.enable( i );\n\t\t\t\t\t\tcamera.viewport = new Vector4();\n\t\t\t\t\t\tcameras[ i ] = camera;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraXR.matrix.copy( camera.matrix );\n\t\t\t\t\t\tcameraXR.matrix.decompose( cameraXR.position, cameraXR.quaternion, cameraXR.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraXRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraXR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tconst enabledFeatures = session.enabledFeatures;\n\n\t\t\t\tif ( enabledFeatures && enabledFeatures.includes( 'depth-sensing' ) ) {\n\n\t\t\t\t\tconst depthData = glBinding.getDepthInformation( views[ 0 ] );\n\n\t\t\t\t\tif ( depthData && depthData.isValid && depthData.texture ) {\n\n\t\t\t\t\t\tdepthSensing.init( renderer, depthData, session.renderState );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\t\t\t\tconst controller = controllers[ i ];\n\n\t\t\t\tif ( inputSource !== null && controller !== undefined ) {\n\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdepthSensing.render( renderer, cameraXR );\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\tif ( frame.detectedPlanes ) {\n\n\t\t\t\tscope.dispatchEvent( { type: 'planesdetected', data: frame } );\n\n\t\t\t}\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nconst _e1 = /*@__PURE__*/ new Euler();\nconst _m1 = /*@__PURE__*/ new Matrix4();\n\nfunction WebGLMaterials( renderer, properties ) {\n\n\tfunction refreshTransformUniform( map, uniform ) {\n\n\t\tif ( map.matrixAutoUpdate === true ) {\n\n\t\t\tmap.updateMatrix();\n\n\t\t}\n\n\t\tuniform.value.copy( map.matrix );\n\n\t}\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tfog.color.getRGB( uniforms.fogColor.value, getUnlitUniformColorSpace( renderer ) );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\n\t\t\trefreshTransformUniform( material.bumpMap, uniforms.bumpMapTransform );\n\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.bumpScale.value *= - 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\n\t\t\trefreshTransformUniform( material.normalMap, uniforms.normalMapTransform );\n\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.normalScale.value.negate();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\n\t\t\trefreshTransformUniform( material.displacementMap, uniforms.displacementMapTransform );\n\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\trefreshTransformUniform( material.emissiveMap, uniforms.emissiveMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t\trefreshTransformUniform( material.specularMap, uniforms.specularMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tconst envMap = materialProperties.envMap;\n\t\tconst envMapRotation = materialProperties.envMapRotation;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\t_e1.copy( envMapRotation );\n\n\t\t\t// accommodate left-handed frame\n\t\t\t_e1.x *= - 1; _e1.y *= - 1; _e1.z *= - 1;\n\n\t\t\tif ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) {\n\n\t\t\t\t// environment maps which are not cube render targets or PMREMs follow a different convention\n\t\t\t\t_e1.y *= - 1;\n\t\t\t\t_e1.z *= - 1;\n\n\t\t\t}\n\n\t\t\tuniforms.envMapRotation.value.setFromMatrix4( _m1.makeRotationFromEuler( _e1 ) );\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\n\t\t\t// artist-friendly light intensity scaling factor\n\t\t\tconst scaleFactor = ( renderer._useLegacyLights === true ) ? Math.PI : 1;\n\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity * scaleFactor;\n\n\t\t\trefreshTransformUniform( material.lightMap, uniforms.lightMapTransform );\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\trefreshTransformUniform( material.aoMap, uniforms.aoMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.uvTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\trefreshTransformUniform( material.metalnessMap, uniforms.metalnessMapTransform );\n\n\t\t}\n\n\t\tuniforms.roughness.value = material.roughness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\trefreshTransformUniform( material.roughnessMap, uniforms.roughnessMapTransform );\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenColorMap, uniforms.sheenColorMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenRoughnessMap, uniforms.sheenRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatMap, uniforms.clearcoatMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatRoughnessMap, uniforms.clearcoatRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatNormalMap, uniforms.clearcoatNormalMapTransform );\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.iridescence > 0 ) {\n\n\t\t\tuniforms.iridescence.value = material.iridescence;\n\t\t\tuniforms.iridescenceIOR.value = material.iridescenceIOR;\n\t\t\tuniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[ 0 ];\n\t\t\tuniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[ 1 ];\n\n\t\t\tif ( material.iridescenceMap ) {\n\n\t\t\t\tuniforms.iridescenceMap.value = material.iridescenceMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceMap, uniforms.iridescenceMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.iridescenceThicknessMap ) {\n\n\t\t\t\tuniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceThicknessMap, uniforms.iridescenceThicknessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t\trefreshTransformUniform( material.transmissionMap, uniforms.transmissionMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.thicknessMap, uniforms.thicknessMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tif ( material.anisotropy > 0 ) {\n\n\t\t\tuniforms.anisotropyVector.value.set( material.anisotropy * Math.cos( material.anisotropyRotation ), material.anisotropy * Math.sin( material.anisotropyRotation ) );\n\n\t\t\tif ( material.anisotropyMap ) {\n\n\t\t\t\tuniforms.anisotropyMap.value = material.anisotropyMap;\n\n\t\t\t\trefreshTransformUniform( material.anisotropyMap, uniforms.anisotropyMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t\trefreshTransformUniform( material.specularColorMap, uniforms.specularColorMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t\trefreshTransformUniform( material.specularIntensityMap, uniforms.specularIntensityMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tconst light = properties.get( material ).light;\n\n\t\tuniforms.referencePosition.value.setFromMatrixPosition( light.matrixWorld );\n\t\tuniforms.nearDistance.value = light.shadow.camera.near;\n\t\tuniforms.farDistance.value = light.shadow.camera.far;\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction WebGLUniformsGroups( gl, info, capabilities, state ) {\n\n\tlet buffers = {};\n\tlet updateList = {};\n\tlet allocatedBindingPoints = [];\n\n\tconst maxBindingPoints = gl.getParameter( gl.MAX_UNIFORM_BUFFER_BINDINGS ); // binding points are global whereas block indices are per shader program\n\n\tfunction bind( uniformsGroup, program ) {\n\n\t\tconst webglProgram = program.program;\n\t\tstate.uniformBlockBinding( uniformsGroup, webglProgram );\n\n\t}\n\n\tfunction update( uniformsGroup, program ) {\n\n\t\tlet buffer = buffers[ uniformsGroup.id ];\n\n\t\tif ( buffer === undefined ) {\n\n\t\t\tprepareUniformsGroup( uniformsGroup );\n\n\t\t\tbuffer = createBuffer( uniformsGroup );\n\t\t\tbuffers[ uniformsGroup.id ] = buffer;\n\n\t\t\tuniformsGroup.addEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\t}\n\n\t\t// ensure to update the binding points/block indices mapping for this program\n\n\t\tconst webglProgram = program.program;\n\t\tstate.updateUBOMapping( uniformsGroup, webglProgram );\n\n\t\t// update UBO once per frame\n\n\t\tconst frame = info.render.frame;\n\n\t\tif ( updateList[ uniformsGroup.id ] !== frame ) {\n\n\t\t\tupdateBufferData( uniformsGroup );\n\n\t\t\tupdateList[ uniformsGroup.id ] = frame;\n\n\t\t}\n\n\t}\n\n\tfunction createBuffer( uniformsGroup ) {\n\n\t\t// the setup of an UBO is independent of a particular shader program but global\n\n\t\tconst bindingPointIndex = allocateBindingPointIndex();\n\t\tuniformsGroup.__bindingPointIndex = bindingPointIndex;\n\n\t\tconst buffer = gl.createBuffer();\n\t\tconst size = uniformsGroup.__size;\n\t\tconst usage = uniformsGroup.usage;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\t\tgl.bufferData( gl.UNIFORM_BUFFER, size, usage );\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\t\tgl.bindBufferBase( gl.UNIFORM_BUFFER, bindingPointIndex, buffer );\n\n\t\treturn buffer;\n\n\t}\n\n\tfunction allocateBindingPointIndex() {\n\n\t\tfor ( let i = 0; i < maxBindingPoints; i ++ ) {\n\n\t\t\tif ( allocatedBindingPoints.indexOf( i ) === - 1 ) {\n\n\t\t\t\tallocatedBindingPoints.push( i );\n\t\t\t\treturn i;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconsole.error( 'THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.' );\n\n\t\treturn 0;\n\n\t}\n\n\tfunction updateBufferData( uniformsGroup ) {\n\n\t\tconst buffer = buffers[ uniformsGroup.id ];\n\t\tconst uniforms = uniformsGroup.uniforms;\n\t\tconst cache = uniformsGroup.__cache;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\n\t\tfor ( let i = 0, il = uniforms.length; i < il; i ++ ) {\n\n\t\t\tconst uniformArray = Array.isArray( uniforms[ i ] ) ? uniforms[ i ] : [ uniforms[ i ] ];\n\n\t\t\tfor ( let j = 0, jl = uniformArray.length; j < jl; j ++ ) {\n\n\t\t\t\tconst uniform = uniformArray[ j ];\n\n\t\t\t\tif ( hasUniformChanged( uniform, i, j, cache ) === true ) {\n\n\t\t\t\t\tconst offset = uniform.__offset;\n\n\t\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\t\tlet arrayOffset = 0;\n\n\t\t\t\t\tfor ( let k = 0; k < values.length; k ++ ) {\n\n\t\t\t\t\t\tconst value = values[ k ];\n\n\t\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\t\t// TODO add integer and struct support\n\t\t\t\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\t\t\t\tuniform.__data[ 0 ] = value;\n\t\t\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset + arrayOffset, uniform.__data );\n\n\t\t\t\t\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t\t\t\t\t// manually converting 3x3 to 3x4\n\n\t\t\t\t\t\t\tuniform.__data[ 0 ] = value.elements[ 0 ];\n\t\t\t\t\t\t\tuniform.__data[ 1 ] = value.elements[ 1 ];\n\t\t\t\t\t\t\tuniform.__data[ 2 ] = value.elements[ 2 ];\n\t\t\t\t\t\t\tuniform.__data[ 3 ] = 0;\n\t\t\t\t\t\t\tuniform.__data[ 4 ] = value.elements[ 3 ];\n\t\t\t\t\t\t\tuniform.__data[ 5 ] = value.elements[ 4 ];\n\t\t\t\t\t\t\tuniform.__data[ 6 ] = value.elements[ 5 ];\n\t\t\t\t\t\t\tuniform.__data[ 7 ] = 0;\n\t\t\t\t\t\t\tuniform.__data[ 8 ] = value.elements[ 6 ];\n\t\t\t\t\t\t\tuniform.__data[ 9 ] = value.elements[ 7 ];\n\t\t\t\t\t\t\tuniform.__data[ 10 ] = value.elements[ 8 ];\n\t\t\t\t\t\t\tuniform.__data[ 11 ] = 0;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvalue.toArray( uniform.__data, arrayOffset );\n\n\t\t\t\t\t\t\tarrayOffset += info.storage / Float32Array.BYTES_PER_ELEMENT;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset, uniform.__data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\n\t}\n\n\tfunction hasUniformChanged( uniform, index, indexArray, cache ) {\n\n\t\tconst value = uniform.value;\n\t\tconst indexString = index + '_' + indexArray;\n\n\t\tif ( cache[ indexString ] === undefined ) {\n\n\t\t\t// cache entry does not exist so far\n\n\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\tcache[ indexString ] = value;\n\n\t\t\t} else {\n\n\t\t\t\tcache[ indexString ] = value.clone();\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\tconst cachedObject = cache[ indexString ];\n\n\t\t\t// compare current value with cached entry\n\n\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\tif ( cachedObject !== value ) {\n\n\t\t\t\t\tcache[ indexString ] = value;\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( cachedObject.equals( value ) === false ) {\n\n\t\t\t\t\tcachedObject.copy( value );\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction prepareUniformsGroup( uniformsGroup ) {\n\n\t\t// determine total buffer size according to the STD140 layout\n\t\t// Hint: STD140 is the only supported layout in WebGL 2\n\n\t\tconst uniforms = uniformsGroup.uniforms;\n\n\t\tlet offset = 0; // global buffer offset in bytes\n\t\tconst chunkSize = 16; // size of a chunk in bytes\n\n\t\tfor ( let i = 0, l = uniforms.length; i < l; i ++ ) {\n\n\t\t\tconst uniformArray = Array.isArray( uniforms[ i ] ) ? uniforms[ i ] : [ uniforms[ i ] ];\n\n\t\t\tfor ( let j = 0, jl = uniformArray.length; j < jl; j ++ ) {\n\n\t\t\t\tconst uniform = uniformArray[ j ];\n\n\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\tfor ( let k = 0, kl = values.length; k < kl; k ++ ) {\n\n\t\t\t\t\tconst value = values[ k ];\n\n\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\t// Calculate the chunk offset\n\t\t\t\t\tconst chunkOffsetUniform = offset % chunkSize;\n\n\t\t\t\t\t// Check for chunk overflow\n\t\t\t\t\tif ( chunkOffsetUniform !== 0 && ( chunkSize - chunkOffsetUniform ) < info.boundary ) {\n\n\t\t\t\t\t\t// Add padding and adjust offset\n\t\t\t\t\t\toffset += ( chunkSize - chunkOffsetUniform );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following two properties will be used for partial buffer updates\n\n\t\t\t\t\tuniform.__data = new Float32Array( info.storage / Float32Array.BYTES_PER_ELEMENT );\n\t\t\t\t\tuniform.__offset = offset;\n\n\n\t\t\t\t\t// Update the global offset\n\t\t\t\t\toffset += info.storage;\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ensure correct final padding\n\n\t\tconst chunkOffset = offset % chunkSize;\n\n\t\tif ( chunkOffset > 0 ) offset += ( chunkSize - chunkOffset );\n\n\t\t//\n\n\t\tuniformsGroup.__size = offset;\n\t\tuniformsGroup.__cache = {};\n\n\t\treturn this;\n\n\t}\n\n\tfunction getUniformSize( value ) {\n\n\t\tconst info = {\n\t\t\tboundary: 0, // bytes\n\t\t\tstorage: 0 // bytes\n\t\t};\n\n\t\t// determine sizes according to STD140\n\n\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t// float/int/bool\n\n\t\t\tinfo.boundary = 4;\n\t\t\tinfo.storage = 4;\n\n\t\t} else if ( value.isVector2 ) {\n\n\t\t\t// vec2\n\n\t\t\tinfo.boundary = 8;\n\t\t\tinfo.storage = 8;\n\n\t\t} else if ( value.isVector3 || value.isColor ) {\n\n\t\t\t// vec3\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 12; // evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes\n\n\t\t} else if ( value.isVector4 ) {\n\n\t\t\t// vec4\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 16;\n\n\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t// mat3 (in STD140 a 3x3 matrix is represented as 3x4)\n\n\t\t\tinfo.boundary = 48;\n\t\t\tinfo.storage = 48;\n\n\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\t// mat4\n\n\t\t\tinfo.boundary = 64;\n\t\t\tinfo.storage = 64;\n\n\t\t} else if ( value.isTexture ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.' );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unsupported uniform value type.', value );\n\n\t\t}\n\n\t\treturn info;\n\n\t}\n\n\tfunction onUniformsGroupsDispose( event ) {\n\n\t\tconst uniformsGroup = event.target;\n\n\t\tuniformsGroup.removeEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\tconst index = allocatedBindingPoints.indexOf( uniformsGroup.__bindingPointIndex );\n\t\tallocatedBindingPoints.splice( index, 1 );\n\n\t\tgl.deleteBuffer( buffers[ uniformsGroup.id ] );\n\n\t\tdelete buffers[ uniformsGroup.id ];\n\t\tdelete updateList[ uniformsGroup.id ];\n\n\t}\n\n\tfunction dispose() {\n\n\t\tfor ( const id in buffers ) {\n\n\t\t\tgl.deleteBuffer( buffers[ id ] );\n\n\t\t}\n\n\t\tallocatedBindingPoints = [];\n\t\tbuffers = {};\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tbind: bind,\n\t\tupdate: update,\n\n\t\tdispose: dispose\n\n\t};\n\n}\n\nclass WebGLRenderer {\n\n\tconstructor( parameters = {} ) {\n\n\t\tconst {\n\t\t\tcanvas = createCanvasElement(),\n\t\t\tcontext = null,\n\t\t\tdepth = true,\n\t\t\tstencil = false,\n\t\t\talpha = false,\n\t\t\tantialias = false,\n\t\t\tpremultipliedAlpha = true,\n\t\t\tpreserveDrawingBuffer = false,\n\t\t\tpowerPreference = 'default',\n\t\t\tfailIfMajorPerformanceCaveat = false,\n\t\t} = parameters;\n\n\t\tthis.isWebGLRenderer = true;\n\n\t\tlet _alpha;\n\n\t\tif ( context !== null ) {\n\n\t\t\tif ( typeof WebGLRenderingContext !== 'undefined' && context instanceof WebGLRenderingContext ) {\n\n\t\t\t\tthrow new Error( 'THREE.WebGLRenderer: WebGL 1 is not supported since r163.' );\n\n\t\t\t}\n\n\t\t\t_alpha = context.getContextAttributes().alpha;\n\n\t\t} else {\n\n\t\t\t_alpha = alpha;\n\n\t\t}\n\n\t\tconst uintClearColor = new Uint32Array( 4 );\n\t\tconst intClearColor = new Int32Array( 4 );\n\n\t\tlet currentRenderList = null;\n\t\tlet currentRenderState = null;\n\n\t\t// render() can be called from within a callback triggered by another render.\n\t\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\t\tconst renderListStack = [];\n\t\tconst renderStateStack = [];\n\n\t\t// public properties\n\n\t\tthis.domElement = canvas;\n\n\t\t// Debug configuration container\n\t\tthis.debug = {\n\n\t\t\t/**\n\t\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t\t * @type {boolean}\n\t\t\t */\n\t\t\tcheckShaderErrors: true,\n\t\t\t/**\n\t\t\t * Callback for custom error reporting.\n\t\t\t * @type {?Function}\n\t\t\t */\n\t\t\tonShaderError: null\n\t\t};\n\n\t\t// clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true;\n\n\t\t// scene graph\n\n\t\tthis.sortObjects = true;\n\n\t\t// user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false;\n\n\t\t// physically based shading\n\n\t\tthis._outputColorSpace = SRGBColorSpace;\n\n\t\t// physical lights\n\n\t\tthis._useLegacyLights = false;\n\n\t\t// tone mapping\n\n\t\tthis.toneMapping = NoToneMapping;\n\t\tthis.toneMappingExposure = 1.0;\n\n\t\t// internal properties\n\n\t\tconst _this = this;\n\n\t\tlet _isContextLost = false;\n\n\t\t// internal state cache\n\n\t\tlet _currentActiveCubeFace = 0;\n\t\tlet _currentActiveMipmapLevel = 0;\n\t\tlet _currentRenderTarget = null;\n\t\tlet _currentMaterialId = - 1;\n\n\t\tlet _currentCamera = null;\n\n\t\tconst _currentViewport = new Vector4();\n\t\tconst _currentScissor = new Vector4();\n\t\tlet _currentScissorTest = null;\n\n\t\tconst _currentClearColor = new Color( 0x000000 );\n\t\tlet _currentClearAlpha = 0;\n\n\t\t//\n\n\t\tlet _width = canvas.width;\n\t\tlet _height = canvas.height;\n\n\t\tlet _pixelRatio = 1;\n\t\tlet _opaqueSort = null;\n\t\tlet _transparentSort = null;\n\n\t\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\t\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\t\tlet _scissorTest = false;\n\n\t\t// frustum\n\n\t\tconst _frustum = new Frustum();\n\n\t\t// clipping\n\n\t\tlet _clippingEnabled = false;\n\t\tlet _localClippingEnabled = false;\n\n\t\t// camera matrices cache\n\n\t\tconst _projScreenMatrix = new Matrix4();\n\n\t\tconst _vector2 = new Vector2();\n\t\tconst _vector3 = new Vector3();\n\n\t\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\t\tfunction getTargetPixelRatio() {\n\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t}\n\n\t\t// initialize\n\n\t\tlet _gl = context;\n\n\t\tfunction getContext( contextName, contextAttributes ) {\n\n\t\t\tconst context = canvas.getContext( contextName, contextAttributes );\n\t\t\tif ( context !== null ) return context;\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttry {\n\n\t\t\tconst contextAttributes = {\n\t\t\t\talpha: true,\n\t\t\t\tdepth,\n\t\t\t\tstencil,\n\t\t\t\tantialias,\n\t\t\t\tpremultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer,\n\t\t\t\tpowerPreference,\n\t\t\t\tfailIfMajorPerformanceCaveat,\n\t\t\t};\n\n\t\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\t\tif ( 'setAttribute' in canvas ) canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t\tcanvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.addEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tconst contextName = 'webgl2';\n\n\t\t\t\t_gl = getContext( contextName, contextAttributes );\n\n\t\t\t\tif ( _gl === null ) {\n\n\t\t\t\t\tif ( getContext( contextName ) ) {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\t\tthrow error;\n\n\t\t}\n\n\t\tlet extensions, capabilities, state, info;\n\t\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\t\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\t\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\t\tlet utils, bindingStates, uniformsGroups;\n\n\t\tfunction initGLContext() {\n\n\t\t\textensions = new WebGLExtensions( _gl );\n\t\t\textensions.init();\n\n\t\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\t\tutils = new WebGLUtils( _gl, extensions );\n\n\t\t\tstate = new WebGLState( _gl );\n\n\t\t\tinfo = new WebGLInfo( _gl );\n\t\t\tproperties = new WebGLProperties();\n\t\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\t\tattributes = new WebGLAttributes( _gl );\n\t\t\tbindingStates = new WebGLBindingStates( _gl, attributes );\n\t\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\t\tclipping = new WebGLClipping( properties );\n\t\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\t\tmaterials = new WebGLMaterials( _this, properties );\n\t\t\trenderLists = new WebGLRenderLists();\n\t\t\trenderStates = new WebGLRenderStates( extensions );\n\t\t\tbackground = new WebGLBackground( _this, cubemaps, cubeuvmaps, state, objects, _alpha, premultipliedAlpha );\n\t\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\t\t\tuniformsGroups = new WebGLUniformsGroups( _gl, info, capabilities, state );\n\n\t\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info );\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info );\n\n\t\t\tinfo.programs = programCache.programs;\n\n\t\t\t_this.capabilities = capabilities;\n\t\t\t_this.extensions = extensions;\n\t\t\t_this.properties = properties;\n\t\t\t_this.renderLists = renderLists;\n\t\t\t_this.shadowMap = shadowMap;\n\t\t\t_this.state = state;\n\t\t\t_this.info = info;\n\n\t\t}\n\n\t\tinitGLContext();\n\n\t\t// xr\n\n\t\tconst xr = new WebXRManager( _this, _gl );\n\n\t\tthis.xr = xr;\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _gl;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _gl.getContextAttributes();\n\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.loseContext();\n\n\t\t};\n\n\t\tthis.forceContextRestore = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.restoreContext();\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value === undefined ) return;\n\n\t\t\t_pixelRatio = value;\n\n\t\t\tthis.setSize( _width, _height, false );\n\n\t\t};\n\n\t\tthis.getSize = function ( target ) {\n\n\t\t\treturn target.set( _width, _height );\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle = true ) {\n\n\t\t\tif ( xr.isPresenting ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\tcanvas.width = Math.floor( width * _pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * _pixelRatio );\n\n\t\t\tif ( updateStyle === true ) {\n\n\t\t\t\tcanvas.style.width = width + 'px';\n\t\t\t\tcanvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_pixelRatio = pixelRatio;\n\n\t\t\tcanvas.width = Math.floor( width * pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * pixelRatio );\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getCurrentViewport = function ( target ) {\n\n\t\t\treturn target.copy( _currentViewport );\n\n\t\t};\n\n\t\tthis.getViewport = function ( target ) {\n\n\t\t\treturn target.copy( _viewport );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_viewport.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).round() );\n\n\t\t};\n\n\t\tthis.getScissor = function ( target ) {\n\n\t\t\treturn target.copy( _scissor );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_scissor.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).round() );\n\n\t\t};\n\n\t\tthis.getScissorTest = function () {\n\n\t\t\treturn _scissorTest;\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t};\n\n\t\tthis.setOpaqueSort = function ( method ) {\n\n\t\t\t_opaqueSort = method;\n\n\t\t};\n\n\t\tthis.setTransparentSort = function ( method ) {\n\n\t\t\t_transparentSort = method;\n\n\t\t};\n\n\t\t// Clearing\n\n\t\tthis.getClearColor = function ( target ) {\n\n\t\t\treturn target.copy( background.getClearColor() );\n\n\t\t};\n\n\t\tthis.setClearColor = function () {\n\n\t\t\tbackground.setClearColor.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\n\t\t\treturn background.getClearAlpha();\n\n\t\t};\n\n\t\tthis.setClearAlpha = function () {\n\n\t\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\t\tlet bits = 0;\n\n\t\t\tif ( color ) {\n\n\t\t\t\t// check if we're trying to clear an integer target\n\t\t\t\tlet isIntegerFormat = false;\n\t\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t\tconst targetFormat = _currentRenderTarget.texture.format;\n\t\t\t\t\tisIntegerFormat = targetFormat === RGBAIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RGIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RedIntegerFormat;\n\n\t\t\t\t}\n\n\t\t\t\t// use the appropriate clear functions to clear the target if it's a signed\n\t\t\t\t// or unsigned integer target\n\t\t\t\tif ( isIntegerFormat ) {\n\n\t\t\t\t\tconst targetType = _currentRenderTarget.texture.type;\n\t\t\t\t\tconst isUnsignedType = targetType === UnsignedByteType ||\n\t\t\t\t\t\ttargetType === UnsignedIntType ||\n\t\t\t\t\t\ttargetType === UnsignedShortType ||\n\t\t\t\t\t\ttargetType === UnsignedInt248Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort4444Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort5551Type;\n\n\t\t\t\t\tconst clearColor = background.getClearColor();\n\t\t\t\t\tconst a = background.getClearAlpha();\n\t\t\t\t\tconst r = clearColor.r;\n\t\t\t\t\tconst g = clearColor.g;\n\t\t\t\t\tconst b = clearColor.b;\n\n\t\t\t\t\tif ( isUnsignedType ) {\n\n\t\t\t\t\t\tuintClearColor[ 0 ] = r;\n\t\t\t\t\t\tuintClearColor[ 1 ] = g;\n\t\t\t\t\t\tuintClearColor[ 2 ] = b;\n\t\t\t\t\t\tuintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferuiv( _gl.COLOR, 0, uintClearColor );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tintClearColor[ 0 ] = r;\n\t\t\t\t\t\tintClearColor[ 1 ] = g;\n\t\t\t\t\t\tintClearColor[ 2 ] = b;\n\t\t\t\t\t\tintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferiv( _gl.COLOR, 0, intClearColor );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbits |= _gl.COLOR_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\t\tif ( stencil ) {\n\n\t\t\t\tbits |= _gl.STENCIL_BUFFER_BIT;\n\t\t\t\tthis.state.buffers.stencil.setMask( 0xffffffff );\n\n\t\t\t}\n\n\t\t\t_gl.clear( bits );\n\n\t\t};\n\n\t\tthis.clearColor = function () {\n\n\t\t\tthis.clear( true, false, false );\n\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\n\t\t\tthis.clear( false, true, false );\n\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\n\t\t\tthis.clear( false, false, true );\n\n\t\t};\n\n\t\t//\n\n\t\tthis.dispose = function () {\n\n\t\t\tcanvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\trenderLists.dispose();\n\t\t\trenderStates.dispose();\n\t\t\tproperties.dispose();\n\t\t\tcubemaps.dispose();\n\t\t\tcubeuvmaps.dispose();\n\t\t\tobjects.dispose();\n\t\t\tbindingStates.dispose();\n\t\t\tuniformsGroups.dispose();\n\t\t\tprogramCache.dispose();\n\n\t\t\txr.dispose();\n\n\t\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t\tanimation.stop();\n\n\t\t};\n\n\t\t// Events\n\n\t\tfunction onContextLost( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t\t_isContextLost = true;\n\n\t\t}\n\n\t\tfunction onContextRestore( /* event */ ) {\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t\t_isContextLost = false;\n\n\t\t\tconst infoAutoReset = info.autoReset;\n\t\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\t\tconst shadowMapType = shadowMap.type;\n\n\t\t\tinitGLContext();\n\n\t\t\tinfo.autoReset = infoAutoReset;\n\t\t\tshadowMap.enabled = shadowMapEnabled;\n\t\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\t\tshadowMap.type = shadowMapType;\n\n\t\t}\n\n\t\tfunction onContextCreationError( event ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage );\n\n\t\t}\n\n\t\tfunction onMaterialDispose( event ) {\n\n\t\t\tconst material = event.target;\n\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tdeallocateMaterial( material );\n\n\t\t}\n\n\t\t// Buffer deallocation\n\n\t\tfunction deallocateMaterial( material ) {\n\n\t\t\treleaseMaterialProgramReferences( material );\n\n\t\t\tproperties.remove( material );\n\n\t\t}\n\n\n\t\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\t\tconst programs = properties.get( material ).programs;\n\n\t\t\tif ( programs !== undefined ) {\n\n\t\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Buffer rendering\n\n\t\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t\t//\n\n\t\t\tlet index = geometry.index;\n\t\t\tlet rangeFactor = 1;\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\n\t\t\t\tif ( index === undefined ) return;\n\n\t\t\t\trangeFactor = 2;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst drawRange = geometry.drawRange;\n\t\t\tconst position = geometry.attributes.position;\n\n\t\t\tlet drawStart = drawRange.start * rangeFactor;\n\t\t\tlet drawEnd = ( drawRange.start + drawRange.count ) * rangeFactor;\n\n\t\t\tif ( group !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, group.start * rangeFactor );\n\t\t\t\tdrawEnd = Math.min( drawEnd, ( group.start + group.count ) * rangeFactor );\n\n\t\t\t}\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, index.count );\n\n\t\t\t} else if ( position !== undefined && position !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, position.count );\n\n\t\t\t}\n\n\t\t\tconst drawCount = drawEnd - drawStart;\n\n\t\t\tif ( drawCount < 0 || drawCount === Infinity ) return;\n\n\t\t\t//\n\n\t\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\t\tlet attribute;\n\t\t\tlet renderer = bufferRenderer;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattribute = attributes.get( index );\n\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex( attribute );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isLine ) {\n\n\t\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isPoints ) {\n\n\t\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t}\n\n\t\t\tif ( object.isBatchedMesh ) {\n\n\t\t\t\trenderer.renderMultiDraw( object._multiDrawStarts, object._multiDrawCounts, object._multiDrawCount );\n\n\t\t\t} else if ( object.isInstancedMesh ) {\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tconst maxInstanceCount = geometry._maxInstanceCount !== undefined ? geometry._maxInstanceCount : Infinity;\n\t\t\t\tconst instanceCount = Math.min( geometry.instanceCount, maxInstanceCount );\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Compile\n\n\t\tfunction prepareMaterial( material, scene, object ) {\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.compile = function ( scene, camera, targetScene = null ) {\n\n\t\t\tif ( targetScene === null ) targetScene = scene;\n\n\t\t\tcurrentRenderState = renderStates.get( targetScene );\n\t\t\tcurrentRenderState.init();\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t// gather lights from both the target scene and the new object that will be added to the scene.\n\n\t\t\ttargetScene.traverseVisible( function ( object ) {\n\n\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( scene !== targetScene ) {\n\n\t\t\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tcurrentRenderState.setupLights( _this._useLegacyLights );\n\n\t\t\t// Only initialize materials in the new scene, not the targetScene.\n\n\t\t\tconst materials = new Set();\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( material ) {\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\t\tprepareMaterial( material2, targetScene, object );\n\t\t\t\t\t\t\tmaterials.add( material2 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tprepareMaterial( material, targetScene, object );\n\t\t\t\t\t\tmaterials.add( material );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\trenderStateStack.pop();\n\t\t\tcurrentRenderState = null;\n\n\t\t\treturn materials;\n\n\t\t};\n\n\t\t// compileAsync\n\n\t\tthis.compileAsync = function ( scene, camera, targetScene = null ) {\n\n\t\t\tconst materials = this.compile( scene, camera, targetScene );\n\n\t\t\t// Wait for all the materials in the new object to indicate that they're\n\t\t\t// ready to be used before resolving the promise.\n\n\t\t\treturn new Promise( ( resolve ) => {\n\n\t\t\t\tfunction checkMaterialsReady() {\n\n\t\t\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\t\t\tconst materialProperties = properties.get( material );\n\t\t\t\t\t\tconst program = materialProperties.currentProgram;\n\n\t\t\t\t\t\tif ( program.isReady() ) {\n\n\t\t\t\t\t\t\t// remove any programs that report they're ready to use from the list\n\t\t\t\t\t\t\tmaterials.delete( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\t// once the list of compiling materials is empty, call the callback\n\n\t\t\t\t\tif ( materials.size === 0 ) {\n\n\t\t\t\t\t\tresolve( scene );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if some materials are still not ready, wait a bit and check again\n\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( extensions.get( 'KHR_parallel_shader_compile' ) !== null ) {\n\n\t\t\t\t\t// If we can check the compilation status of the materials without\n\t\t\t\t\t// blocking then do so right away.\n\n\t\t\t\t\tcheckMaterialsReady();\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise start by waiting a bit to give the materials we just\n\t\t\t\t\t// initialized a chance to finish.\n\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time ) {\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t\t}\n\n\t\tfunction onXRSessionStart() {\n\n\t\t\tanimation.stop();\n\n\t\t}\n\n\t\tfunction onXRSessionEnd() {\n\n\t\t\tanimation.start();\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tif ( typeof self !== 'undefined' ) animation.setContext( self );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\t\t\txr.setAnimationLoop( callback );\n\n\t\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t\t};\n\n\t\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t// Rendering\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( _isContextLost === true ) return;\n\n\t\t\t// update scene graph\n\n\t\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t\t}\n\n\t\t\t//\n\t\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\t\tcurrentRenderState.init();\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled );\n\n\t\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\t\tcurrentRenderList.init();\n\n\t\t\trenderListStack.push( currentRenderList );\n\n\t\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\t\tcurrentRenderList.finish();\n\n\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tthis.info.render.frame ++;\n\n\t\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t\t//\n\n\t\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\n\t\t\t//\n\n\t\t\tif ( xr.enabled === false || xr.isPresenting === false || xr.hasDepthSensing() === false ) {\n\n\t\t\t\tbackground.render( currentRenderList, scene );\n\n\t\t\t}\n\n\t\t\t// render scene\n\n\t\t\tcurrentRenderState.setupLights( _this._useLegacyLights );\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t\t// _gl.finish();\n\n\t\t\tbindingStates.resetDefaultState();\n\t\t\t_currentMaterialId = - 1;\n\t\t\t_currentCamera = null;\n\n\t\t\trenderStateStack.pop();\n\n\t\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderState = null;\n\n\t\t\t}\n\n\t\t\trenderListStack.pop();\n\n\t\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderList = null;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tconst visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible ) {\n\n\t\t\t\tif ( object.isGroup ) {\n\n\t\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\t\t\t\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector3.copy( object.boundingSphere.center );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector3.copy( geometry.boundingSphere.center );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_vector3\n\t\t\t\t\t\t\t\t.applyMatrix4( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\n\n\t\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera );\n\n\t\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\tstate.setPolygonOffset( false );\n\n\t\t}\n\n\t\tfunction renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tif ( overrideMaterial !== null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( currentRenderState.state.transmissionRenderTarget === null ) {\n\n\t\t\t\tcurrentRenderState.state.transmissionRenderTarget = new WebGLRenderTarget( 1, 1, {\n\t\t\t\t\tgenerateMipmaps: true,\n\t\t\t\t\ttype: ( extensions.has( 'EXT_color_buffer_half_float' ) || extensions.has( 'EXT_color_buffer_float' ) ) ? HalfFloatType : UnsignedByteType,\n\t\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\t\tsamples: 4,\n\t\t\t\t\tstencilBuffer: stencil\n\t\t\t\t} );\n\n\t\t\t\tconst renderTargetProperties = properties.get( currentRenderState.state.transmissionRenderTarget );\n\t\t\t\trenderTargetProperties.__isTransmissionRenderTarget = true;\n\n\t\t\t\t// debug\n\n\t\t\t\t/*\n\t\t\t\tconst geometry = new PlaneGeometry();\n\t\t\t\tconst material = new MeshBasicMaterial( { map: _transmissionRenderTarget.texture } );\n\n\t\t\t\tconst mesh = new Mesh( geometry, material );\n\t\t\t\tscene.add( mesh );\n\t\t\t\t*/\n\n\t\t\t}\n\n\t\t\tconst transmissionRenderTarget = currentRenderState.state.transmissionRenderTarget;\n\n\t\t\t_this.getDrawingBufferSize( _vector2 );\n\t\t\ttransmissionRenderTarget.setSize( _vector2.x, _vector2.y );\n\n\t\t\t//\n\n\t\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t\t_this.setRenderTarget( transmissionRenderTarget );\n\n\t\t\t_this.getClearColor( _currentClearColor );\n\t\t\t_currentClearAlpha = _this.getClearAlpha();\n\t\t\tif ( _currentClearAlpha < 1 ) _this.setClearColor( 0xffffff, 0.5 );\n\n\t\t\t_this.clear();\n\n\t\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\t\tconst currentToneMapping = _this.toneMapping;\n\t\t\t_this.toneMapping = NoToneMapping;\n\n\t\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t\ttextures.updateMultisampleRenderTarget( transmissionRenderTarget );\n\t\t\ttextures.updateRenderTargetMipmap( transmissionRenderTarget );\n\n\t\t\tlet renderTargetNeedsUpdate = false;\n\n\t\t\tfor ( let i = 0, l = transmissiveObjects.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = transmissiveObjects[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = renderItem.material;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( material.side === DoubleSide && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tconst currentSide = material.side;\n\n\t\t\t\t\tmaterial.side = BackSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t\tmaterial.side = currentSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\trenderTargetNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetNeedsUpdate === true ) {\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( transmissionRenderTarget );\n\t\t\t\ttextures.updateRenderTargetMipmap( transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t\t\t_this.setClearColor( _currentClearColor, _currentClearAlpha );\n\n\t\t\t_this.toneMapping = currentToneMapping;\n\n\t\t}\n\n\t\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t}\n\n\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t\t}\n\n\t\tfunction getProgram( material, scene, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tconst lights = currentRenderState.state.lights;\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tconst lightsStateVersion = lights.state.version;\n\n\t\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\t\tlet programs = materialProperties.programs;\n\n\t\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tmaterialProperties.fog = scene.fog;\n\t\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\t\t\tmaterialProperties.envMapRotation = ( materialProperties.environment !== null && material.envMap === null ) ? scene.environmentRotation : material.envMapRotation;\n\n\t\t\tif ( programs === undefined ) {\n\n\t\t\t\t// new material\n\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\tprograms = new Map();\n\t\t\t\tmaterialProperties.programs = programs;\n\n\t\t\t}\n\n\t\t\tlet program = programs.get( programCacheKey );\n\n\t\t\tif ( program !== undefined ) {\n\n\t\t\t\t// early out if program and light state is identical\n\n\t\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\t\treturn program;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\t\tmaterial.onBuild( object, parameters, _this );\n\n\t\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t\t}\n\n\t\t\tconst uniforms = materialProperties.uniforms;\n\n\t\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t\t}\n\n\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t// store the light setup it was created for\n\n\t\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\tuniforms.spotLightMatrix.value = lights.state.spotLightMatrix;\n\t\t\t\tuniforms.spotLightMap.value = lights.state.spotLightMap;\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t\t}\n\n\t\t\tmaterialProperties.currentProgram = program;\n\t\t\tmaterialProperties.uniformsList = null;\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\tfunction getUniformList( materialProperties ) {\n\n\t\t\tif ( materialProperties.uniformsList === null ) {\n\n\t\t\t\tconst progUniforms = materialProperties.currentProgram.getUniforms();\n\t\t\t\tmaterialProperties.uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, materialProperties.uniforms );\n\n\t\t\t}\n\n\t\t\treturn materialProperties.uniformsList;\n\n\t\t}\n\n\t\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tmaterialProperties.outputColorSpace = parameters.outputColorSpace;\n\t\t\tmaterialProperties.batching = parameters.batching;\n\t\t\tmaterialProperties.instancing = parameters.instancing;\n\t\t\tmaterialProperties.instancingColor = parameters.instancingColor;\n\t\t\tmaterialProperties.instancingMorph = parameters.instancingMorph;\n\t\t\tmaterialProperties.skinning = parameters.skinning;\n\t\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t\t}\n\n\t\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\ttextures.resetTextureUnits();\n\n\t\t\tconst fog = scene.fog;\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tconst colorSpace = ( _currentRenderTarget === null ) ? _this.outputColorSpace : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace );\n\t\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\t\tconst vertexTangents = !! geometry.attributes.tangent && ( !! material.normalMap || material.anisotropy > 0 );\n\t\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\t\tconst morphColors = !! geometry.morphAttributes.color;\n\n\t\t\tlet toneMapping = NoToneMapping;\n\n\t\t\tif ( material.toneMapped ) {\n\n\t\t\t\tif ( _currentRenderTarget === null || _currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\t\ttoneMapping = _this.toneMapping;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tconst materialProperties = properties.get( material );\n\t\t\tconst lights = currentRenderState.state.lights;\n\n\t\t\tif ( _clippingEnabled === true ) {\n\n\t\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\t\tconst useCache =\n\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet needsProgramChange = false;\n\n\t\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.outputColorSpace !== colorSpace ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batching === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isBatchedMesh && materialProperties.batching === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === true && object.instanceColor === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === false && object.instanceColor !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingMorph === true && object.morphTexture === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingMorph === false && object.morphTexture !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tneedsProgramChange = true;\n\t\t\t\tmaterialProperties.__version = material.version;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet program = materialProperties.currentProgram;\n\n\t\t\tif ( needsProgramChange === true ) {\n\n\t\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t\tlet refreshProgram = false;\n\t\t\tlet refreshMaterial = false;\n\t\t\tlet refreshLights = false;\n\n\t\t\tconst p_uniforms = program.getUniforms(),\n\t\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\n\t\t\t}\n\n\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\trefreshMaterial = true;\n\n\t\t\t}\n\n\t\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\t\t// common camera uniforms\n\n\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl, _vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// consider moving isOrthographic to UniformLib and WebGLMaterials, see https://github.com/mrdoob/three.js/pull/26467#issuecomment-1645185067\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t\t}\n\n\t\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\tconst skeleton = object.skeleton;\n\n\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.isBatchedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingTexture' );\n\t\t\t\tp_uniforms.setValue( _gl, 'batchingTexture', object._matricesTexture, textures );\n\n\t\t\t}\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined ) ) {\n\n\t\t\t\tmorphtargets.update( object, geometry, program );\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t\t}\n\n\t\t\t// https://github.com/mrdoob/three.js/pull/24467#issuecomment-1209031512\n\n\t\t\tif ( material.isMeshGouraudMaterial && material.envMap !== null ) {\n\n\t\t\t\tm_uniforms.envMap.value = envMap;\n\n\t\t\t\tm_uniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshStandardMaterial && material.envMap === null && scene.environment !== null ) {\n\n\t\t\t\tm_uniforms.envMapIntensity.value = scene.environmentIntensity;\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\tif ( fog && material.fog === true ) {\n\n\t\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, currentRenderState.state.transmissionRenderTarget );\n\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\n\n\t\t\t}\n\n\t\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t\t}\n\n\t\t\t// common matrices\n\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t\t// UBOs\n\n\t\t\tif ( material.isShaderMaterial || material.isRawShaderMaterial ) {\n\n\t\t\t\tconst groups = material.uniformsGroups;\n\n\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\t\tuniformsGroups.update( group, program );\n\t\t\t\t\tuniformsGroups.bind( group, program );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t}\n\n\t\tfunction materialNeedsLights( material ) {\n\n\t\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t\t}\n\n\t\tthis.getActiveCubeFace = function () {\n\n\t\t\treturn _currentActiveCubeFace;\n\n\t\t};\n\n\t\tthis.getActiveMipmapLevel = function () {\n\n\t\t\treturn _currentActiveMipmapLevel;\n\n\t\t};\n\n\t\tthis.getRenderTarget = function () {\n\n\t\t\treturn _currentRenderTarget;\n\n\t\t};\n\n\t\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t\t};\n\n\t\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t\t_currentRenderTarget = renderTarget;\n\t\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\t\tlet useDefaultFramebuffer = true;\n\t\t\tlet framebuffer = null;\n\t\t\tlet isCube = false;\n\t\t\tlet isRenderTarget3D = false;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\t\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t\t}\n\n\t\t\t\tconst texture = renderTarget.texture;\n\n\t\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer[ activeCubeFace ] ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ][ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tisCube = true;\n\n\t\t\t\t} else if ( ( renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t} else {\n\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t}\n\n\t\t\tconst framebufferBound = state.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\tif ( framebufferBound && useDefaultFramebuffer ) {\n\n\t\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport );\n\t\t\tstate.scissor( _currentScissor );\n\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t\t_gl.framebufferTextureLayer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t\t}\n\n\t\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t}\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\ttry {\n\n\t\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || extensions.has( 'EXT_color_buffer_float' ) );\n\n\t\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t\ttextureType !== FloatType && ! halfFloatSupportedByExt ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n\n\t\t\tconst levelScale = Math.pow( 2, - level );\n\t\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t_gl.copyTexSubImage2D( _gl.TEXTURE_2D, level, 0, 0, position.x, position.y, width, height );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n\n\t\t\tconst width = srcTexture.image.width;\n\t\t\tconst height = srcTexture.image.height;\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t\t// As another texture upload may have changed pixelStorei\n\t\t\t// parameters, make sure they are correct for the dstTexture\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t\t_gl.compressedTexSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {\n\n\t\t\tconst width = Math.round( sourceBox.max.x - sourceBox.min.x );\n\t\t\tconst height = Math.round( sourceBox.max.y - sourceBox.min.y );\n\t\t\tconst depth = sourceBox.max.z - sourceBox.min.z + 1;\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\t\t\tlet glTarget;\n\n\t\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_3D;\n\n\t\t\t} else if ( dstTexture.isDataArrayTexture || dstTexture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tconst unpackRowLen = _gl.getParameter( _gl.UNPACK_ROW_LENGTH );\n\t\t\tconst unpackImageHeight = _gl.getParameter( _gl.UNPACK_IMAGE_HEIGHT );\n\t\t\tconst unpackSkipPixels = _gl.getParameter( _gl.UNPACK_SKIP_PIXELS );\n\t\t\tconst unpackSkipRows = _gl.getParameter( _gl.UNPACK_SKIP_ROWS );\n\t\t\tconst unpackSkipImages = _gl.getParameter( _gl.UNPACK_SKIP_IMAGES );\n\n\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ level ] : srcTexture.image;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, image.width );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, image.height );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, sourceBox.min.x );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, sourceBox.min.y );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, sourceBox.min.z );\n\n\t\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( dstTexture.isCompressedArrayTexture ) {\n\n\t\t\t\t\t_gl.compressedTexSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, unpackRowLen );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, unpackImageHeight );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, unpackSkipPixels );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, unpackSkipRows );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, unpackSkipImages );\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.initTexture = function ( texture ) {\n\n\t\t\tif ( texture.isCubeTexture ) {\n\n\t\t\t\ttextures.setTextureCube( texture, 0 );\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( texture, 0 );\n\n\t\t\t} else if ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( texture, 0 );\n\n\t\t\t} else {\n\n\t\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.resetState = function () {\n\n\t\t\t_currentActiveCubeFace = 0;\n\t\t\t_currentActiveMipmapLevel = 0;\n\t\t\t_currentRenderTarget = null;\n\n\t\t\tstate.reset();\n\t\t\tbindingStates.reset();\n\n\t\t};\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tget coordinateSystem() {\n\n\t\treturn WebGLCoordinateSystem;\n\n\t}\n\n\tget outputColorSpace() {\n\n\t\treturn this._outputColorSpace;\n\n\t}\n\n\tset outputColorSpace( colorSpace ) {\n\n\t\tthis._outputColorSpace = colorSpace;\n\n\t\tconst gl = this.getContext();\n\t\tgl.drawingBufferColorSpace = colorSpace === DisplayP3ColorSpace ? 'display-p3' : 'srgb';\n\t\tgl.unpackColorSpace = ColorManagement.workingColorSpace === LinearDisplayP3ColorSpace ? 'display-p3' : 'srgb';\n\n\t}\n\n\tget useLegacyLights() { // @deprecated, r155\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733.' );\n\t\treturn this._useLegacyLights;\n\n\t}\n\n\tset useLegacyLights( value ) { // @deprecated, r155\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733.' );\n\t\tthis._useLegacyLights = value;\n\n\t}\n\n}\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.isFogExp2 = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.isFog = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isScene = true;\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.backgroundBlurriness = 0;\n\t\tthis.backgroundIntensity = 1;\n\t\tthis.backgroundRotation = new Euler();\n\n\t\tthis.environmentIntensity = 1;\n\t\tthis.environmentRotation = new Euler();\n\n\t\tthis.overrideMaterial = null;\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tthis.backgroundBlurriness = source.backgroundBlurriness;\n\t\tthis.backgroundIntensity = source.backgroundIntensity;\n\t\tthis.backgroundRotation.copy( source.backgroundRotation );\n\n\t\tthis.environmentIntensity = source.environmentIntensity;\n\t\tthis.environmentRotation.copy( source.environmentRotation );\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\tif ( this.backgroundBlurriness > 0 ) data.object.backgroundBlurriness = this.backgroundBlurriness;\n\t\tif ( this.backgroundIntensity !== 1 ) data.object.backgroundIntensity = this.backgroundIntensity;\n\t\tdata.object.backgroundRotation = this.backgroundRotation.toArray();\n\n\t\tif ( this.environmentIntensity !== 1 ) data.object.environmentIntensity = this.environmentIntensity;\n\t\tdata.object.environmentRotation = this.environmentRotation.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis._updateRange = { offset: 0, count: - 1 };\n\t\tthis.updateRanges = [];\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tget updateRange() {\n\n\t\twarnOnce( 'THREE.InterleavedBuffer: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead.' ); // @deprecated, r159\n\t\treturn this._updateRange;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.data.stride + this.offset + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// de-interleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interleaved attribute\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteMaterial = true;\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material = new SpriteMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isSprite = true;\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = material;\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getInterpolation( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance, level.hysteresis );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0, hysteresis = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, hysteresis: hysteresis, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance < levelDistance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance >= levelDistance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance,\n\t\t\t\thysteresis: level.hysteresis\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector3 = /*@__PURE__*/ new Vector3();\nconst _matrix4 = /*@__PURE__*/ new Matrix4();\nconst _vertex = /*@__PURE__*/ new Vector3();\n\nconst _sphere$4 = /*@__PURE__*/ new Sphere();\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkinnedMesh = true;\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = AttachedBindMode;\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingBox.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingSphere.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$4.copy( this.boundingSphere );\n\t\t_sphere$4.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$4 ) === false ) return;\n\n\t\t// convert ray to local space of skinned mesh\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( this.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$2 );\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tsuper.getVertexPosition( index, target );\n\n\t\tthis.applyBoneTransform( index, target );\n\n\t\treturn target;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === AttachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === DetachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tapplyBoneTransform( index, vector ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( vector ).applyMatrix4( this.bindMatrix );\n\n\t\tvector.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix4.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\tvector.addScaledVector( _vector3.copy( _basePosition ).applyMatrix4( _matrix4 ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn vector.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n}\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBone = true;\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix$1 = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix$1;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.isInstancedBufferAttribute = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _box3 = /*@__PURE__*/ new Box3();\nconst _identity = /*@__PURE__*/ new Matrix4();\nconst _mesh$1 = /*@__PURE__*/ new Mesh();\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isInstancedMesh = true;\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\t\tthis.morphTexture = null;\n\n\t\tthis.count = count;\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.setMatrixAt( i, _identity );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\tgeometry.computeBoundingBox();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_box3.copy( geometry.boundingBox ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingBox.union( _box3 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere === null ) {\n\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_sphere$3.copy( geometry.boundingSphere ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingSphere.union( _sphere$3 );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.morphTexture !== null ) this.morphTexture = source.morphTexture.clone();\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tgetMorphAt( index, object ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tconst array = this.morphTexture.source.data.data;\n\n\t\tconst len = objectInfluences.length + 1; // All influences + the baseInfluenceSum\n\n\t\tconst dataIndex = index * len + 1; // Skip the baseInfluenceSum at the beginning\n\n\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\tobjectInfluences[ i ] = array[ dataIndex + i ];\n\n\t\t}\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh$1.geometry = this.geometry;\n\t\t_mesh$1.material = this.material;\n\n\t\tif ( _mesh$1.material === undefined ) return;\n\n\t\t// test with bounding sphere first\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$3.copy( this.boundingSphere );\n\t\t_sphere$3.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n\n\t\t// now test each instance\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh$1.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh$1.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tsetMorphAt( index, object ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tconst len = objectInfluences.length + 1; // morphBaseInfluence + all influences\n\n\t\tif ( this.morphTexture === null ) {\n\n\t\t\tthis.morphTexture = new DataTexture( new Float32Array( len * this.count ), len, this.count, RedFormat, FloatType );\n\n\t\t}\n\n\t\tconst array = this.morphTexture.source.data.data;\n\n\t\tlet morphInfluencesSum = 0;\n\n\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t}\n\n\t\tconst morphBaseInfluence = this.geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\tconst dataIndex = len * index;\n\n\t\tarray[ dataIndex ] = morphBaseInfluence;\n\n\t\tarray.set( objectInfluences, dataIndex + 1 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\tif ( this.morphTexture !== null ) {\n\n\t\t\tthis.morphTexture.dispose();\n\t\t\tthis.morphTexture = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction sortOpaque( a, b ) {\n\n\treturn a.z - b.z;\n\n}\n\nfunction sortTransparent( a, b ) {\n\n\treturn b.z - a.z;\n\n}\n\nclass MultiDrawRenderList {\n\n\tconstructor() {\n\n\t\tthis.index = 0;\n\t\tthis.pool = [];\n\t\tthis.list = [];\n\n\t}\n\n\tpush( drawRange, z ) {\n\n\t\tconst pool = this.pool;\n\t\tconst list = this.list;\n\t\tif ( this.index >= pool.length ) {\n\n\t\t\tpool.push( {\n\n\t\t\t\tstart: - 1,\n\t\t\t\tcount: - 1,\n\t\t\t\tz: - 1,\n\n\t\t\t} );\n\n\t\t}\n\n\t\tconst item = pool[ this.index ];\n\t\tlist.push( item );\n\t\tthis.index ++;\n\n\t\titem.start = drawRange.start;\n\t\titem.count = drawRange.count;\n\t\titem.z = z;\n\n\t}\n\n\treset() {\n\n\t\tthis.list.length = 0;\n\t\tthis.index = 0;\n\n\t}\n\n}\n\nconst ID_ATTR_NAME = 'batchId';\nconst _matrix$1 = /*@__PURE__*/ new Matrix4();\nconst _invMatrixWorld = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\nconst _projScreenMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _frustum = /*@__PURE__*/ new Frustum();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\nconst _vector$5 = /*@__PURE__*/ new Vector3();\nconst _renderList = /*@__PURE__*/ new MultiDrawRenderList();\nconst _mesh = /*@__PURE__*/ new Mesh();\nconst _batchIntersects = [];\n\n// @TODO: SkinnedMesh support?\n// @TODO: geometry.groups support?\n// @TODO: geometry.drawRange support?\n// @TODO: geometry.morphAttributes support?\n// @TODO: Support uniform parameter per geometry\n// @TODO: Add an \"optimize\" function to pack geometry and remove data gaps\n\n// copies data from attribute \"src\" into \"target\" starting at \"targetOffset\"\nfunction copyAttributeData( src, target, targetOffset = 0 ) {\n\n\tconst itemSize = target.itemSize;\n\tif ( src.isInterleavedBufferAttribute || src.array.constructor !== target.array.constructor ) {\n\n\t\t// use the component getters and setters if the array data cannot\n\t\t// be copied directly\n\t\tconst vertexCount = src.count;\n\t\tfor ( let i = 0; i < vertexCount; i ++ ) {\n\n\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\ttarget.setComponent( i + targetOffset, c, src.getComponent( i, c ) );\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\t// faster copy approach using typed array set function\n\t\ttarget.array.set( src.array, targetOffset * itemSize );\n\n\t}\n\n\ttarget.needsUpdate = true;\n\n}\n\nclass BatchedMesh extends Mesh {\n\n\tget maxGeometryCount() {\n\n\t\treturn this._maxGeometryCount;\n\n\t}\n\n\tconstructor( maxGeometryCount, maxVertexCount, maxIndexCount = maxVertexCount * 2, material ) {\n\n\t\tsuper( new BufferGeometry(), material );\n\n\t\tthis.isBatchedMesh = true;\n\t\tthis.perObjectFrustumCulled = true;\n\t\tthis.sortObjects = true;\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\t\tthis.customSort = null;\n\n\t\tthis._drawRanges = [];\n\t\tthis._reservedRanges = [];\n\n\t\tthis._visibility = [];\n\t\tthis._active = [];\n\t\tthis._bounds = [];\n\n\t\tthis._maxGeometryCount = maxGeometryCount;\n\t\tthis._maxVertexCount = maxVertexCount;\n\t\tthis._maxIndexCount = maxIndexCount;\n\n\t\tthis._geometryInitialized = false;\n\t\tthis._geometryCount = 0;\n\t\tthis._multiDrawCounts = new Int32Array( maxGeometryCount );\n\t\tthis._multiDrawStarts = new Int32Array( maxGeometryCount );\n\t\tthis._multiDrawCount = 0;\n\t\tthis._visibilityChanged = true;\n\n\t\t// Local matrix per geometry by using data texture\n\t\tthis._matricesTexture = null;\n\n\t\tthis._initMatricesTexture();\n\n\t}\n\n\t_initMatricesTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 matrices * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 matrices * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 matrices * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 matrices * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this._maxGeometryCount * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst matricesArray = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tconst matricesTexture = new DataTexture( matricesArray, size, size, RGBAFormat, FloatType );\n\n\t\tthis._matricesTexture = matricesTexture;\n\n\t}\n\n\t_initializeGeometry( reference ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst maxVertexCount = this._maxVertexCount;\n\t\tconst maxGeometryCount = this._maxGeometryCount;\n\t\tconst maxIndexCount = this._maxIndexCount;\n\t\tif ( this._geometryInitialized === false ) {\n\n\t\t\tfor ( const attributeName in reference.attributes ) {\n\n\t\t\t\tconst srcAttribute = reference.getAttribute( attributeName );\n\t\t\t\tconst { array, itemSize, normalized } = srcAttribute;\n\n\t\t\t\tconst dstArray = new array.constructor( maxVertexCount * itemSize );\n\t\t\t\tconst dstAttribute = new BufferAttribute( dstArray, itemSize, normalized );\n\n\t\t\t\tgeometry.setAttribute( attributeName, dstAttribute );\n\n\t\t\t}\n\n\t\t\tif ( reference.getIndex() !== null ) {\n\n\t\t\t\tconst indexArray = maxVertexCount > 65536\n\t\t\t\t\t? new Uint32Array( maxIndexCount )\n\t\t\t\t\t: new Uint16Array( maxIndexCount );\n\n\t\t\t\tgeometry.setIndex( new BufferAttribute( indexArray, 1 ) );\n\n\t\t\t}\n\n\t\t\tconst idArray = maxGeometryCount > 65536\n\t\t\t\t? new Uint32Array( maxVertexCount )\n\t\t\t\t: new Uint16Array( maxVertexCount );\n\t\t\tgeometry.setAttribute( ID_ATTR_NAME, new BufferAttribute( idArray, 1 ) );\n\n\t\t\tthis._geometryInitialized = true;\n\n\t\t}\n\n\t}\n\n\t// Make sure the geometry is compatible with the existing combined geometry attributes\n\t_validateGeometry( geometry ) {\n\n\t\t// check that the geometry doesn't have a version of our reserved id attribute\n\t\tif ( geometry.getAttribute( ID_ATTR_NAME ) ) {\n\n\t\t\tthrow new Error( `BatchedMesh: Geometry cannot use attribute \"${ ID_ATTR_NAME }\"` );\n\n\t\t}\n\n\t\t// check to ensure the geometries are using consistent attributes and indices\n\t\tconst batchGeometry = this.geometry;\n\t\tif ( Boolean( geometry.getIndex() ) !== Boolean( batchGeometry.getIndex() ) ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: All geometries must consistently have \"index\".' );\n\n\t\t}\n\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\tif ( attributeName === ID_ATTR_NAME ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( ! geometry.hasAttribute( attributeName ) ) {\n\n\t\t\t\tthrow new Error( `BatchedMesh: Added geometry missing \"${ attributeName }\". All geometries must have consistent attributes.` );\n\n\t\t\t}\n\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tif ( srcAttribute.itemSize !== dstAttribute.itemSize || srcAttribute.normalized !== dstAttribute.normalized ) {\n\n\t\t\t\tthrow new Error( 'BatchedMesh: All attributes must have a consistent itemSize and normalized value.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tsetCustomSort( func ) {\n\n\t\tthis.customSort = func;\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst geometryCount = this._geometryCount;\n\t\tconst boundingBox = this.boundingBox;\n\t\tconst active = this._active;\n\n\t\tboundingBox.makeEmpty();\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\n\n\t\t\tif ( active[ i ] === false ) continue;\n\n\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\tthis.getBoundingBoxAt( i, _box$1 ).applyMatrix4( _matrix$1 );\n\t\t\tboundingBox.union( _box$1 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst geometryCount = this._geometryCount;\n\t\tconst boundingSphere = this.boundingSphere;\n\t\tconst active = this._active;\n\n\t\tboundingSphere.makeEmpty();\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\n\n\t\t\tif ( active[ i ] === false ) continue;\n\n\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\tthis.getBoundingSphereAt( i, _sphere$2 ).applyMatrix4( _matrix$1 );\n\t\t\tboundingSphere.union( _sphere$2 );\n\n\t\t}\n\n\t}\n\n\taddGeometry( geometry, vertexCount = - 1, indexCount = - 1 ) {\n\n\t\tthis._initializeGeometry( geometry );\n\n\t\tthis._validateGeometry( geometry );\n\n\t\t// ensure we're not over geometry\n\t\tif ( this._geometryCount >= this._maxGeometryCount ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Maximum geometry count reached.' );\n\n\t\t}\n\n\t\t// get the necessary range fo the geometry\n\t\tconst reservedRange = {\n\t\t\tvertexStart: - 1,\n\t\t\tvertexCount: - 1,\n\t\t\tindexStart: - 1,\n\t\t\tindexCount: - 1,\n\t\t};\n\n\t\tlet lastRange = null;\n\t\tconst reservedRanges = this._reservedRanges;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst bounds = this._bounds;\n\t\tif ( this._geometryCount !== 0 ) {\n\n\t\t\tlastRange = reservedRanges[ reservedRanges.length - 1 ];\n\n\t\t}\n\n\t\tif ( vertexCount === - 1 ) {\n\n\t\t\treservedRange.vertexCount = geometry.getAttribute( 'position' ).count;\n\n\t\t} else {\n\n\t\t\treservedRange.vertexCount = vertexCount;\n\n\t\t}\n\n\t\tif ( lastRange === null ) {\n\n\t\t\treservedRange.vertexStart = 0;\n\n\t\t} else {\n\n\t\t\treservedRange.vertexStart = lastRange.vertexStart + lastRange.vertexCount;\n\n\t\t}\n\n\t\tconst index = geometry.getIndex();\n\t\tconst hasIndex = index !== null;\n\t\tif ( hasIndex ) {\n\n\t\t\tif ( indexCount\t=== - 1 ) {\n\n\t\t\t\treservedRange.indexCount = index.count;\n\n\t\t\t} else {\n\n\t\t\t\treservedRange.indexCount = indexCount;\n\n\t\t\t}\n\n\t\t\tif ( lastRange === null ) {\n\n\t\t\t\treservedRange.indexStart = 0;\n\n\t\t\t} else {\n\n\t\t\t\treservedRange.indexStart = lastRange.indexStart + lastRange.indexCount;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif (\n\t\t\treservedRange.indexStart !== - 1 &&\n\t\t\treservedRange.indexStart + reservedRange.indexCount > this._maxIndexCount ||\n\t\t\treservedRange.vertexStart + reservedRange.vertexCount > this._maxVertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Reserved space request exceeds the maximum buffer size.' );\n\n\t\t}\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\n\t\t// push new visibility states\n\t\tvisibility.push( true );\n\t\tactive.push( true );\n\n\t\t// update id\n\t\tconst geometryId = this._geometryCount;\n\t\tthis._geometryCount ++;\n\n\t\t// initialize matrix information\n\t\t_identityMatrix.toArray( matricesArray, geometryId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\t// add the reserved range and draw range objects\n\t\treservedRanges.push( reservedRange );\n\t\tdrawRanges.push( {\n\t\t\tstart: hasIndex ? reservedRange.indexStart : reservedRange.vertexStart,\n\t\t\tcount: - 1\n\t\t} );\n\t\tbounds.push( {\n\t\t\tboxInitialized: false,\n\t\t\tbox: new Box3(),\n\n\t\t\tsphereInitialized: false,\n\t\t\tsphere: new Sphere()\n\t\t} );\n\n\t\t// set the id for the geometry\n\t\tconst idAttribute = this.geometry.getAttribute( ID_ATTR_NAME );\n\t\tfor ( let i = 0; i < reservedRange.vertexCount; i ++ ) {\n\n\t\t\tidAttribute.setX( reservedRange.vertexStart + i, geometryId );\n\n\t\t}\n\n\t\tidAttribute.needsUpdate = true;\n\n\t\t// update the geometry\n\t\tthis.setGeometryAt( geometryId, geometry );\n\n\t\treturn geometryId;\n\n\t}\n\n\tsetGeometryAt( id, geometry ) {\n\n\t\tif ( id >= this._geometryCount ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Maximum geometry count reached.' );\n\n\t\t}\n\n\t\tthis._validateGeometry( geometry );\n\n\t\tconst batchGeometry = this.geometry;\n\t\tconst hasIndex = batchGeometry.getIndex() !== null;\n\t\tconst dstIndex = batchGeometry.getIndex();\n\t\tconst srcIndex = geometry.getIndex();\n\t\tconst reservedRange = this._reservedRanges[ id ];\n\t\tif (\n\t\t\thasIndex &&\n\t\t\tsrcIndex.count > reservedRange.indexCount ||\n\t\t\tgeometry.attributes.position.count > reservedRange.vertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Reserved space not large enough for provided geometry.' );\n\n\t\t}\n\n\t\t// copy geometry over\n\t\tconst vertexStart = reservedRange.vertexStart;\n\t\tconst vertexCount = reservedRange.vertexCount;\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\tif ( attributeName === ID_ATTR_NAME ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// copy attribute data\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tcopyAttributeData( srcAttribute, dstAttribute, vertexStart );\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tconst itemSize = srcAttribute.itemSize;\n\t\t\tfor ( let i = srcAttribute.count, l = vertexCount; i < l; i ++ ) {\n\n\t\t\t\tconst index = vertexStart + i;\n\t\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\t\tdstAttribute.setComponent( index, c, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdstAttribute.needsUpdate = true;\n\t\t\tdstAttribute.addUpdateRange( vertexStart * itemSize, vertexCount * itemSize );\n\n\t\t}\n\n\t\t// copy index\n\t\tif ( hasIndex ) {\n\n\t\t\tconst indexStart = reservedRange.indexStart;\n\n\t\t\t// copy index data over\n\t\t\tfor ( let i = 0; i < srcIndex.count; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart + srcIndex.getX( i ) );\n\n\t\t\t}\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tfor ( let i = srcIndex.count, l = reservedRange.indexCount; i < l; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart );\n\n\t\t\t}\n\n\t\t\tdstIndex.needsUpdate = true;\n\t\t\tdstIndex.addUpdateRange( indexStart, reservedRange.indexCount );\n\n\t\t}\n\n\t\t// store the bounding boxes\n\t\tconst bound = this._bounds[ id ];\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tbound.box.copy( geometry.boundingBox );\n\t\t\tbound.boxInitialized = true;\n\n\t\t} else {\n\n\t\t\tbound.boxInitialized = false;\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tbound.sphere.copy( geometry.boundingSphere );\n\t\t\tbound.sphereInitialized = true;\n\n\t\t} else {\n\n\t\t\tbound.sphereInitialized = false;\n\n\t\t}\n\n\t\t// set drawRange count\n\t\tconst drawRange = this._drawRanges[ id ];\n\t\tconst posAttr = geometry.getAttribute( 'position' );\n\t\tdrawRange.count = hasIndex ? srcIndex.count : posAttr.count;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn id;\n\n\t}\n\n\tdeleteGeometry( geometryId ) {\n\n\t\t// Note: User needs to call optimize() afterward to pack the data.\n\n\t\tconst active = this._active;\n\t\tif ( geometryId >= active.length || active[ geometryId ] === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tactive[ geometryId ] = false;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\t// get bounding box and compute it if it doesn't exist\n\tgetBoundingBoxAt( id, target ) {\n\n\t\tconst active = this._active;\n\t\tif ( active[ id ] === false ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// compute bounding box\n\t\tconst bound = this._bounds[ id ];\n\t\tconst box = bound.box;\n\t\tconst geometry = this.geometry;\n\t\tif ( bound.boxInitialized === false ) {\n\n\t\t\tbox.makeEmpty();\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst drawRange = this._drawRanges[ id ];\n\t\t\tfor ( let i = drawRange.start, l = drawRange.start + drawRange.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\tbox.expandByPoint( _vector$5.fromBufferAttribute( position, iv ) );\n\n\t\t\t}\n\n\t\t\tbound.boxInitialized = true;\n\n\t\t}\n\n\t\ttarget.copy( box );\n\t\treturn target;\n\n\t}\n\n\t// get bounding sphere and compute it if it doesn't exist\n\tgetBoundingSphereAt( id, target ) {\n\n\t\tconst active = this._active;\n\t\tif ( active[ id ] === false ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// compute bounding sphere\n\t\tconst bound = this._bounds[ id ];\n\t\tconst sphere = bound.sphere;\n\t\tconst geometry = this.geometry;\n\t\tif ( bound.sphereInitialized === false ) {\n\n\t\t\tsphere.makeEmpty();\n\n\t\t\tthis.getBoundingBoxAt( id, _box$1 );\n\t\t\t_box$1.getCenter( sphere.center );\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst drawRange = this._drawRanges[ id ];\n\n\t\t\tlet maxRadiusSq = 0;\n\t\t\tfor ( let i = drawRange.start, l = drawRange.start + drawRange.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\t_vector$5.fromBufferAttribute( position, iv );\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, sphere.center.distanceToSquared( _vector$5 ) );\n\n\t\t\t}\n\n\t\t\tsphere.radius = Math.sqrt( maxRadiusSq );\n\t\t\tbound.sphereInitialized = true;\n\n\t\t}\n\n\t\ttarget.copy( sphere );\n\t\treturn target;\n\n\t}\n\n\tsetMatrixAt( geometryId, matrix ) {\n\n\t\t// @TODO: Map geometryId to index of the arrays because\n\t\t//        optimize() can make geometryId mismatch the index\n\n\t\tconst active = this._active;\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\t\tconst geometryCount = this._geometryCount;\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmatrix.toArray( matricesArray, geometryId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetMatrixAt( geometryId, matrix ) {\n\n\t\tconst active = this._active;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\t\tconst geometryCount = this._geometryCount;\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn matrix.fromArray( matricesArray, geometryId * 16 );\n\n\t}\n\n\tsetVisibleAt( geometryId, value ) {\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst geometryCount = this._geometryCount;\n\n\t\t// if the geometry is out of range, not active, or visibility state\n\t\t// does not change then return early\n\t\tif (\n\t\t\tgeometryId >= geometryCount ||\n\t\t\tactive[ geometryId ] === false ||\n\t\t\tvisibility[ geometryId ] === value\n\t\t) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvisibility[ geometryId ] = value;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetVisibleAt( geometryId ) {\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst geometryCount = this._geometryCount;\n\n\t\t// return early if the geometry is out of range or not active\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn visibility[ geometryId ];\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst geometryCount = this._geometryCount;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst batchGeometry = this.geometry;\n\n\t\t// iterate over each geometry\n\t\t_mesh.material = this.material;\n\t\t_mesh.geometry.index = batchGeometry.index;\n\t\t_mesh.geometry.attributes = batchGeometry.attributes;\n\t\tif ( _mesh.geometry.boundingBox === null ) {\n\n\t\t\t_mesh.geometry.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( _mesh.geometry.boundingSphere === null ) {\n\n\t\t\t_mesh.geometry.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\n\n\t\t\tif ( ! visibility[ i ] || ! active[ i ] ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst drawRange = drawRanges[ i ];\n\t\t\t_mesh.geometry.setDrawRange( drawRange.start, drawRange.count );\n\n\t\t\t// ge the intersects\n\t\t\tthis.getMatrixAt( i, _mesh.matrixWorld ).premultiply( matrixWorld );\n\t\t\tthis.getBoundingBoxAt( i, _mesh.geometry.boundingBox );\n\t\t\tthis.getBoundingSphereAt( i, _mesh.geometry.boundingSphere );\n\t\t\t_mesh.raycast( raycaster, _batchIntersects );\n\n\t\t\t// add batch id to the intersects\n\t\t\tfor ( let j = 0, l = _batchIntersects.length; j < l; j ++ ) {\n\n\t\t\t\tconst intersect = _batchIntersects[ j ];\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersect.batchId = i;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_batchIntersects.length = 0;\n\n\t\t}\n\n\t\t_mesh.material = null;\n\t\t_mesh.geometry.index = null;\n\t\t_mesh.geometry.attributes = {};\n\t\t_mesh.geometry.setDrawRange( 0, Infinity );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.geometry = source.geometry.clone();\n\t\tthis.perObjectFrustumCulled = source.perObjectFrustumCulled;\n\t\tthis.sortObjects = source.sortObjects;\n\t\tthis.boundingBox = source.boundingBox !== null ? source.boundingBox.clone() : null;\n\t\tthis.boundingSphere = source.boundingSphere !== null ? source.boundingSphere.clone() : null;\n\n\t\tthis._drawRanges = source._drawRanges.map( range => ( { ...range } ) );\n\t\tthis._reservedRanges = source._reservedRanges.map( range => ( { ...range } ) );\n\n\t\tthis._visibility = source._visibility.slice();\n\t\tthis._active = source._active.slice();\n\t\tthis._bounds = source._bounds.map( bound => ( {\n\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\tbox: bound.box.clone(),\n\n\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\tsphere: bound.sphere.clone()\n\t\t} ) );\n\n\t\tthis._maxGeometryCount = source._maxGeometryCount;\n\t\tthis._maxVertexCount = source._maxVertexCount;\n\t\tthis._maxIndexCount = source._maxIndexCount;\n\n\t\tthis._geometryInitialized = source._geometryInitialized;\n\t\tthis._geometryCount = source._geometryCount;\n\t\tthis._multiDrawCounts = source._multiDrawCounts.slice();\n\t\tthis._multiDrawStarts = source._multiDrawStarts.slice();\n\n\t\tthis._matricesTexture = source._matricesTexture.clone();\n\t\tthis._matricesTexture.image.data = this._matricesTexture.image.slice();\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\t// Assuming the geometry is not shared with other meshes\n\t\tthis.geometry.dispose();\n\n\t\tthis._matricesTexture.dispose();\n\t\tthis._matricesTexture = null;\n\t\treturn this;\n\n\t}\n\n\tonBeforeRender( renderer, scene, camera, geometry, material/*, _group*/ ) {\n\n\t\t// if visibility has not changed and frustum culling and object sorting is not required\n\t\t// then skip iterating over all items\n\t\tif ( ! this._visibilityChanged && ! this.perObjectFrustumCulled && ! this.sortObjects ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// the indexed version of the multi draw function requires specifying the start\n\t\t// offset in bytes.\n\t\tconst index = geometry.getIndex();\n\t\tconst bytesPerElement = index === null ? 1 : index.array.BYTES_PER_ELEMENT;\n\n\t\tconst active = this._active;\n\t\tconst visibility = this._visibility;\n\t\tconst multiDrawStarts = this._multiDrawStarts;\n\t\tconst multiDrawCounts = this._multiDrawCounts;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst perObjectFrustumCulled = this.perObjectFrustumCulled;\n\n\t\t// prepare the frustum in the local frame\n\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t_projScreenMatrix$2\n\t\t\t\t.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse )\n\t\t\t\t.multiply( this.matrixWorld );\n\t\t\t_frustum.setFromProjectionMatrix(\n\t\t\t\t_projScreenMatrix$2,\n\t\t\t\trenderer.coordinateSystem\n\t\t\t);\n\n\t\t}\n\n\t\tlet count = 0;\n\t\tif ( this.sortObjects ) {\n\n\t\t\t// get the camera position in the local frame\n\t\t\t_invMatrixWorld.copy( this.matrixWorld ).invert();\n\t\t\t_vector$5.setFromMatrixPosition( camera.matrixWorld ).applyMatrix4( _invMatrixWorld );\n\n\t\t\tfor ( let i = 0, l = visibility.length; i < l; i ++ ) {\n\n\t\t\t\tif ( visibility[ i ] && active[ i ] ) {\n\n\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\t\t\tthis.getBoundingSphereAt( i, _sphere$2 ).applyMatrix4( _matrix$1 );\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\t// get the distance from camera used for sorting\n\t\t\t\t\t\tconst z = _vector$5.distanceTo( _sphere$2.center );\n\t\t\t\t\t\t_renderList.push( drawRanges[ i ], z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Sort the draw ranges and prep for rendering\n\t\t\tconst list = _renderList.list;\n\t\t\tconst customSort = this.customSort;\n\t\t\tif ( customSort === null ) {\n\n\t\t\t\tlist.sort( material.transparent ? sortTransparent : sortOpaque );\n\n\t\t\t} else {\n\n\t\t\t\tcustomSort.call( this, list, camera );\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = list.length; i < l; i ++ ) {\n\n\t\t\t\tconst item = list[ i ];\n\t\t\t\tmultiDrawStarts[ count ] = item.start * bytesPerElement;\n\t\t\t\tmultiDrawCounts[ count ] = item.count;\n\t\t\t\tcount ++;\n\n\t\t\t}\n\n\t\t\t_renderList.reset();\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0, l = visibility.length; i < l; i ++ ) {\n\n\t\t\t\tif ( visibility[ i ] && active[ i ] ) {\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\t\t\t\tthis.getBoundingSphereAt( i, _sphere$2 ).applyMatrix4( _matrix$1 );\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\tconst range = drawRanges[ i ];\n\t\t\t\t\t\tmultiDrawStarts[ count ] = range.start * bytesPerElement;\n\t\t\t\t\t\tmultiDrawCounts[ count ] = range.count;\n\t\t\t\t\t\tcount ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._multiDrawCount = count;\n\t\tthis._visibilityChanged = false;\n\n\t}\n\n\tonBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial/* , group */ ) {\n\n\t\tthis.onBeforeRender( renderer, null, shadowCamera, geometry, depthMaterial );\n\n\t}\n\n}\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicMaterial = true;\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _start$1 = /*@__PURE__*/ new Vector3();\nconst _end$1 = /*@__PURE__*/ new Vector3();\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isLine = true;\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += _start$1.distanceTo( _end$1 );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst vStart = new Vector3();\n\t\tconst vEnd = new Vector3();\n\t\tconst interSegment = new Vector3();\n\t\tconst interRay = new Vector3();\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst a = index.getX( i );\n\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, a );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, b );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments = true;\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [];\n\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineLoop = true;\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsMaterial = true;\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isPoints = true;\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoTexture = true;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.isFramebufferTexture = true;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCompressedTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nclass CompressedArrayTexture extends CompressedTexture {\n\n\tconstructor( mipmaps, width, height, depth, format, type ) {\n\n\t\tsuper( mipmaps, width, height, format, type );\n\n\t\tthis.isCompressedArrayTexture = true;\n\t\tthis.image.depth = depth;\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t}\n\n}\n\nclass CompressedCubeTexture extends CompressedTexture {\n\n\tconstructor( images, format, type ) {\n\n\t\tsuper( undefined, images[ 0 ].width, images[ 0 ].height, format, type, CubeReflectionMapping );\n\n\t\tthis.isCompressedCubeTexture = true;\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.image = images;\n\n\t}\n\n}\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isCanvasTexture = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.isArcCurve = true;\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = /*@__PURE__*/ new Vector3();\nconst px = /*@__PURE__*/ new CubicPoly();\nconst py = /*@__PURE__*/ new CubicPoly();\nconst pz = /*@__PURE__*/ new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.isCatmullRomCurve3 = true;\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve = true;\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector2() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve = true;\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tconst lineType = ( startPoint.isVector2 === true ) ? 'LineCurve' : 'LineCurve3';\n\t\t\tthis.curves.push( new Curves[ lineType ]( endPoint, startPoint ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, - 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tlength: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 32, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivision with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1$1 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\nconst _triangle = /*@__PURE__*/ new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.4)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 32767 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize, 0 );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim | 0 );\n\t\t\ttriangles.push( ear.i / dim | 0 );\n\t\t\ttriangles.push( next.i / dim | 0 );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\tlet p = c.next;\n\twhile ( p !== a ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( x0, y0, minX, minY, invSize ),\n\t\tmaxZ = zOrder( x1, y1, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim | 0 );\n\t\t\ttriangles.push( p.i / dim | 0 );\n\t\t\ttriangles.push( b.i / dim | 0 );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\touterNode = eliminateHole( queue[ i ], outerNode );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\tconst bridge = findHoleBridge( hole, outerNode );\n\tif ( ! bridge ) {\n\n\t\treturn outerNode;\n\n\t}\n\n\tconst bridgeReverse = splitPolygon( bridge, hole );\n\n\t// filter collinear points around the cuts\n\tfilterPoints( bridgeReverse, bridgeReverse.next );\n\treturn filterPoints( bridge, bridge.next );\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode,\n\t\tqx = - Infinity,\n\t\tm;\n\n\tconst hx = hole.x, hy = hole.y;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\tif ( x === hx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === 0 ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = ( x - minX ) * invSize | 0;\n\ty = ( y - minY ) * invSize | 0;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) >= ( ax - px ) * ( cy - py ) &&\n           ( ax - px ) * ( by - py ) >= ( bx - px ) * ( ay - py ) &&\n           ( bx - px ) * ( cy - py ) >= ( cx - px ) * ( by - py );\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\n           ( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n            ( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n            equals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = 0;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tconst depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn pt.clone().addScaledVector( vec, size );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tdata.options = Object.assign( {}, options );\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 32, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy === 0 && thetaStart === 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy === heightSegments && thetaEnd === Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 12, tubularSegments = 48, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShadowMaterial = true;\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.isRawShaderMaterial = true;\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardMaterial = true;\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.anisotropyRotation = 0;\n\t\tthis.anisotropyMap = null;\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = Infinity;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._anisotropy = 0;\n\t\tthis._clearcoat = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._sheen = 0.0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget anisotropy() {\n\n\t\treturn this._anisotropy;\n\n\t}\n\n\tset anisotropy( value ) {\n\n\t\tif ( this._anisotropy > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._anisotropy = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.anisotropy = source.anisotropy;\n\t\tthis.anisotropyRotation = source.anisotropyRotation;\n\t\tthis.anisotropyMap = source.anisotropyMap;\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongMaterial = true;\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshToonMaterial = true;\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalMaterial = true;\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertMaterial = true;\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedMaterial = true;\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// converts an array to a specific type\nfunction convertArray( array, type, forceClone ) {\n\n\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t! forceClone && array.constructor === type ) return array;\n\n\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\treturn new type( array ); // create typed array\n\n\t}\n\n\treturn Array.prototype.slice.call( array ); // create Array\n\n}\n\nfunction isTypedArray( object ) {\n\n\treturn ArrayBuffer.isView( object ) &&\n\t\t! ( object instanceof DataView );\n\n}\n\n// returns an array by which times and values can be sorted\nfunction getKeyframeOrder( times ) {\n\n\tfunction compareTime( i, j ) {\n\n\t\treturn times[ i ] - times[ j ];\n\n\t}\n\n\tconst n = times.length;\n\tconst result = new Array( n );\n\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\tresult.sort( compareTime );\n\n\treturn result;\n\n}\n\n// uses the array previously returned by 'getKeyframeOrder' to sort data\nfunction sortedArray( values, stride, order ) {\n\n\tconst nValues = values.length;\n\tconst result = new values.constructor( nValues );\n\n\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\tconst srcOffset = order[ i ] * stride;\n\n\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n// function for parsing AOS keyframe formats\nfunction flattenJSON( jsonKeys, times, values, valuePropertyName ) {\n\n\tlet i = 1, key = jsonKeys[ 0 ];\n\n\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\tkey = jsonKeys[ i ++ ];\n\n\t}\n\n\tif ( key === undefined ) return; // no data\n\n\tlet value = key[ valuePropertyName ];\n\tif ( value === undefined ) return; // no data\n\n\tif ( Array.isArray( value ) ) {\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else if ( value.toArray !== undefined ) {\n\n\t\t// ...assume THREE.Math-ish\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else {\n\n\t\t// otherwise push as-is\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push( value );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t}\n\n}\n\nfunction subclip( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\tconst clip = sourceClip.clone();\n\n\tclip.name = name;\n\n\tconst tracks = [];\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tconst track = clip.tracks[ i ];\n\t\tconst valueSize = track.getValueSize();\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( times.length === 0 ) continue;\n\n\t\ttrack.times = convertArray( times, track.times.constructor );\n\t\ttrack.values = convertArray( values, track.values.constructor );\n\n\t\ttracks.push( track );\n\n\t}\n\n\tclip.tracks = tracks;\n\n\t// find minimum .times value across all tracks in the trimmed clip\n\n\tlet minStartTime = Infinity;\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t}\n\n\t}\n\n\t// shift all tracks such that clip begins at t=0\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t}\n\n\tclip.resetDuration();\n\n\treturn clip;\n\n}\n\nfunction makeClipAdditive( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\tif ( fps <= 0 ) fps = 30;\n\n\tconst numTracks = referenceClip.tracks.length;\n\tconst referenceTime = referenceFrame / fps;\n\n\t// Make each track's values relative to the values at the reference frame\n\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t// Skip this track if it's non-numeric\n\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t} );\n\n\t\tif ( targetTrack === undefined ) continue;\n\n\t\tlet referenceOffset = 0;\n\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t}\n\n\t\tlet targetOffset = 0;\n\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t}\n\n\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\tlet referenceValue;\n\n\t\t// Find the value to subtract out of the track\n\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else {\n\n\t\t\t// Interpolate to the reference value\n\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\treferenceValue = interpolant.resultBuffer.slice( startIndex, endIndex );\n\n\t\t}\n\n\t\t// Conjugate the quaternion\n\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t}\n\n\t\t// Subtract the reference value from all of the track values\n\n\t\tconst numTimes = targetTrack.times.length;\n\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart,\n\t\t\t\t\treferenceValue,\n\t\t\t\t\t0,\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\treturn targetClip;\n\n}\n\nconst AnimationUtils = {\n\tconvertArray: convertArray,\n\tisTypedArray: isTypedArray,\n\tgetKeyframeOrder: getKeyframeOrder,\n\tsortedArray: sortedArray,\n\tflattenJSON: flattenJSON,\n\tsubclip: subclip,\n\tmakeClipAdditive: makeClipAdditive\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = convertArray( times, this.TimeBufferType );\n\t\tthis.values = convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': convertArray( track.times, Array ),\n\t\t\t\t'values': convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = times.slice( from, to );\n\t\t\tthis.values = this.values.slice( from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = this.times.slice(),\n\t\t\tvalues = this.values.slice(),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = times.slice( 0, writeIndex );\n\t\t\tthis.values = values.slice( 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = this.times.slice();\n\t\tconst values = this.values.slice();\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\nQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name = '', duration = - 1, tracks = [], blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = getKeyframeOrder( times );\n\t\t\ttimes = sortedArray( times, 1, order );\n\t\t\tvalues = sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tflattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tflattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = /*@__PURE__*/ new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nLoader.DEFAULT_MATERIAL_NAME = '__DEFAULT';\n\nconst loading = {};\n\nclass HttpError extends Error {\n\n\tconstructor( message, response ) {\n\n\t\tsuper( message );\n\t\tthis.response = response;\n\n\t}\n\n}\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\n\t\t\t\t\t// Nginx needs X-File-Size check\n\t\t\t\t\t// https://serverfault.com/questions/482875/why-does-nginx-remove-content-length-header-for-chunked-content\n\t\t\t\t\tconst contentLength = response.headers.get( 'Content-Length' ) || response.headers.get( 'X-File-Size' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new HttpError( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\t\ttexture.colorSpace = SRGBColorSpace;\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tlet texData;\n\n\t\t\ttry {\n\n\t\t\t\ttexData = scope.parse( buffer );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) {\n\n\t\t\t\t\tonError( error );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( error );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.colorSpace !== undefined ) {\n\n\t\t\t\ttexture.colorSpace = texData.colorSpace;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.isHemisphereLight = true;\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( _projScreenMatrix$1 );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isSpotLight = true;\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay;\n\n\t\tthis.map = null;\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis.isPointLightShadow = true;\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isPointLight = true;\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay;\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\tthis.isDirectionalLightShadow = true;\n\n\t}\n\n}\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isDirectionalLight = true;\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isAmbientLight = true;\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.isSphericalHarmonics3 = true;\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isLightProbe = true;\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = MaterialLoader.createMaterialFromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.anisotropy !== undefined ) material.anisotropy = json.anisotropy;\n\t\tif ( json.anisotropyRotation !== undefined ) material.anisotropyRotation = json.anisotropyRotation;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.alphaHash !== undefined ) material.alphaHash = json.alphaHash;\n\t\tif ( json.depthFunc !== undefined ) material.depthFunc = json.depthFunc;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.blendSrc !== undefined ) material.blendSrc = json.blendSrc;\n\t\tif ( json.blendDst !== undefined ) material.blendDst = json.blendDst;\n\t\tif ( json.blendEquation !== undefined ) material.blendEquation = json.blendEquation;\n\t\tif ( json.blendSrcAlpha !== undefined ) material.blendSrcAlpha = json.blendSrcAlpha;\n\t\tif ( json.blendDstAlpha !== undefined ) material.blendDstAlpha = json.blendDstAlpha;\n\t\tif ( json.blendEquationAlpha !== undefined ) material.blendEquationAlpha = json.blendEquationAlpha;\n\t\tif ( json.blendColor !== undefined && material.blendColor !== undefined ) material.blendColor.setHex( json.blendColor );\n\t\tif ( json.blendAlpha !== undefined ) material.blendAlpha = json.blendAlpha;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== undefined ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\t\tif ( json.forceSinglePass !== undefined ) material.forceSinglePass = json.forceSinglePass;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.glslVersion !== undefined ) material.glslVersion = json.glslVersion;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.lights !== undefined ) material.lights = json.lights;\n\t\tif ( json.clipping !== undefined ) material.clipping = json.clipping;\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapRotation !== undefined ) material.envMapRotation.fromArray( json.envMapRotation );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.anisotropyMap !== undefined ) material.anisotropyMap = getTexture( json.anisotropyMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n\tstatic createMaterialFromType( type ) {\n\n\t\tconst materialLib = {\n\t\t\tShadowMaterial,\n\t\t\tSpriteMaterial,\n\t\t\tRawShaderMaterial,\n\t\t\tShaderMaterial,\n\t\t\tPointsMaterial,\n\t\t\tMeshPhysicalMaterial,\n\t\t\tMeshStandardMaterial,\n\t\t\tMeshPhongMaterial,\n\t\t\tMeshToonMaterial,\n\t\t\tMeshNormalMaterial,\n\t\t\tMeshLambertMaterial,\n\t\t\tMeshDepthMaterial,\n\t\t\tMeshDistanceMaterial,\n\t\t\tMeshBasicMaterial,\n\t\t\tMeshMatcapMaterial,\n\t\t\tLineDashedMaterial,\n\t\t\tLineBasicMaterial,\n\t\t\tMaterial\n\t\t};\n\n\t\treturn new materialLib[ type ]();\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isInstancedBufferGeometry = true;\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( new Error( 'THREE.ObjectLoader: Can\\'t load ' + url ) );\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\t\t\t\tif ( data.channel !== undefined ) texture.channel = data.channel;\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.internalFormat !== undefined ) texture.internalFormat = data.internalFormat;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.colorSpace !== undefined ) texture.colorSpace = data.colorSpace;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.generateMipmaps !== undefined ) texture.generateMipmaps = data.generateMipmaps;\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\t\t\t\tif ( data.compareFunction !== undefined ) texture.compareFunction = data.compareFunction;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.fog.name !== '' ) {\n\n\t\t\t\t\t\tobject.fog.name = data.fog.name;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.backgroundBlurriness !== undefined ) object.backgroundBlurriness = data.backgroundBlurriness;\n\t\t\t\tif ( data.backgroundIntensity !== undefined ) object.backgroundIntensity = data.backgroundIntensity;\n\t\t\t\tif ( data.backgroundRotation !== undefined ) object.backgroundRotation.fromArray( data.backgroundRotation );\n\n\t\t\t\tif ( data.environmentIntensity !== undefined ) object.environmentIntensity = data.environmentIntensity;\n\t\t\t\tif ( data.environmentRotation !== undefined ) object.environmentRotation.fromArray( data.environmentRotation );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'BatchedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new BatchedMesh( data.maxGeometryCount, data.maxVertexCount, data.maxIndexCount, material );\n\t\t\t\tobject.geometry = geometry;\n\t\t\t\tobject.perObjectFrustumCulled = data.perObjectFrustumCulled;\n\t\t\t\tobject.sortObjects = data.sortObjects;\n\n\t\t\t\tobject._drawRanges = data.drawRanges;\n\t\t\t\tobject._reservedRanges = data.reservedRanges;\n\n\t\t\t\tobject._visibility = data.visibility;\n\t\t\t\tobject._active = data.active;\n\t\t\t\tobject._bounds = data.bounds.map( bound => {\n\n\t\t\t\t\tconst box = new Box3();\n\t\t\t\t\tbox.min.fromArray( bound.boxMin );\n\t\t\t\t\tbox.max.fromArray( bound.boxMax );\n\n\t\t\t\t\tconst sphere = new Sphere();\n\t\t\t\t\tsphere.radius = bound.sphereRadius;\n\t\t\t\t\tsphere.center.fromArray( bound.sphereCenter );\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\t\t\tbox: box,\n\n\t\t\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\t\t\tsphere: sphere\n\t\t\t\t\t};\n\n\t\t\t\t} );\n\n\t\t\t\tobject._maxGeometryCount = data.maxGeometryCount;\n\t\t\t\tobject._maxVertexCount = data.maxVertexCount;\n\t\t\t\tobject._maxIndexCount = data.maxIndexCount;\n\n\t\t\t\tobject._geometryInitialized = data.geometryInitialized;\n\t\t\t\tobject._geometryCount = data.geometryCount;\n\n\t\t\t\tobject._matricesTexture = getTexture( data.matricesTexture.uuid );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.up !== undefined ) object.up.fromArray( data.up );\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance, level.hysteresis );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.isImageBitmapLoader = true;\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\t// If cached is a promise, wait for it to resolve\n\t\t\tif ( cached.then ) {\n\n\t\t\t\tcached.then( imageBitmap => {\n\n\t\t\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} ).catch( e => {\n\n\t\t\t\t\tif ( onError ) onError( e );\n\n\t\t\t\t} );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// If cached is not a promise (i.e., it's already an imageBitmap)\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tconst promise = fetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t\treturn imageBitmap;\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tCache.remove( url );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tCache.add( url, promise );\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nlet _context;\n\nclass AudioContext {\n\n\tstatic getContext() {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t}\n\n\tstatic setContext( value ) {\n\n\t\t_context = value;\n\n\t}\n\n}\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} ).catch( handleError );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\thandleError( e );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\tfunction handleError( e ) {\n\n\t\t\tif ( onError ) {\n\n\t\t\t\tonError( e );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( e );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemError( url );\n\n\t\t}\n\n\t}\n\n}\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tif ( this.source !== null ) {\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t}\n\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this._connected === false ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.isPlaying === true && this.source.detune !== undefined ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tconnect() {\n\n\t\tsuper.connect();\n\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones', 'map' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName );\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName );\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.warn( 'THREE.PropertyBinding: No target node found for track: ' + this.path + '.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map':\n\n\t\t\t\t\tif ( 'map' in targetObject ) {\n\n\t\t\t\t\t\ttargetObject = targetObject.map;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.map ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.map;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.isAnimationObjectGroup = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\tdeltaTime = 0;\n\n\t\t\t} else {\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _controlInterpolantsResultBuffer = new Float32Array( 1 );\n\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nlet _id = 0;\n\nclass UniformsGroup extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isUniformsGroup = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id ++ } );\n\n\t\tthis.name = '';\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.uniforms = [];\n\n\t}\n\n\tadd( uniform ) {\n\n\t\tthis.uniforms.push( uniform );\n\n\t\treturn this;\n\n\t}\n\n\tremove( uniform ) {\n\n\t\tconst index = this.uniforms.indexOf( uniform );\n\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\treturn this;\n\n\t}\n\n\tsetName( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.usage = source.usage;\n\n\t\tconst uniformsSource = source.uniforms;\n\n\t\tthis.uniforms.length = 0;\n\n\t\tfor ( let i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\tconst uniforms = Array.isArray( uniformsSource[ i ] ) ? uniformsSource[ i ] : [ uniformsSource[ i ] ];\n\n\t\t\tfor ( let j = 0; j < uniforms.length; j ++ ) {\n\n\t\t\t\tthis.uniforms.push( uniforms[ j ].clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.isGLBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _matrix = /*@__PURE__*/ new Matrix4();\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tsetFromXRController( controller ) {\n\n\t\t_matrix.identity().extractRotation( controller.matrixWorld );\n\n\t\tthis.ray.origin.setFromMatrixPosition( controller.matrixWorld );\n\t\tthis.ray.direction.set( 0, 0, - 1 ).applyMatrix4( _matrix );\n\n\t\treturn this;\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersect( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersect( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersect( object, raycaster, intersects, recursive ) {\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t}\n\n\tif ( recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersect( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * phi (the polar angle) is measured from the positive y-axis. The positive y-axis is up.\n * theta (the azimuthal angle) is measured from the positive z-axis.\n */\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$4 ).distanceTo( point );\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'SpotLightHelper';\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t// update the local matrix based on the parent and light target transforms\n\t\tif ( this.parent ) {\n\n\t\t\tthis.parent.updateWorldMatrix( true );\n\n\t\t\tthis.matrix\n\t\t\t\t.copy( this.parent.matrixWorld )\n\t\t\t\t.invert()\n\t\t\t\t.multiply( this.light.matrixWorld );\n\n\t\t} else {\n\n\t\t\tthis.matrix.copy( this.light.matrixWorld );\n\n\t\t}\n\n\t\tthis.matrixWorld.copy( this.light.matrixWorld );\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'HemisphereLightHelper';\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, sectors = 16, rings = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the sectors\n\n\t\tif ( sectors > 1 ) {\n\n\t\t\tfor ( let i = 0; i < sectors; i ++ ) {\n\n\t\t\t\tconst v = ( i / sectors ) * ( Math.PI * 2 );\n\n\t\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( x, 0, z );\n\n\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// create the rings\n\n\t\tfor ( let i = 0; i < rings; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / rings * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'DirectionalLightHelper';\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2' );\n\t\taddLine( 'n2', 'n4' );\n\t\taddLine( 'n4', 'n3' );\n\t\taddLine( 'n3', 'n1' );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2' );\n\t\taddLine( 'f2', 'f4' );\n\t\taddLine( 'f4', 'f3' );\n\t\taddLine( 'f3', 'f1' );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1' );\n\t\taddLine( 'n2', 'f2' );\n\t\taddLine( 'n3', 'f3' );\n\t\taddLine( 'n4', 'f4' );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1' );\n\t\taddLine( 'p', 'n2' );\n\t\taddLine( 'p', 'n3' );\n\t\taddLine( 'p', 'n4' );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2' );\n\t\taddLine( 'u2', 'u3' );\n\t\taddLine( 'u3', 'u1' );\n\n\t\t// target\n\n\t\taddLine( 'c', 't' );\n\t\taddLine( 'p', 'c' );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2' );\n\t\taddLine( 'cn3', 'cn4' );\n\n\t\taddLine( 'cf1', 'cf2' );\n\t\taddLine( 'cf3', 'cf4' );\n\n\t\tfunction addLine( a, b ) {\n\n\t\t\taddPoint( a );\n\t\t\taddPoint( b );\n\n\t\t}\n\n\t\tfunction addPoint( id ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t}\n\n\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t// near\n\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t// far\n\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t// sides\n\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t// cone\n\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t// up\n\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t// target\n\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t// cross\n\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\tcolorAttribute.needsUpdate = true;\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tthis.position.set( 0, 0, 0 );\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, 1 );\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tthis.translateZ( - this.plane.constant );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.line.geometry.dispose();\n\t\tthis.line.material.dispose();\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget { // @deprecated, r162\n\n\tconstructor( width = 1, height = 1, count = 1, options = {} ) {\n\n\t\tconsole.warn( 'THREE.WebGLMultipleRenderTargets has been deprecated and will be removed in r172. Use THREE.WebGLRenderTarget and set the \"count\" parameter to enable MRT.' );\n\n\t\tsuper( width, height, { ...options, count } );\n\n\t\tthis.isWebGLMultipleRenderTargets = true;\n\n\t}\n\n\tget texture() {\n\n\t\treturn this.textures;\n\n\t}\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AgXToneMapping, AlphaFormat, AlwaysCompare, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AnimationAction, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, AttachedBindMode, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, BatchedMesh, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedArrayTexture, CompressedCubeTexture, CompressedTexture, CompressedTextureLoader, ConeGeometry, ConstantAlphaFactor, ConstantColorFactor, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DetachedBindMode, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DisplayP3ColorSpace, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualCompare, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, FloatType, Fog, FogExp2, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterCompare, GreaterDepth, GreaterEqualCompare, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry, Layers, LessCompare, LessDepth, LessEqualCompare, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearDisplayP3ColorSpace, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, LinearTransfer, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeutralToneMapping, NeverCompare, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualCompare, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry, OneFactor, OneMinusConstantAlphaFactor, OneMinusConstantColorFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, P3Primaries, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, Path, PerspectiveCamera, Plane, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RED_GREEN_RGTC2_Format, RED_RGTC1_Format, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBFormat, RGB_BPTC_SIGNED_Format, RGB_BPTC_UNSIGNED_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, Rec709Primaries, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RenderTarget, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry, SIGNED_RED_GREEN_RGTC2_Format, SIGNED_RED_RGTC1_Format, SRGBColorSpace, SRGBTransfer, Scene, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry, Texture, TextureLoader, TorusGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedInt5999Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCoordinateSystem, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLRenderTarget, WebGLRenderer, WebGLUtils, WebGPUCoordinateSystem, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, createCanvasElement };\n","import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3,\n\tPlane,\n\tRay,\n\tMathUtils\n} from 'three';\n\n// OrbitControls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\nconst _ray = new Ray();\nconst _plane = new Plane();\nconst TILT_LIMIT = Math.cos( 70 * MathUtils.DEG2RAD );\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// Sets the 3D cursor (similar to Blender), from which the maxTargetRadius takes effect\n\t\tthis.cursor = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// Limit camera target within a spherical area around the cursor\n\t\tthis.minTargetRadius = 0;\n\t\tthis.maxTargetRadius = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\t\tthis.zoomToCursor = false;\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.getDistance = function () {\n\n\t\t\treturn this.object.position.distanceTo( this.target );\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.stopListenToKeyEvents = function () {\n\n\t\t\tthis._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = null;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\t\t\tconst lastTargetPosition = new Vector3();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update( deltaTime = null ) {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle( deltaTime ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\t// Limit the target distance from the cursor to create a sphere around the center of interest\n\t\t\t\tscope.target.sub( scope.cursor );\n\t\t\t\tscope.target.clampLength( scope.minTargetRadius, scope.maxTargetRadius );\n\t\t\t\tscope.target.add( scope.cursor );\n\n\t\t\t\tlet zoomChanged = false;\n\t\t\t\t// adjust the camera position based on zoom only if we're not zooming to the cursor or if it's an ortho camera\n\t\t\t\t// we adjust zoom later in these cases\n\t\t\t\tif ( scope.zoomToCursor && performCursorZoom || scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\tspherical.radius = clampDistance( spherical.radius );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst prevRadius = spherical.radius;\n\t\t\t\t\tspherical.radius = clampDistance( spherical.radius * scale );\n\t\t\t\t\tzoomChanged = prevRadius != spherical.radius;\n\n\t\t\t\t}\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\t// adjust camera position\n\t\t\t\tif ( scope.zoomToCursor && performCursorZoom ) {\n\n\t\t\t\t\tlet newRadius = null;\n\t\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t\t// move the camera down the pointer ray\n\t\t\t\t\t\t// this method avoids floating point error\n\t\t\t\t\t\tconst prevRadius = offset.length();\n\t\t\t\t\t\tnewRadius = clampDistance( prevRadius * scale );\n\n\t\t\t\t\t\tconst radiusDelta = prevRadius - newRadius;\n\t\t\t\t\t\tscope.object.position.addScaledVector( dollyDirection, radiusDelta );\n\t\t\t\t\t\tscope.object.updateMatrixWorld();\n\n\t\t\t\t\t\tzoomChanged = !! radiusDelta;\n\n\t\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t\t// adjust the ortho camera position based on zoom changes\n\t\t\t\t\t\tconst mouseBefore = new Vector3( mouse.x, mouse.y, 0 );\n\t\t\t\t\t\tmouseBefore.unproject( scope.object );\n\n\t\t\t\t\t\tconst prevZoom = scope.object.zoom;\n\t\t\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / scale ) );\n\t\t\t\t\t\tscope.object.updateProjectionMatrix();\n\n\t\t\t\t\t\tzoomChanged = prevZoom !== scope.object.zoom;\n\n\t\t\t\t\t\tconst mouseAfter = new Vector3( mouse.x, mouse.y, 0 );\n\t\t\t\t\t\tmouseAfter.unproject( scope.object );\n\n\t\t\t\t\t\tscope.object.position.sub( mouseAfter ).add( mouseBefore );\n\t\t\t\t\t\tscope.object.updateMatrixWorld();\n\n\t\t\t\t\t\tnewRadius = offset.length();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled.' );\n\t\t\t\t\t\tscope.zoomToCursor = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// handle the placement of the target\n\t\t\t\t\tif ( newRadius !== null ) {\n\n\t\t\t\t\t\tif ( this.screenSpacePanning ) {\n\n\t\t\t\t\t\t\t// position the orbit target in front of the new camera position\n\t\t\t\t\t\t\tscope.target.set( 0, 0, - 1 )\n\t\t\t\t\t\t\t\t.transformDirection( scope.object.matrix )\n\t\t\t\t\t\t\t\t.multiplyScalar( newRadius )\n\t\t\t\t\t\t\t\t.add( scope.object.position );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// get the ray and translation plane to compute target\n\t\t\t\t\t\t\t_ray.origin.copy( scope.object.position );\n\t\t\t\t\t\t\t_ray.direction.set( 0, 0, - 1 ).transformDirection( scope.object.matrix );\n\n\t\t\t\t\t\t\t// if the camera is 20 degrees above the horizon then don't adjust the focus target to avoid\n\t\t\t\t\t\t\t// extremely large values\n\t\t\t\t\t\t\tif ( Math.abs( scope.object.up.dot( _ray.direction ) ) < TILT_LIMIT ) {\n\n\t\t\t\t\t\t\t\tobject.lookAt( scope.target );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t_plane.setFromNormalAndCoplanarPoint( scope.object.up, scope.target );\n\t\t\t\t\t\t\t\t_ray.intersectPlane( _plane, scope.target );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\tconst prevZoom = scope.object.zoom;\n\t\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / scale ) );\n\n\t\t\t\t\tif ( prevZoom !== scope.object.zoom ) {\n\n\t\t\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\t\t\tzoomChanged = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\t\t\t\tperformCursorZoom = false;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ||\n\t\t\t\t\tlastTargetPosition.distanceToSquared( scope.target ) > EPS ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tlastTargetPosition.copy( scope.target );\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerUp );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t\tconst document = scope.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\t\tdocument.removeEventListener( 'keydown', interceptControlDown, { capture: true } );\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\t\t\t\tscope._domElementKeyEvents = null;\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tconst dollyDirection = new Vector3();\n\t\tconst mouse = new Vector2();\n\t\tlet performCursorZoom = false;\n\n\t\tconst pointers = [];\n\t\tconst pointerPositions = {};\n\n\t\tlet controlActive = false;\n\n\t\tfunction getAutoRotationAngle( deltaTime ) {\n\n\t\t\tif ( deltaTime !== null ) {\n\n\t\t\t\treturn ( 2 * Math.PI / 60 * scope.autoRotateSpeed ) * deltaTime;\n\n\t\t\t} else {\n\n\t\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getZoomScale( delta ) {\n\n\t\t\tconst normalizedDelta = Math.abs( delta * 0.01 );\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed * normalizedDelta );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera || scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera || scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateZoomParameters( x, y ) {\n\n\t\t\tif ( ! scope.zoomToCursor ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tperformCursorZoom = true;\n\n\t\t\tconst rect = scope.domElement.getBoundingClientRect();\n\t\t\tconst dx = x - rect.left;\n\t\t\tconst dy = y - rect.top;\n\t\t\tconst w = rect.width;\n\t\t\tconst h = rect.height;\n\n\t\t\tmouse.x = ( dx / w ) * 2 - 1;\n\t\t\tmouse.y = - ( dy / h ) * 2 + 1;\n\n\t\t\tdollyDirection.set( mouse.x, mouse.y, 1 ).unproject( scope.object ).sub( scope.object.position ).normalize();\n\n\t\t}\n\n\t\tfunction clampDistance( dist ) {\n\n\t\t\treturn Math.max( scope.minDistance, Math.min( scope.maxDistance, dist ) );\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tupdateZoomParameters( event.clientX, event.clientX );\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale( dollyDelta.y ) );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale( dollyDelta.y ) );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tupdateZoomParameters( event.clientX, event.clientY );\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale( event.deltaY ) );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale( event.deltaY ) );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\trotateStart.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanStart.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan( event );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( pointers.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tconst centerX = ( event.pageX + position.x ) * 0.5;\n\t\t\tconst centerY = ( event.pageY + position.y ) * 0.5;\n\n\t\t\tupdateZoomParameters( centerX, centerY );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( isTrackingPointer( event ) ) return;\n\n\t\t\t//\n\n\t\t\taddPointer( event );\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchStart( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseDown( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchMove( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseMove( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t\tremovePointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tscope.domElement.releasePointerCapture( event.pointerId );\n\n\t\t\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tconst pointerId = pointers[ 0 ];\n\t\t\t\t\tconst position = pointerPositions[ pointerId ];\n\n\t\t\t\t\t// minimal placeholder event - allows state correction on pointer-up\n\t\t\t\t\tonTouchStart( { pointerId: pointerId, pageX: position.x, pageY: position.y } );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( customWheelEvent( event ) );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction customWheelEvent( event ) {\n\n\t\t\tconst mode = event.deltaMode;\n\n\t\t\t// minimal wheel event altered to meet delta-zoom demand\n\t\t\tconst newEvent = {\n\t\t\t\tclientX: event.clientX,\n\t\t\t\tclientY: event.clientY,\n\t\t\t\tdeltaY: event.deltaY,\n\t\t\t};\n\n\t\t\tswitch ( mode ) {\n\n\t\t\t\tcase 1: // LINE_MODE\n\t\t\t\t\tnewEvent.deltaY *= 16;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2: // PAGE_MODE\n\t\t\t\t\tnewEvent.deltaY *= 100;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\t// detect if event was triggered by pinching\n\t\t\tif ( event.ctrlKey && ! controlActive ) {\n\n\t\t\t\tnewEvent.deltaY *= 10;\n\n\t\t\t}\n\n\t\t\treturn newEvent;\n\n\t\t}\n\n\t\tfunction interceptControlDown( event ) {\n\n\t\t\tif ( event.key === 'Control' ) {\n\n\t\t\t\tcontrolActive = true;\n\n\n\t\t\t\tconst document = scope.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\t\t\tdocument.addEventListener( 'keyup', interceptControlUp, { passive: true, capture: true } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction interceptControlUp( event ) {\n\n\t\t\tif ( event.key === 'Control' ) {\n\n\t\t\t\tcontrolActive = false;\n\n\n\t\t\t\tconst document = scope.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\t\t\tdocument.removeEventListener( 'keyup', interceptControlUp, { passive: true, capture: true } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tfunction addPointer( event ) {\n\n\t\t\tpointers.push( event.pointerId );\n\n\t\t}\n\n\t\tfunction removePointer( event ) {\n\n\t\t\tdelete pointerPositions[ event.pointerId ];\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ] == event.pointerId ) {\n\n\t\t\t\t\tpointers.splice( i, 1 );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction isTrackingPointer( event ) {\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ] == event.pointerId ) return true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\tfunction trackPointer( event ) {\n\n\t\t\tlet position = pointerPositions[ event.pointerId ];\n\n\t\t\tif ( position === undefined ) {\n\n\t\t\t\tposition = new Vector2();\n\t\t\t\tpointerPositions[ event.pointerId ] = position;\n\n\t\t\t}\n\n\t\t\tposition.set( event.pageX, event.pageY );\n\n\t\t}\n\n\t\tfunction getSecondPointerPosition( event ) {\n\n\t\t\tconst pointerId = ( event.pointerId === pointers[ 0 ] ) ? pointers[ 1 ] : pointers[ 0 ];\n\n\t\t\treturn pointerPositions[ pointerId ];\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'pointercancel', onPointerUp );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\tconst document = scope.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\tdocument.addEventListener( 'keydown', interceptControlDown, { passive: true, capture: true } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\nexport { OrbitControls };\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nexport default function(color, forceCSSHex) {\n  const colorFormat = color.__state.conversionName.toString();\n\n  const r = Math.round(color.r);\n  const g = Math.round(color.g);\n  const b = Math.round(color.b);\n  const a = color.a;\n  const h = Math.round(color.h);\n  const s = color.s.toFixed(1);\n  const v = color.v.toFixed(1);\n\n  if (forceCSSHex || (colorFormat === 'THREE_CHAR_HEX') || (colorFormat === 'SIX_CHAR_HEX')) {\n    let str = color.hex.toString(16);\n    while (str.length < 6) {\n      str = '0' + str;\n    }\n    return '#' + str;\n  } else if (colorFormat === 'CSS_RGB') {\n    return 'rgb(' + r + ',' + g + ',' + b + ')';\n  } else if (colorFormat === 'CSS_RGBA') {\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n  } else if (colorFormat === 'HEX') {\n    return '0x' + color.hex.toString(16);\n  } else if (colorFormat === 'RGB_ARRAY') {\n    return '[' + r + ',' + g + ',' + b + ']';\n  } else if (colorFormat === 'RGBA_ARRAY') {\n    return '[' + r + ',' + g + ',' + b + ',' + a + ']';\n  } else if (colorFormat === 'RGB_OBJ') {\n    return '{r:' + r + ',g:' + g + ',b:' + b + '}';\n  } else if (colorFormat === 'RGBA_OBJ') {\n    return '{r:' + r + ',g:' + g + ',b:' + b + ',a:' + a + '}';\n  } else if (colorFormat === 'HSV_OBJ') {\n    return '{h:' + h + ',s:' + s + ',v:' + v + '}';\n  } else if (colorFormat === 'HSVA_OBJ') {\n    return '{h:' + h + ',s:' + s + ',v:' + v + ',a:' + a + '}';\n  }\n\n  return 'unknown format';\n}\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nconst ARR_EACH = Array.prototype.forEach;\nconst ARR_SLICE = Array.prototype.slice;\n\n/**\n * Band-aid methods for things that should be a lot easier in JavaScript.\n * Implementation and structure inspired by underscore.js\n * http://documentcloud.github.com/underscore/\n */\n\nconst Common = {\n  BREAK: {},\n\n  extend: function(target) {\n    this.each(ARR_SLICE.call(arguments, 1), function(obj) {\n      const keys = this.isObject(obj) ? Object.keys(obj) : [];\n      keys.forEach(function(key) {\n        if (!this.isUndefined(obj[key])) {\n          target[key] = obj[key];\n        }\n      }.bind(this));\n    }, this);\n\n    return target;\n  },\n\n  defaults: function(target) {\n    this.each(ARR_SLICE.call(arguments, 1), function(obj) {\n      const keys = this.isObject(obj) ? Object.keys(obj) : [];\n      keys.forEach(function(key) {\n        if (this.isUndefined(target[key])) {\n          target[key] = obj[key];\n        }\n      }.bind(this));\n    }, this);\n\n    return target;\n  },\n\n  compose: function() {\n    const toCall = ARR_SLICE.call(arguments);\n    return function() {\n      let args = ARR_SLICE.call(arguments);\n      for (let i = toCall.length - 1; i >= 0; i--) {\n        args = [toCall[i].apply(this, args)];\n      }\n      return args[0];\n    };\n  },\n\n  each: function(obj, itr, scope) {\n    if (!obj) {\n      return;\n    }\n\n    if (ARR_EACH && obj.forEach && obj.forEach === ARR_EACH) {\n      obj.forEach(itr, scope);\n    } else if (obj.length === obj.length + 0) { // Is number but not NaN\n      let key;\n      let l;\n      for (key = 0, l = obj.length; key < l; key++) {\n        if (key in obj && itr.call(scope, obj[key], key) === this.BREAK) {\n          return;\n        }\n      }\n    } else {\n      for (const key in obj) {\n        if (itr.call(scope, obj[key], key) === this.BREAK) {\n          return;\n        }\n      }\n    }\n  },\n\n  defer: function(fnc) {\n    setTimeout(fnc, 0);\n  },\n\n  // if the function is called repeatedly, wait until threshold passes until we execute the function\n  debounce: function(func, threshold, callImmediately) {\n    let timeout;\n\n    return function() {\n      const obj = this;\n      const args = arguments;\n      function delayed() {\n        timeout = null;\n        if (!callImmediately) func.apply(obj, args);\n      }\n\n      const callNow = callImmediately || !timeout;\n\n      clearTimeout(timeout);\n      timeout = setTimeout(delayed, threshold);\n\n      if (callNow) {\n        func.apply(obj, args);\n      }\n    };\n  },\n\n  toArray: function(obj) {\n    if (obj.toArray) return obj.toArray();\n    return ARR_SLICE.call(obj);\n  },\n\n  isUndefined: function(obj) {\n    return obj === undefined;\n  },\n\n  isNull: function(obj) {\n    return obj === null;\n  },\n\n  isNaN: function(obj) {\n    return isNaN(obj);\n  },\n\n  isArray: Array.isArray || function(obj) {\n    return obj.constructor === Array;\n  },\n\n  isObject: function(obj) {\n    return obj === Object(obj);\n  },\n\n  isNumber: function(obj) {\n    return obj === obj + 0;\n  },\n\n  isString: function(obj) {\n    return obj === obj + '';\n  },\n\n  isBoolean: function(obj) {\n    return obj === false || obj === true;\n  },\n\n  isFunction: function(obj) {\n    return obj instanceof Function;\n  }\n\n};\n\nexport default Common;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport toString from './toString';\nimport common from '../utils/common';\n\nconst INTERPRETATIONS = [\n  // Strings\n  {\n    litmus: common.isString,\n    conversions: {\n      THREE_CHAR_HEX: {\n        read: function(original) {\n          const test = original.match(/^#([A-F0-9])([A-F0-9])([A-F0-9])$/i);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'HEX',\n            hex: parseInt(\n              '0x' +\n              test[1].toString() + test[1].toString() +\n              test[2].toString() + test[2].toString() +\n              test[3].toString() + test[3].toString(), 0\n            )\n          };\n        },\n\n        write: toString\n      },\n\n      SIX_CHAR_HEX: {\n        read: function(original) {\n          const test = original.match(/^#([A-F0-9]{6})$/i);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'HEX',\n            hex: parseInt('0x' + test[1].toString(), 0)\n          };\n        },\n\n        write: toString\n      },\n\n      CSS_RGB: {\n        read: function(original) {\n          const test = original.match(/^rgb\\(\\s*(\\S+)\\s*,\\s*(\\S+)\\s*,\\s*(\\S+)\\s*\\)/);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'RGB',\n            r: parseFloat(test[1]),\n            g: parseFloat(test[2]),\n            b: parseFloat(test[3])\n          };\n        },\n\n        write: toString\n      },\n\n      CSS_RGBA: {\n        read: function(original) {\n          const test = original.match(/^rgba\\(\\s*(\\S+)\\s*,\\s*(\\S+)\\s*,\\s*(\\S+)\\s*,\\s*(\\S+)\\s*\\)/);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'RGB',\n            r: parseFloat(test[1]),\n            g: parseFloat(test[2]),\n            b: parseFloat(test[3]),\n            a: parseFloat(test[4])\n          };\n        },\n\n        write: toString\n      }\n    }\n  },\n\n  // Numbers\n  {\n    litmus: common.isNumber,\n\n    conversions: {\n\n      HEX: {\n        read: function(original) {\n          return {\n            space: 'HEX',\n            hex: original,\n            conversionName: 'HEX'\n          };\n        },\n\n        write: function(color) {\n          return color.hex;\n        }\n      }\n\n    }\n\n  },\n\n  // Arrays\n  {\n    litmus: common.isArray,\n    conversions: {\n      RGB_ARRAY: {\n        read: function(original) {\n          if (original.length !== 3) {\n            return false;\n          }\n\n          return {\n            space: 'RGB',\n            r: original[0],\n            g: original[1],\n            b: original[2]\n          };\n        },\n\n        write: function(color) {\n          return [color.r, color.g, color.b];\n        }\n      },\n\n      RGBA_ARRAY: {\n        read: function(original) {\n          if (original.length !== 4) return false;\n          return {\n            space: 'RGB',\n            r: original[0],\n            g: original[1],\n            b: original[2],\n            a: original[3]\n          };\n        },\n\n        write: function(color) {\n          return [color.r, color.g, color.b, color.a];\n        }\n      }\n    }\n  },\n\n  // Objects\n  {\n    litmus: common.isObject,\n    conversions: {\n\n      RGBA_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.r) &&\n            common.isNumber(original.g) &&\n            common.isNumber(original.b) &&\n            common.isNumber(original.a)) {\n            return {\n              space: 'RGB',\n              r: original.r,\n              g: original.g,\n              b: original.b,\n              a: original.a\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            r: color.r,\n            g: color.g,\n            b: color.b,\n            a: color.a\n          };\n        }\n      },\n\n      RGB_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.r) &&\n            common.isNumber(original.g) &&\n            common.isNumber(original.b)) {\n            return {\n              space: 'RGB',\n              r: original.r,\n              g: original.g,\n              b: original.b\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            r: color.r,\n            g: color.g,\n            b: color.b\n          };\n        }\n      },\n\n      HSVA_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.h) &&\n            common.isNumber(original.s) &&\n            common.isNumber(original.v) &&\n            common.isNumber(original.a)) {\n            return {\n              space: 'HSV',\n              h: original.h,\n              s: original.s,\n              v: original.v,\n              a: original.a\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            h: color.h,\n            s: color.s,\n            v: color.v,\n            a: color.a\n          };\n        }\n      },\n\n      HSV_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.h) &&\n            common.isNumber(original.s) &&\n            common.isNumber(original.v)) {\n            return {\n              space: 'HSV',\n              h: original.h,\n              s: original.s,\n              v: original.v\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            h: color.h,\n            s: color.s,\n            v: color.v\n          };\n        }\n      }\n    }\n  }\n];\n\nlet result;\nlet toReturn;\n\nconst interpret = function() {\n  toReturn = false;\n\n  const original = arguments.length > 1 ? common.toArray(arguments) : arguments[0];\n  common.each(INTERPRETATIONS, function(family) {\n    if (family.litmus(original)) {\n      common.each(family.conversions, function(conversion, conversionName) {\n        result = conversion.read(original);\n\n        if (toReturn === false && result !== false) {\n          toReturn = result;\n          result.conversionName = conversionName;\n          result.conversion = conversion;\n          return common.BREAK;\n        }\n      });\n\n      return common.BREAK;\n    }\n  });\n\n  return toReturn;\n};\n\nexport default interpret;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nlet tmpComponent;\n\nconst ColorMath = {\n  hsv_to_rgb: function(h, s, v) {\n    const hi = Math.floor(h / 60) % 6;\n\n    const f = h / 60 - Math.floor(h / 60);\n    const p = v * (1.0 - s);\n    const q = v * (1.0 - (f * s));\n    const t = v * (1.0 - ((1.0 - f) * s));\n\n    const c = [\n      [v, t, p],\n      [q, v, p],\n      [p, v, t],\n      [p, q, v],\n      [t, p, v],\n      [v, p, q]\n    ][hi];\n\n    return {\n      r: c[0] * 255,\n      g: c[1] * 255,\n      b: c[2] * 255\n    };\n  },\n\n  rgb_to_hsv: function(r, g, b) {\n    const min = Math.min(r, g, b);\n    const max = Math.max(r, g, b);\n    const delta = max - min;\n    let h;\n    let s;\n\n    if (max !== 0) {\n      s = delta / max;\n    } else {\n      return {\n        h: NaN,\n        s: 0,\n        v: 0\n      };\n    }\n\n    if (r === max) {\n      h = (g - b) / delta;\n    } else if (g === max) {\n      h = 2 + (b - r) / delta;\n    } else {\n      h = 4 + (r - g) / delta;\n    }\n    h /= 6;\n    if (h < 0) {\n      h += 1;\n    }\n\n    return {\n      h: h * 360,\n      s: s,\n      v: max / 255\n    };\n  },\n\n  rgb_to_hex: function(r, g, b) {\n    let hex = this.hex_with_component(0, 2, r);\n    hex = this.hex_with_component(hex, 1, g);\n    hex = this.hex_with_component(hex, 0, b);\n    return hex;\n  },\n\n  component_from_hex: function(hex, componentIndex) {\n    return (hex >> (componentIndex * 8)) & 0xFF;\n  },\n\n  hex_with_component: function(hex, componentIndex, value) {\n    return value << (tmpComponent = componentIndex * 8) | (hex & ~(0xFF << tmpComponent));\n  }\n};\n\nexport default ColorMath;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport interpret from './interpret';\nimport math from './math';\nimport colorToString from './toString';\nimport common from '../utils/common';\n\nclass Color {\n  constructor() {\n    this.__state = interpret.apply(this, arguments);\n\n    if (this.__state === false) {\n      throw new Error('Failed to interpret color arguments');\n    }\n\n    this.__state.a = this.__state.a || 1;\n  }\n\n  toString() {\n    return colorToString(this);\n  }\n\n  toHexString() {\n    return colorToString(this, true);\n  }\n\n  toOriginal() {\n    return this.__state.conversion.write(this);\n  }\n}\n\nfunction defineRGBComponent(target, component, componentHexIndex) {\n  Object.defineProperty(target, component, {\n    get: function() {\n      if (this.__state.space === 'RGB') {\n        return this.__state[component];\n      }\n\n      Color.recalculateRGB(this, component, componentHexIndex);\n\n      return this.__state[component];\n    },\n\n    set: function(v) {\n      if (this.__state.space !== 'RGB') {\n        Color.recalculateRGB(this, component, componentHexIndex);\n        this.__state.space = 'RGB';\n      }\n\n      this.__state[component] = v;\n    }\n  });\n}\n\nfunction defineHSVComponent(target, component) {\n  Object.defineProperty(target, component, {\n    get: function() {\n      if (this.__state.space === 'HSV') {\n        return this.__state[component];\n      }\n\n      Color.recalculateHSV(this);\n\n      return this.__state[component];\n    },\n\n    set: function(v) {\n      if (this.__state.space !== 'HSV') {\n        Color.recalculateHSV(this);\n        this.__state.space = 'HSV';\n      }\n\n      this.__state[component] = v;\n    }\n  });\n}\n\n\nColor.recalculateRGB = function(color, component, componentHexIndex) {\n  if (color.__state.space === 'HEX') {\n    color.__state[component] = math.component_from_hex(color.__state.hex, componentHexIndex);\n  } else if (color.__state.space === 'HSV') {\n    common.extend(color.__state, math.hsv_to_rgb(color.__state.h, color.__state.s, color.__state.v));\n  } else {\n    throw new Error('Corrupted color state');\n  }\n};\n\nColor.recalculateHSV = function(color) {\n  const result = math.rgb_to_hsv(color.r, color.g, color.b);\n\n  common.extend(color.__state,\n    {\n      s: result.s,\n      v: result.v\n    });\n\n  if (!common.isNaN(result.h)) {\n    color.__state.h = result.h;\n  } else if (common.isUndefined(color.__state.h)) {\n    color.__state.h = 0;\n  }\n};\n\nColor.COMPONENTS = ['r', 'g', 'b', 'h', 's', 'v', 'hex', 'a'];\n\ndefineRGBComponent(Color.prototype, 'r', 2);\ndefineRGBComponent(Color.prototype, 'g', 1);\ndefineRGBComponent(Color.prototype, 'b', 0);\n\ndefineHSVComponent(Color.prototype, 'h');\ndefineHSVComponent(Color.prototype, 's');\ndefineHSVComponent(Color.prototype, 'v');\n\nObject.defineProperty(Color.prototype, 'a', {\n  get: function() {\n    return this.__state.a;\n  },\n\n  set: function(v) {\n    this.__state.a = v;\n  }\n});\n\nObject.defineProperty(Color.prototype, 'hex', {\n  get: function() {\n    if (this.__state.space !== 'HEX') {\n      this.__state.hex = math.rgb_to_hex(this.r, this.g, this.b);\n      this.__state.space = 'HEX';\n    }\n\n    return this.__state.hex;\n  },\n\n  set: function(v) {\n    this.__state.space = 'HEX';\n    this.__state.hex = v;\n  }\n});\n\nexport default Color;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\n/**\n * @class An \"abstract\" class that represents a given property of an object.\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass Controller {\n  constructor(object, property) {\n    this.initialValue = object[property];\n\n    /**\n     * Those who extend this class will put their DOM elements in here.\n     * @type {DOMElement}\n     */\n    this.domElement = document.createElement('div');\n\n    /**\n     * The object to manipulate\n     * @type {Object}\n     */\n    this.object = object;\n\n    /**\n     * The name of the property to manipulate\n     * @type {String}\n     */\n    this.property = property;\n\n    /**\n     * The function to be called on change.\n     * @type {Function}\n     * @ignore\n     */\n    this.__onChange = undefined;\n\n    /**\n     * The function to be called on finishing change.\n     * @type {Function}\n     * @ignore\n     */\n    this.__onFinishChange = undefined;\n  }\n\n  /**\n   * Specify that a function fire every time someone changes the value with\n   * this Controller.\n   *\n   * @param {Function} fnc This function will be called whenever the value\n   * is modified via this Controller.\n   * @returns {Controller} this\n   */\n  onChange(fnc) {\n    this.__onChange = fnc;\n    return this;\n  }\n\n  /**\n   * Specify that a function fire every time someone \"finishes\" changing\n   * the value wih this Controller. Useful for values that change\n   * incrementally like numbers or strings.\n   *\n   * @param {Function} fnc This function will be called whenever\n   * someone \"finishes\" changing the value via this Controller.\n   * @returns {Controller} this\n   */\n  onFinishChange(fnc) {\n    this.__onFinishChange = fnc;\n    return this;\n  }\n\n  /**\n   * Change the value of <code>object[property]</code>\n   *\n   * @param {Object} newValue The new value of <code>object[property]</code>\n   */\n  setValue(newValue) {\n    this.object[this.property] = newValue;\n    if (this.__onChange) {\n      this.__onChange.call(this, newValue);\n    }\n\n    this.updateDisplay();\n    return this;\n  }\n\n  /**\n   * Gets the value of <code>object[property]</code>\n   *\n   * @returns {Object} The current value of <code>object[property]</code>\n   */\n  getValue() {\n    return this.object[this.property];\n  }\n\n  /**\n   * Refreshes the visual display of a Controller in order to keep sync\n   * with the object's current value.\n   * @returns {Controller} this\n   */\n  updateDisplay() {\n    return this;\n  }\n\n  /**\n   * @returns {boolean} true if the value has deviated from initialValue\n   */\n  isModified() {\n    return this.initialValue !== this.getValue();\n  }\n}\n\nexport default Controller;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport common from '../utils/common';\n\nconst EVENT_MAP = {\n  HTMLEvents: ['change'],\n  MouseEvents: ['click', 'mousemove', 'mousedown', 'mouseup', 'mouseover'],\n  KeyboardEvents: ['keydown']\n};\n\nconst EVENT_MAP_INV = {};\ncommon.each(EVENT_MAP, function(v, k) {\n  common.each(v, function(e) {\n    EVENT_MAP_INV[e] = k;\n  });\n});\n\nconst CSS_VALUE_PIXELS = /(\\d+(\\.\\d+)?)px/;\n\nfunction cssValueToPixels(val) {\n  if (val === '0' || common.isUndefined(val)) {\n    return 0;\n  }\n\n  const match = val.match(CSS_VALUE_PIXELS);\n\n  if (!common.isNull(match)) {\n    return parseFloat(match[1]);\n  }\n\n  // TODO ...ems? %?\n\n  return 0;\n}\n\n/**\n * @namespace\n * @member dat.dom\n */\nconst dom = {\n\n  /**\n   *\n   * @param elem\n   * @param selectable\n   */\n  makeSelectable: function(elem, selectable) {\n    if (elem === undefined || elem.style === undefined) return;\n\n    elem.onselectstart = selectable ? function() {\n      return false;\n    } : function() {\n    };\n\n    elem.style.MozUserSelect = selectable ? 'auto' : 'none';\n    elem.style.KhtmlUserSelect = selectable ? 'auto' : 'none';\n    elem.unselectable = selectable ? 'on' : 'off';\n  },\n\n  /**\n   *\n   * @param elem\n   * @param horizontal\n   * @param vert\n   */\n  makeFullscreen: function(elem, hor, vert) {\n    let vertical = vert;\n    let horizontal = hor;\n\n    if (common.isUndefined(horizontal)) {\n      horizontal = true;\n    }\n\n    if (common.isUndefined(vertical)) {\n      vertical = true;\n    }\n\n    elem.style.position = 'absolute';\n\n    if (horizontal) {\n      elem.style.left = 0;\n      elem.style.right = 0;\n    }\n    if (vertical) {\n      elem.style.top = 0;\n      elem.style.bottom = 0;\n    }\n  },\n\n  /**\n   *\n   * @param elem\n   * @param eventType\n   * @param params\n   */\n  fakeEvent: function(elem, eventType, pars, aux) {\n    const params = pars || {};\n    const className = EVENT_MAP_INV[eventType];\n    if (!className) {\n      throw new Error('Event type ' + eventType + ' not supported.');\n    }\n    const evt = document.createEvent(className);\n    switch (className) {\n      case 'MouseEvents':\n      {\n        const clientX = params.x || params.clientX || 0;\n        const clientY = params.y || params.clientY || 0;\n        evt.initMouseEvent(eventType, params.bubbles || false,\n          params.cancelable || true, window, params.clickCount || 1,\n          0, // screen X\n          0, // screen Y\n          clientX, // client X\n          clientY, // client Y\n          false, false, false, false, 0, null);\n        break;\n      }\n      case 'KeyboardEvents':\n      {\n        const init = evt.initKeyboardEvent || evt.initKeyEvent; // webkit || moz\n        common.defaults(params, {\n          cancelable: true,\n          ctrlKey: false,\n          altKey: false,\n          shiftKey: false,\n          metaKey: false,\n          keyCode: undefined,\n          charCode: undefined\n        });\n        init(eventType, params.bubbles || false,\n          params.cancelable, window,\n          params.ctrlKey, params.altKey,\n          params.shiftKey, params.metaKey,\n          params.keyCode, params.charCode);\n        break;\n      }\n      default:\n      {\n        evt.initEvent(eventType, params.bubbles || false, params.cancelable || true);\n        break;\n      }\n    }\n    common.defaults(evt, aux);\n    elem.dispatchEvent(evt);\n  },\n\n  /**\n   *\n   * @param elem\n   * @param event\n   * @param func\n   * @param bool\n   */\n  bind: function(elem, event, func, newBool) {\n    const bool = newBool || false;\n    if (elem.addEventListener) {\n      elem.addEventListener(event, func, bool);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + event, func);\n    }\n    return dom;\n  },\n\n  /**\n   *\n   * @param elem\n   * @param event\n   * @param func\n   * @param bool\n   */\n  unbind: function(elem, event, func, newBool) {\n    const bool = newBool || false;\n    if (elem.removeEventListener) {\n      elem.removeEventListener(event, func, bool);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + event, func);\n    }\n    return dom;\n  },\n\n  /**\n   *\n   * @param elem\n   * @param className\n   */\n  addClass: function(elem, className) {\n    if (elem.className === undefined) {\n      elem.className = className;\n    } else if (elem.className !== className) {\n      const classes = elem.className.split(/ +/);\n      if (classes.indexOf(className) === -1) {\n        classes.push(className);\n        elem.className = classes.join(' ').replace(/^\\s+/, '').replace(/\\s+$/, '');\n      }\n    }\n    return dom;\n  },\n\n  /**\n   *\n   * @param elem\n   * @param className\n   */\n  removeClass: function(elem, className) {\n    if (className) {\n      if (elem.className === className) {\n        elem.removeAttribute('class');\n      } else {\n        const classes = elem.className.split(/ +/);\n        const index = classes.indexOf(className);\n        if (index !== -1) {\n          classes.splice(index, 1);\n          elem.className = classes.join(' ');\n        }\n      }\n    } else {\n      elem.className = undefined;\n    }\n    return dom;\n  },\n\n  hasClass: function(elem, className) {\n    return new RegExp('(?:^|\\\\s+)' + className + '(?:\\\\s+|$)').test(elem.className) || false;\n  },\n\n  /**\n   *\n   * @param elem\n   */\n  getWidth: function(elem) {\n    const style = getComputedStyle(elem);\n\n    return cssValueToPixels(style['border-left-width']) +\n      cssValueToPixels(style['border-right-width']) +\n      cssValueToPixels(style['padding-left']) +\n      cssValueToPixels(style['padding-right']) +\n      cssValueToPixels(style.width);\n  },\n\n  /**\n   *\n   * @param elem\n   */\n  getHeight: function(elem) {\n    const style = getComputedStyle(elem);\n\n    return cssValueToPixels(style['border-top-width']) +\n      cssValueToPixels(style['border-bottom-width']) +\n      cssValueToPixels(style['padding-top']) +\n      cssValueToPixels(style['padding-bottom']) +\n      cssValueToPixels(style.height);\n  },\n\n  /**\n   *\n   * @param el\n   */\n  getOffset: function(el) {\n    let elem = el;\n    const offset = { left: 0, top: 0 };\n    if (elem.offsetParent) {\n      do {\n        offset.left += elem.offsetLeft;\n        offset.top += elem.offsetTop;\n        elem = elem.offsetParent;\n      } while (elem);\n    }\n    return offset;\n  },\n\n  // http://stackoverflow.com/posts/2684561/revisions\n  /**\n   *\n   * @param elem\n   */\n  isActive: function(elem) {\n    return elem === document.activeElement && (elem.type || elem.href);\n  }\n\n};\n\nexport default dom;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\n\n/**\n * @class Provides a checkbox input to alter the boolean property of an object.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass BooleanController extends Controller {\n  constructor(object, property) {\n    super(object, property);\n\n    const _this = this;\n    this.__prev = this.getValue();\n\n    this.__checkbox = document.createElement('input');\n    this.__checkbox.setAttribute('type', 'checkbox');\n\n    function onChange() {\n      _this.setValue(!_this.__prev);\n    }\n\n    dom.bind(this.__checkbox, 'change', onChange, false);\n\n    this.domElement.appendChild(this.__checkbox);\n\n    // Match original value\n    this.updateDisplay();\n  }\n\n  setValue(v) {\n    const toReturn = super.setValue(v);\n    if (this.__onFinishChange) {\n      this.__onFinishChange.call(this, this.getValue());\n    }\n    this.__prev = this.getValue();\n    return toReturn;\n  }\n\n  updateDisplay() {\n    if (this.getValue() === true) {\n      this.__checkbox.setAttribute('checked', 'checked');\n      this.__checkbox.checked = true;\n      this.__prev = true;\n    } else {\n      this.__checkbox.checked = false;\n      this.__prev = false;\n    }\n\n    return super.updateDisplay();\n  }\n}\n\nexport default BooleanController;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\nimport common from '../utils/common';\n\n/**\n * @class Provides a select input to alter the property of an object, using a\n * list of accepted values.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Object|string[]} options A map of labels to acceptable values, or\n * a list of acceptable string values.\n */\nclass OptionController extends Controller {\n  constructor(object, property, opts) {\n    super(object, property);\n\n    let options = opts;\n\n    const _this = this;\n\n    /**\n     * The drop down menu\n     * @ignore\n     */\n    this.__select = document.createElement('select');\n\n    if (common.isArray(options)) {\n      const map = {};\n      common.each(options, function(element) {\n        map[element] = element;\n      });\n      options = map;\n    }\n\n    common.each(options, function(value, key) {\n      const opt = document.createElement('option');\n      opt.innerHTML = key;\n      opt.setAttribute('value', value);\n      _this.__select.appendChild(opt);\n    });\n\n    // Acknowledge original value\n    this.updateDisplay();\n\n    dom.bind(this.__select, 'change', function() {\n      const desiredValue = this.options[this.selectedIndex].value;\n      _this.setValue(desiredValue);\n    });\n\n    this.domElement.appendChild(this.__select);\n  }\n\n  setValue(v) {\n    const toReturn = super.setValue(v);\n\n    if (this.__onFinishChange) {\n      this.__onFinishChange.call(this, this.getValue());\n    }\n    return toReturn;\n  }\n\n  updateDisplay() {\n    if (dom.isActive(this.__select)) return this; // prevent number from updating if user is trying to manually update\n    this.__select.value = this.getValue();\n    return super.updateDisplay();\n  }\n}\n\nexport default OptionController;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\n\n/**\n * @class Provides a text input to alter the string property of an object.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass StringController extends Controller {\n  constructor(object, property) {\n    super(object, property);\n\n    const _this = this;\n\n    function onChange() {\n      _this.setValue(_this.__input.value);\n    }\n\n    function onBlur() {\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    this.__input = document.createElement('input');\n    this.__input.setAttribute('type', 'text');\n\n    dom.bind(this.__input, 'keyup', onChange);\n    dom.bind(this.__input, 'change', onChange);\n    dom.bind(this.__input, 'blur', onBlur);\n    dom.bind(this.__input, 'keydown', function(e) {\n      if (e.keyCode === 13) {\n        this.blur();\n      }\n    });\n\n    this.updateDisplay();\n\n    this.domElement.appendChild(this.__input);\n  }\n\n  updateDisplay() {\n    // Stops the caret from moving on account of:\n    // keyup -> setValue -> updateDisplay\n    if (!dom.isActive(this.__input)) {\n      this.__input.value = this.getValue();\n    }\n    return super.updateDisplay();\n  }\n}\n\nexport default StringController;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport common from '../utils/common';\n\nfunction numDecimals(x) {\n  const _x = x.toString();\n  if (_x.indexOf('.') > -1) {\n    return _x.length - _x.indexOf('.') - 1;\n  }\n\n  return 0;\n}\n\n/**\n * @class Represents a given property of an object that is a number.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Object} [params] Optional parameters\n * @param {Number} [params.min] Minimum allowed value\n * @param {Number} [params.max] Maximum allowed value\n * @param {Number} [params.step] Increment by which to change value\n */\nclass NumberController extends Controller {\n  constructor(object, property, params) {\n    super(object, property);\n\n    const _params = params || {};\n\n    this.__min = _params.min;\n    this.__max = _params.max;\n    this.__step = _params.step;\n\n    if (common.isUndefined(this.__step)) {\n      if (this.initialValue === 0) {\n        this.__impliedStep = 1; // What are we, psychics?\n      } else {\n        // Hey Doug, check this out.\n        this.__impliedStep = Math.pow(10, Math.floor(Math.log(Math.abs(this.initialValue)) / Math.LN10)) / 10;\n      }\n    } else {\n      this.__impliedStep = this.__step;\n    }\n\n    this.__precision = numDecimals(this.__impliedStep);\n  }\n\n  setValue(v) {\n    let _v = v;\n\n    if (this.__min !== undefined && _v < this.__min) {\n      _v = this.__min;\n    } else if (this.__max !== undefined && _v > this.__max) {\n      _v = this.__max;\n    }\n\n    if (this.__step !== undefined && _v % this.__step !== 0) {\n      _v = Math.round(_v / this.__step) * this.__step;\n    }\n\n    return super.setValue(_v);\n  }\n\n  /**\n   * Specify a minimum value for <code>object[property]</code>.\n   *\n   * @param {Number} minValue The minimum value for\n   * <code>object[property]</code>\n   * @returns {dat.controllers.NumberController} this\n   */\n  min(minValue) {\n    this.__min = minValue;\n    return this;\n  }\n\n  /**\n   * Specify a maximum value for <code>object[property]</code>.\n   *\n   * @param {Number} maxValue The maximum value for\n   * <code>object[property]</code>\n   * @returns {dat.controllers.NumberController} this\n   */\n  max(maxValue) {\n    this.__max = maxValue;\n    return this;\n  }\n\n  /**\n   * Specify a step value that dat.controllers.NumberController\n   * increments by.\n   *\n   * @param {Number} stepValue The step value for\n   * dat.controllers.NumberController\n   * @default if minimum and maximum specified increment is 1% of the\n   * difference otherwise stepValue is 1\n   * @returns {dat.controllers.NumberController} this\n   */\n  step(stepValue) {\n    this.__step = stepValue;\n    this.__impliedStep = stepValue;\n    this.__precision = numDecimals(stepValue);\n    return this;\n  }\n}\n\nexport default NumberController;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport NumberController from './NumberController';\nimport dom from '../dom/dom';\nimport common from '../utils/common';\n\nfunction roundToDecimal(value, decimals) {\n  const tenTo = Math.pow(10, decimals);\n  return Math.round(value * tenTo) / tenTo;\n}\n\n/**\n * @class Represents a given property of an object that is a number and\n * provides an input element with which to manipulate it.\n *\n * @extends dat.controllers.Controller\n * @extends dat.controllers.NumberController\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Object} [params] Optional parameters\n * @param {Number} [params.min] Minimum allowed value\n * @param {Number} [params.max] Maximum allowed value\n * @param {Number} [params.step] Increment by which to change value\n */\nclass NumberControllerBox extends NumberController {\n  constructor(object, property, params) {\n    super(object, property, params);\n\n    this.__truncationSuspended = false;\n\n    const _this = this;\n\n    /**\n     * {Number} Previous mouse y position\n     * @ignore\n     */\n    let prevY;\n\n    function onChange() {\n      const attempted = parseFloat(_this.__input.value);\n      if (!common.isNaN(attempted)) {\n        _this.setValue(attempted);\n      }\n    }\n\n    function onFinish() {\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    function onBlur() {\n      onFinish();\n    }\n\n    function onMouseDrag(e) {\n      const diff = prevY - e.clientY;\n      _this.setValue(_this.getValue() + diff * _this.__impliedStep);\n\n      prevY = e.clientY;\n    }\n\n    function onMouseUp() {\n      dom.unbind(window, 'mousemove', onMouseDrag);\n      dom.unbind(window, 'mouseup', onMouseUp);\n      onFinish();\n    }\n\n    function onMouseDown(e) {\n      dom.bind(window, 'mousemove', onMouseDrag);\n      dom.bind(window, 'mouseup', onMouseUp);\n      prevY = e.clientY;\n    }\n\n    this.__input = document.createElement('input');\n    this.__input.setAttribute('type', 'text');\n\n    // Makes it so manually specified values are not truncated.\n\n    dom.bind(this.__input, 'change', onChange);\n    dom.bind(this.__input, 'blur', onBlur);\n    dom.bind(this.__input, 'mousedown', onMouseDown);\n    dom.bind(this.__input, 'keydown', function(e) {\n      // When pressing enter, you can be as precise as you want.\n      if (e.keyCode === 13) {\n        _this.__truncationSuspended = true;\n        this.blur();\n        _this.__truncationSuspended = false;\n        onFinish();\n      }\n    });\n\n    this.updateDisplay();\n\n    this.domElement.appendChild(this.__input);\n  }\n\n  updateDisplay() {\n    this.__input.value = this.__truncationSuspended ? this.getValue() : roundToDecimal(this.getValue(), this.__precision);\n    return super.updateDisplay();\n  }\n}\n\nexport default NumberControllerBox;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport NumberController from './NumberController';\nimport dom from '../dom/dom';\n\nfunction map(v, i1, i2, o1, o2) {\n  return o1 + (o2 - o1) * ((v - i1) / (i2 - i1));\n}\n\n/**\n * @class Represents a given property of an object that is a number, contains\n * a minimum and maximum, and provides a slider element with which to\n * manipulate it. It should be noted that the slider element is made up of\n * <code>&lt;div&gt;</code> tags, <strong>not</strong> the html5\n * <code>&lt;slider&gt;</code> element.\n *\n * @extends dat.controllers.Controller\n * @extends dat.controllers.NumberController\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Number} minValue Minimum allowed value\n * @param {Number} maxValue Maximum allowed value\n * @param {Number} stepValue Increment by which to change value\n */\nclass NumberControllerSlider extends NumberController {\n  constructor(object, property, min, max, step) {\n    super(object, property, { min: min, max: max, step: step });\n\n    const _this = this;\n\n    this.__background = document.createElement('div');\n    this.__foreground = document.createElement('div');\n\n    dom.bind(this.__background, 'mousedown', onMouseDown);\n    dom.bind(this.__background, 'touchstart', onTouchStart);\n\n    dom.addClass(this.__background, 'slider');\n    dom.addClass(this.__foreground, 'slider-fg');\n\n    function onMouseDown(e) {\n      document.activeElement.blur();\n\n      dom.bind(window, 'mousemove', onMouseDrag);\n      dom.bind(window, 'mouseup', onMouseUp);\n\n      onMouseDrag(e);\n    }\n\n    function onMouseDrag(e) {\n      e.preventDefault();\n\n      const bgRect = _this.__background.getBoundingClientRect();\n\n      _this.setValue(\n        map(e.clientX, bgRect.left, bgRect.right, _this.__min, _this.__max)\n      );\n\n      return false;\n    }\n\n    function onMouseUp() {\n      dom.unbind(window, 'mousemove', onMouseDrag);\n      dom.unbind(window, 'mouseup', onMouseUp);\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    function onTouchStart(e) {\n      if (e.touches.length !== 1) { return; }\n      dom.bind(window, 'touchmove', onTouchMove);\n      dom.bind(window, 'touchend', onTouchEnd);\n      onTouchMove(e);\n    }\n\n    function onTouchMove(e) {\n      const clientX = e.touches[0].clientX;\n      const bgRect = _this.__background.getBoundingClientRect();\n\n      _this.setValue(\n        map(clientX, bgRect.left, bgRect.right, _this.__min, _this.__max)\n      );\n    }\n\n    function onTouchEnd() {\n      dom.unbind(window, 'touchmove', onTouchMove);\n      dom.unbind(window, 'touchend', onTouchEnd);\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    this.updateDisplay();\n\n    this.__background.appendChild(this.__foreground);\n    this.domElement.appendChild(this.__background);\n  }\n\n  updateDisplay() {\n    const pct = (this.getValue() - this.__min) / (this.__max - this.__min);\n    this.__foreground.style.width = pct * 100 + '%';\n    return super.updateDisplay();\n  }\n}\n\nexport default NumberControllerSlider;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\n\n/**\n * @class Provides a GUI interface to fire a specified method, a property of an object.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass FunctionController extends Controller {\n  constructor(object, property, text) {\n    super(object, property);\n\n    const _this = this;\n\n    this.__button = document.createElement('div');\n    this.__button.innerHTML = text === undefined ? 'Fire' : text;\n\n    dom.bind(this.__button, 'click', function(e) {\n      e.preventDefault();\n      _this.fire();\n      return false;\n    });\n\n    dom.addClass(this.__button, 'button');\n\n    this.domElement.appendChild(this.__button);\n  }\n\n  fire() {\n    if (this.__onChange) {\n      this.__onChange.call(this);\n    }\n    this.getValue().call(this.object);\n    if (this.__onFinishChange) {\n      this.__onFinishChange.call(this, this.getValue());\n    }\n  }\n}\n\nexport default FunctionController;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\nimport Color from '../color/Color';\nimport interpret from '../color/interpret';\nimport common from '../utils/common';\n\n/**\n * @class Represents a given property of an object that is a color.\n * @param {Object} object\n * @param {string} property\n */\nclass ColorController extends Controller {\n  constructor(object, property) {\n    super(object, property);\n\n    this.__color = new Color(this.getValue());\n    this.__temp = new Color(0);\n\n    const _this = this;\n\n    this.domElement = document.createElement('div');\n\n    dom.makeSelectable(this.domElement, false);\n\n    this.__selector = document.createElement('div');\n    this.__selector.className = 'selector';\n\n    this.__saturation_field = document.createElement('div');\n    this.__saturation_field.className = 'saturation-field';\n\n    this.__field_knob = document.createElement('div');\n    this.__field_knob.className = 'field-knob';\n    this.__field_knob_border = '2px solid ';\n\n    this.__hue_knob = document.createElement('div');\n    this.__hue_knob.className = 'hue-knob';\n\n    this.__hue_field = document.createElement('div');\n    this.__hue_field.className = 'hue-field';\n\n    this.__input = document.createElement('input');\n    this.__input.type = 'text';\n    this.__input_textShadow = '0 1px 1px ';\n\n    dom.bind(this.__input, 'keydown', function(e) {\n      if (e.keyCode === 13) { // on enter\n        onBlur.call(this);\n      }\n    });\n\n    dom.bind(this.__input, 'blur', onBlur);\n\n    dom.bind(this.__selector, 'mousedown', function(/* e */) {\n      dom\n        .addClass(this, 'drag')\n        .bind(window, 'mouseup', function(/* e */) {\n          dom.removeClass(_this.__selector, 'drag');\n        });\n    });\n\n    dom.bind(this.__selector, 'touchstart', function(/* e */) {\n      dom\n        .addClass(this, 'drag')\n        .bind(window, 'touchend', function(/* e */) {\n          dom.removeClass(_this.__selector, 'drag');\n        });\n    });\n\n    const valueField = document.createElement('div');\n\n    common.extend(this.__selector.style, {\n      width: '122px',\n      height: '102px',\n      padding: '3px',\n      backgroundColor: '#222',\n      boxShadow: '0px 1px 3px rgba(0,0,0,0.3)'\n    });\n\n    common.extend(this.__field_knob.style, {\n      position: 'absolute',\n      width: '12px',\n      height: '12px',\n      border: this.__field_knob_border + (this.__color.v < 0.5 ? '#fff' : '#000'),\n      boxShadow: '0px 1px 3px rgba(0,0,0,0.5)',\n      borderRadius: '12px',\n      zIndex: 1\n    });\n\n    common.extend(this.__hue_knob.style, {\n      position: 'absolute',\n      width: '15px',\n      height: '2px',\n      borderRight: '4px solid #fff',\n      zIndex: 1\n    });\n\n    common.extend(this.__saturation_field.style, {\n      width: '100px',\n      height: '100px',\n      border: '1px solid #555',\n      marginRight: '3px',\n      display: 'inline-block',\n      cursor: 'pointer'\n    });\n\n    common.extend(valueField.style, {\n      width: '100%',\n      height: '100%',\n      background: 'none'\n    });\n\n    linearGradient(valueField, 'top', 'rgba(0,0,0,0)', '#000');\n\n    common.extend(this.__hue_field.style, {\n      width: '15px',\n      height: '100px',\n      border: '1px solid #555',\n      cursor: 'ns-resize',\n      position: 'absolute',\n      top: '3px',\n      right: '3px'\n    });\n\n    hueGradient(this.__hue_field);\n\n    common.extend(this.__input.style, {\n      outline: 'none',\n      //      width: '120px',\n      textAlign: 'center',\n      //      padding: '4px',\n      //      marginBottom: '6px',\n      color: '#fff',\n      border: 0,\n      fontWeight: 'bold',\n      textShadow: this.__input_textShadow + 'rgba(0,0,0,0.7)'\n    });\n\n    dom.bind(this.__saturation_field, 'mousedown', fieldDown);\n    dom.bind(this.__saturation_field, 'touchstart', fieldDown);\n\n    dom.bind(this.__field_knob, 'mousedown', fieldDown);\n    dom.bind(this.__field_knob, 'touchstart', fieldDown);\n\n    dom.bind(this.__hue_field, 'mousedown', fieldDownH);\n    dom.bind(this.__hue_field, 'touchstart', fieldDownH);\n\n    function fieldDown(e) {\n      setSV(e);\n      dom.bind(window, 'mousemove', setSV);\n      dom.bind(window, 'touchmove', setSV);\n      dom.bind(window, 'mouseup', fieldUpSV);\n      dom.bind(window, 'touchend', fieldUpSV);\n    }\n\n    function fieldDownH(e) {\n      setH(e);\n      dom.bind(window, 'mousemove', setH);\n      dom.bind(window, 'touchmove', setH);\n      dom.bind(window, 'mouseup', fieldUpH);\n      dom.bind(window, 'touchend', fieldUpH);\n    }\n\n    function fieldUpSV() {\n      dom.unbind(window, 'mousemove', setSV);\n      dom.unbind(window, 'touchmove', setSV);\n      dom.unbind(window, 'mouseup', fieldUpSV);\n      dom.unbind(window, 'touchend', fieldUpSV);\n      onFinish();\n    }\n\n    function fieldUpH() {\n      dom.unbind(window, 'mousemove', setH);\n      dom.unbind(window, 'touchmove', setH);\n      dom.unbind(window, 'mouseup', fieldUpH);\n      dom.unbind(window, 'touchend', fieldUpH);\n      onFinish();\n    }\n\n    function onBlur() {\n      const i = interpret(this.value);\n      if (i !== false) {\n        _this.__color.__state = i;\n        _this.setValue(_this.__color.toOriginal());\n      } else {\n        this.value = _this.__color.toString();\n      }\n    }\n\n    function onFinish() {\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.__color.toOriginal());\n      }\n    }\n\n    this.__saturation_field.appendChild(valueField);\n    this.__selector.appendChild(this.__field_knob);\n    this.__selector.appendChild(this.__saturation_field);\n    this.__selector.appendChild(this.__hue_field);\n    this.__hue_field.appendChild(this.__hue_knob);\n\n    this.domElement.appendChild(this.__input);\n    this.domElement.appendChild(this.__selector);\n\n    this.updateDisplay();\n\n    function setSV(e) {\n      if (e.type.indexOf('touch') === -1) { e.preventDefault(); }\n\n      const fieldRect = _this.__saturation_field.getBoundingClientRect();\n      const { clientX, clientY } = (e.touches && e.touches[0]) || e;\n      let s = (clientX - fieldRect.left) / (fieldRect.right - fieldRect.left);\n      let v = 1 - (clientY - fieldRect.top) / (fieldRect.bottom - fieldRect.top);\n\n      if (v > 1) {\n        v = 1;\n      } else if (v < 0) {\n        v = 0;\n      }\n\n      if (s > 1) {\n        s = 1;\n      } else if (s < 0) {\n        s = 0;\n      }\n\n      _this.__color.v = v;\n      _this.__color.s = s;\n\n      _this.setValue(_this.__color.toOriginal());\n\n\n      return false;\n    }\n\n    function setH(e) {\n      if (e.type.indexOf('touch') === -1) { e.preventDefault(); }\n\n      const fieldRect = _this.__hue_field.getBoundingClientRect();\n      const { clientY } = (e.touches && e.touches[0]) || e;\n      let h = 1 - (clientY - fieldRect.top) / (fieldRect.bottom - fieldRect.top);\n\n      if (h > 1) {\n        h = 1;\n      } else if (h < 0) {\n        h = 0;\n      }\n\n      _this.__color.h = h * 360;\n\n      _this.setValue(_this.__color.toOriginal());\n\n      return false;\n    }\n  }\n\n  updateDisplay() {\n    const i = interpret(this.getValue());\n\n    if (i !== false) {\n      let mismatch = false;\n\n      // Check for mismatch on the interpreted value.\n\n      common.each(Color.COMPONENTS, function(component) {\n        if (!common.isUndefined(i[component]) && !common.isUndefined(this.__color.__state[component]) &&\n          i[component] !== this.__color.__state[component]) {\n          mismatch = true;\n          return {}; // break\n        }\n      }, this);\n\n      // If nothing diverges, we keep our previous values\n      // for statefulness, otherwise we recalculate fresh\n      if (mismatch) {\n        common.extend(this.__color.__state, i);\n      }\n    }\n\n    common.extend(this.__temp.__state, this.__color.__state);\n\n    this.__temp.a = 1;\n\n    const flip = (this.__color.v < 0.5 || this.__color.s > 0.5) ? 255 : 0;\n    const _flip = 255 - flip;\n\n    common.extend(this.__field_knob.style, {\n      marginLeft: 100 * this.__color.s - 7 + 'px',\n      marginTop: 100 * (1 - this.__color.v) - 7 + 'px',\n      backgroundColor: this.__temp.toHexString(),\n      border: this.__field_knob_border + 'rgb(' + flip + ',' + flip + ',' + flip + ')'\n    });\n\n    this.__hue_knob.style.marginTop = (1 - this.__color.h / 360) * 100 + 'px';\n\n    this.__temp.s = 1;\n    this.__temp.v = 1;\n\n    linearGradient(this.__saturation_field, 'left', '#fff', this.__temp.toHexString());\n\n    this.__input.value = this.__color.toString();\n\n    common.extend(this.__input.style, {\n      backgroundColor: this.__color.toHexString(),\n      color: 'rgb(' + flip + ',' + flip + ',' + flip + ')',\n      textShadow: this.__input_textShadow + 'rgba(' + _flip + ',' + _flip + ',' + _flip + ',.7)'\n    });\n  }\n}\n\nconst vendors = ['-moz-', '-o-', '-webkit-', '-ms-', ''];\n\nfunction linearGradient(elem, x, a, b) {\n  elem.style.background = '';\n  common.each(vendors, function(vendor) {\n    elem.style.cssText += 'background: ' + vendor + 'linear-gradient(' + x + ', ' + a + ' 0%, ' + b + ' 100%); ';\n  });\n}\n\nfunction hueGradient(elem) {\n  elem.style.background = '';\n  elem.style.cssText += 'background: -moz-linear-gradient(top,  #ff0000 0%, #ff00ff 17%, #0000ff 34%, #00ffff 50%, #00ff00 67%, #ffff00 84%, #ff0000 100%);';\n  elem.style.cssText += 'background: -webkit-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n  elem.style.cssText += 'background: -o-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n  elem.style.cssText += 'background: -ms-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n  elem.style.cssText += 'background: linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n}\n\nexport default ColorController;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nconst css = {\n  load: function(url, indoc) {\n    const doc = indoc || document;\n    const link = doc.createElement('link');\n    link.type = 'text/css';\n    link.rel = 'stylesheet';\n    link.href = url;\n    doc.getElementsByTagName('head')[0].appendChild(link);\n  },\n\n  inject: function(cssContent, indoc) {\n    const doc = indoc || document;\n    const injected = document.createElement('style');\n    injected.type = 'text/css';\n    injected.innerHTML = cssContent;\n    const head = doc.getElementsByTagName('head')[0];\n    try {\n      head.appendChild(injected);\n    } catch (e) { // Unable to inject CSS, probably because of a Content Security Policy\n    }\n  }\n};\n\nexport default css;\n","const saveDialogContents = `<div id=\"dg-save\" class=\"dg dialogue\">\n\n  Here's the new load parameter for your <code>GUI</code>'s constructor:\n\n  <textarea id=\"dg-new-constructor\"></textarea>\n\n  <div id=\"dg-save-locally\">\n\n    <input id=\"dg-local-storage\" type=\"checkbox\"/> Automatically save\n    values to <code>localStorage</code> on exit.\n\n    <div id=\"dg-local-explain\">The values saved to <code>localStorage</code> will\n      override those passed to <code>dat.GUI</code>'s constructor. This makes it\n      easier to work incrementally, but <code>localStorage</code> is fragile,\n      and your friends may not see the same values you do.\n\n    </div>\n\n  </div>\n\n</div>`;\n\nexport default saveDialogContents;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport OptionController from './OptionController';\nimport NumberControllerBox from './NumberControllerBox';\nimport NumberControllerSlider from './NumberControllerSlider';\nimport StringController from './StringController';\nimport FunctionController from './FunctionController';\nimport BooleanController from './BooleanController';\nimport common from '../utils/common';\n\nconst ControllerFactory = function(object, property) {\n  const initialValue = object[property];\n\n  // Providing options?\n  if (common.isArray(arguments[2]) || common.isObject(arguments[2])) {\n    return new OptionController(object, property, arguments[2]);\n  }\n\n  // Providing a map?\n  if (common.isNumber(initialValue)) {\n    // Has min and max? (slider)\n    if (common.isNumber(arguments[2]) && common.isNumber(arguments[3])) {\n      // has step?\n      if (common.isNumber(arguments[4])) {\n        return new NumberControllerSlider(object, property,\n          arguments[2], arguments[3], arguments[4]);\n      }\n\n      return new NumberControllerSlider(object, property, arguments[2], arguments[3]);\n    }\n\n    // number box\n    if (common.isNumber(arguments[4])) { // has step\n      return new NumberControllerBox(object, property,\n        { min: arguments[2], max: arguments[3], step: arguments[4] });\n    }\n    return new NumberControllerBox(object, property, { min: arguments[2], max: arguments[3] });\n  }\n\n  if (common.isString(initialValue)) {\n    return new StringController(object, property);\n  }\n\n  if (common.isFunction(initialValue)) {\n    return new FunctionController(object, property, '');\n  }\n\n  if (common.isBoolean(initialValue)) {\n    return new BooleanController(object, property);\n  }\n\n  return null;\n};\n\nexport default ControllerFactory;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nfunction requestAnimationFrame(callback) {\n  setTimeout(callback, 1000 / 60);\n}\n\nexport default window.requestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    window.oRequestAnimationFrame ||\n    window.msRequestAnimationFrame ||\n    requestAnimationFrame;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport dom from './dom';\nimport common from '../utils/common';\n\nclass CenteredDiv {\n  constructor() {\n    this.backgroundElement = document.createElement('div');\n    common.extend(this.backgroundElement.style, {\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      top: 0,\n      left: 0,\n      display: 'none',\n      zIndex: '1000',\n      opacity: 0,\n      WebkitTransition: 'opacity 0.2s linear',\n      transition: 'opacity 0.2s linear'\n    });\n\n    dom.makeFullscreen(this.backgroundElement);\n    this.backgroundElement.style.position = 'fixed';\n\n    this.domElement = document.createElement('div');\n    common.extend(this.domElement.style, {\n      position: 'fixed',\n      display: 'none',\n      zIndex: '1001',\n      opacity: 0,\n      WebkitTransition: '-webkit-transform 0.2s ease-out, opacity 0.2s linear',\n      transition: 'transform 0.2s ease-out, opacity 0.2s linear'\n    });\n\n\n    document.body.appendChild(this.backgroundElement);\n    document.body.appendChild(this.domElement);\n\n    const _this = this;\n    dom.bind(this.backgroundElement, 'click', function() {\n      _this.hide();\n    });\n  }\n\n  show() {\n    const _this = this;\n\n    this.backgroundElement.style.display = 'block';\n\n    this.domElement.style.display = 'block';\n    this.domElement.style.opacity = 0;\n    //    this.domElement.style.top = '52%';\n    this.domElement.style.webkitTransform = 'scale(1.1)';\n\n    this.layout();\n\n    common.defer(function() {\n      _this.backgroundElement.style.opacity = 1;\n      _this.domElement.style.opacity = 1;\n      _this.domElement.style.webkitTransform = 'scale(1)';\n    });\n  }\n\n  /**\n   * Hide centered div\n   */\n  hide() {\n    const _this = this;\n\n    const hide = function() {\n      _this.domElement.style.display = 'none';\n      _this.backgroundElement.style.display = 'none';\n\n      dom.unbind(_this.domElement, 'webkitTransitionEnd', hide);\n      dom.unbind(_this.domElement, 'transitionend', hide);\n      dom.unbind(_this.domElement, 'oTransitionEnd', hide);\n    };\n\n    dom.bind(this.domElement, 'webkitTransitionEnd', hide);\n    dom.bind(this.domElement, 'transitionend', hide);\n    dom.bind(this.domElement, 'oTransitionEnd', hide);\n\n    this.backgroundElement.style.opacity = 0;\n    //    this.domElement.style.top = '48%';\n    this.domElement.style.opacity = 0;\n    this.domElement.style.webkitTransform = 'scale(1.1)';\n  }\n\n  layout() {\n    this.domElement.style.left = window.innerWidth / 2 - dom.getWidth(this.domElement) / 2 + 'px';\n    this.domElement.style.top = window.innerHeight / 2 - dom.getHeight(this.domElement) / 2 + 'px';\n  }\n}\n\nexport default CenteredDiv;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport css from '../utils/css';\nimport saveDialogueContents from './saveDialogue.html';\nimport ControllerFactory from '../controllers/ControllerFactory';\nimport Controller from '../controllers/Controller';\nimport BooleanController from '../controllers/BooleanController';\nimport FunctionController from '../controllers/FunctionController';\nimport NumberControllerBox from '../controllers/NumberControllerBox';\nimport NumberControllerSlider from '../controllers/NumberControllerSlider';\nimport ColorController from '../controllers/ColorController';\nimport requestAnimationFrame from '../utils/requestAnimationFrame';\nimport CenteredDiv from '../dom/CenteredDiv';\nimport dom from '../dom/dom';\nimport common from '../utils/common';\n\nimport styleSheet from './style.scss'; // CSS to embed in build\n\ncss.inject(styleSheet);\n\n/** @ignore Outer-most className for GUI's */\nconst CSS_NAMESPACE = 'dg';\n\nconst HIDE_KEY_CODE = 72;\n\n/** @ignore The only value shared between the JS and SCSS. Use caution. */\nconst CLOSE_BUTTON_HEIGHT = 20;\n\nconst DEFAULT_DEFAULT_PRESET_NAME = 'Default';\n\nconst SUPPORTS_LOCAL_STORAGE = (function() {\n  try {\n    return !!window.localStorage;\n  } catch (e) {\n    return false;\n  }\n}());\n\nlet SAVE_DIALOGUE;\n\n/** @ignore Have we yet to create an autoPlace GUI? */\nlet autoPlaceVirgin = true;\n\n/** @ignore Fixed position div that auto place GUI's go inside */\nlet autoPlaceContainer;\n\n/** @ignore Are we hiding the GUI's ? */\nlet hide = false;\n\n/** @private GUI's which should be hidden */\nconst hideableGuis = [];\n\n/**\n * @class A lightweight controller library for JavaScript. It allows you to easily\n * manipulate variables and fire functions on the fly.\n *\n * @typicalname gui\n *\n * @example\n * // Creating a GUI with options.\n * var gui = new dat.GUI({name: 'My GUI'});\n *\n * @example\n * // Creating a GUI and a subfolder.\n * var gui = new dat.GUI();\n * var folder1 = gui.addFolder('Flow Field');\n *\n * @param {Object} [params]\n * @param {String} [params.name] The name of this GUI.\n * @param {Object} [params.load] JSON object representing the saved state of\n * this GUI.\n * @param {dat.gui.GUI} [params.parent] The GUI I'm nested in.\n * @param {Boolean} [params.autoPlace=true]\n * @param {Boolean} [params.hideable=true] If true, GUI is shown/hidden by <kbd>h</kbd> keypress.\n * @param {Boolean} [params.closed=false] If true, starts closed\n * @param {Boolean} [params.closeOnTop=false] If true, close/open button shows on top of the GUI\n */\nconst GUI = function(pars) {\n  const _this = this;\n\n  let params = pars || {};\n\n  /**\n   * Outermost DOM Element\n   * @type {DOMElement}\n   */\n  this.domElement = document.createElement('div');\n  this.__ul = document.createElement('ul');\n  this.domElement.appendChild(this.__ul);\n\n  dom.addClass(this.domElement, CSS_NAMESPACE);\n\n  /**\n   * Nested GUI's by name\n   * @ignore\n   */\n  this.__folders = {};\n\n  this.__controllers = [];\n\n  /**\n   * List of objects I'm remembering for save, only used in top level GUI\n   * @ignore\n   */\n  this.__rememberedObjects = [];\n\n  /**\n   * Maps the index of remembered objects to a map of controllers, only used\n   * in top level GUI.\n   *\n   * @private\n   * @ignore\n   *\n   * @example\n   * [\n   *  {\n     *    propertyName: Controller,\n     *    anotherPropertyName: Controller\n     *  },\n   *  {\n     *    propertyName: Controller\n     *  }\n   * ]\n   */\n  this.__rememberedObjectIndecesToControllers = [];\n\n  this.__listening = [];\n\n  // Default parameters\n  params = common.defaults(params, {\n    closeOnTop: false,\n    autoPlace: true,\n    width: GUI.DEFAULT_WIDTH\n  });\n\n  params = common.defaults(params, {\n    resizable: params.autoPlace,\n    hideable: params.autoPlace\n  });\n\n  if (!common.isUndefined(params.load)) {\n    // Explicit preset\n    if (params.preset) {\n      params.load.preset = params.preset;\n    }\n  } else {\n    params.load = { preset: DEFAULT_DEFAULT_PRESET_NAME };\n  }\n\n  if (common.isUndefined(params.parent) && params.hideable) {\n    hideableGuis.push(this);\n  }\n\n  // Only root level GUI's are resizable.\n  params.resizable = common.isUndefined(params.parent) && params.resizable;\n\n  if (params.autoPlace && common.isUndefined(params.scrollable)) {\n    params.scrollable = true;\n  }\n  //    params.scrollable = common.isUndefined(params.parent) && params.scrollable === true;\n\n  // Not part of params because I don't want people passing this in via\n  // constructor. Should be a 'remembered' value.\n  let useLocalStorage =\n    SUPPORTS_LOCAL_STORAGE &&\n    localStorage.getItem(getLocalStorageHash(this, 'isLocal')) === 'true';\n\n  let saveToLocalStorage;\n  let titleRow;\n\n  Object.defineProperties(this,\n    /** @lends GUI.prototype */\n    {\n      /**\n       * The parent <code>GUI</code>\n       * @type dat.gui.GUI\n       */\n      parent: {\n        get: function() {\n          return params.parent;\n        }\n      },\n\n      scrollable: {\n        get: function() {\n          return params.scrollable;\n        }\n      },\n\n      /**\n       * Handles <code>GUI</code>'s element placement for you\n       * @type Boolean\n       */\n      autoPlace: {\n        get: function() {\n          return params.autoPlace;\n        }\n      },\n\n      /**\n       * Handles <code>GUI</code>'s position of open/close button\n       * @type Boolean\n       */\n      closeOnTop: {\n        get: function() {\n          return params.closeOnTop;\n        }\n      },\n\n      /**\n       * The identifier for a set of saved values\n       * @type String\n       */\n      preset: {\n        get: function() {\n          if (_this.parent) {\n            return _this.getRoot().preset;\n          }\n\n          return params.load.preset;\n        },\n\n        set: function(v) {\n          if (_this.parent) {\n            _this.getRoot().preset = v;\n          } else {\n            params.load.preset = v;\n          }\n          setPresetSelectIndex(this);\n          _this.revert();\n        }\n      },\n\n      /**\n       * The width of <code>GUI</code> element\n       * @type Number\n       */\n      width: {\n        get: function() {\n          return params.width;\n        },\n        set: function(v) {\n          params.width = v;\n          setWidth(_this, v);\n        }\n      },\n\n      /**\n       * The name of <code>GUI</code>. Used for folders. i.e\n       * a folder's name\n       * @type String\n       */\n      name: {\n        get: function() {\n          return params.name;\n        },\n        set: function(v) {\n          // TODO Check for collisions among sibling folders\n          params.name = v;\n          if (titleRow) {\n            titleRow.innerHTML = params.name;\n          }\n        }\n      },\n\n      /**\n       * Whether the <code>GUI</code> is collapsed or not\n       * @type Boolean\n       */\n      closed: {\n        get: function() {\n          return params.closed;\n        },\n        set: function(v) {\n          params.closed = v;\n          if (params.closed) {\n            dom.addClass(_this.__ul, GUI.CLASS_CLOSED);\n          } else {\n            dom.removeClass(_this.__ul, GUI.CLASS_CLOSED);\n          }\n          // For browsers that aren't going to respect the CSS transition,\n          // Lets just check our height against the window height right off\n          // the bat.\n          this.onResize();\n\n          if (_this.__closeButton) {\n            _this.__closeButton.innerHTML = v ? GUI.TEXT_OPEN : GUI.TEXT_CLOSED;\n          }\n        }\n      },\n\n      /**\n       * Contains all presets\n       * @type Object\n       */\n      load: {\n        get: function() {\n          return params.load;\n        }\n      },\n\n      /**\n       * Determines whether or not to use <a href=\"https://developer.mozilla.org/en/DOM/Storage#localStorage\">localStorage</a> as the means for\n       * <code>remember</code>ing\n       * @type Boolean\n       */\n      useLocalStorage: {\n\n        get: function() {\n          return useLocalStorage;\n        },\n        set: function(bool) {\n          if (SUPPORTS_LOCAL_STORAGE) {\n            useLocalStorage = bool;\n            if (bool) {\n              dom.bind(window, 'unload', saveToLocalStorage);\n            } else {\n              dom.unbind(window, 'unload', saveToLocalStorage);\n            }\n            localStorage.setItem(getLocalStorageHash(_this, 'isLocal'), bool);\n          }\n        }\n      }\n    });\n\n  // Are we a root level GUI?\n  if (common.isUndefined(params.parent)) {\n    this.closed = params.closed || false;\n\n    dom.addClass(this.domElement, GUI.CLASS_MAIN);\n    dom.makeSelectable(this.domElement, false);\n\n    // Are we supposed to be loading locally?\n    if (SUPPORTS_LOCAL_STORAGE) {\n      if (useLocalStorage) {\n        _this.useLocalStorage = true;\n\n        const savedGui = localStorage.getItem(getLocalStorageHash(this, 'gui'));\n\n        if (savedGui) {\n          params.load = JSON.parse(savedGui);\n        }\n      }\n    }\n\n    this.__closeButton = document.createElement('div');\n    this.__closeButton.innerHTML = GUI.TEXT_CLOSED;\n    dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_BUTTON);\n    if (params.closeOnTop) {\n      dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_TOP);\n      this.domElement.insertBefore(this.__closeButton, this.domElement.childNodes[0]);\n    } else {\n      dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_BOTTOM);\n      this.domElement.appendChild(this.__closeButton);\n    }\n\n    dom.bind(this.__closeButton, 'click', function() {\n      _this.closed = !_this.closed;\n    });\n    // Oh, you're a nested GUI!\n  } else {\n    if (params.closed === undefined) {\n      params.closed = true;\n    }\n\n    const titleRowName = document.createTextNode(params.name);\n    dom.addClass(titleRowName, 'controller-name');\n\n    titleRow = addRow(_this, titleRowName);\n\n    const onClickTitle = function(e) {\n      e.preventDefault();\n      _this.closed = !_this.closed;\n      return false;\n    };\n\n    dom.addClass(this.__ul, GUI.CLASS_CLOSED);\n\n    dom.addClass(titleRow, 'title');\n    dom.bind(titleRow, 'click', onClickTitle);\n\n    if (!params.closed) {\n      this.closed = false;\n    }\n  }\n\n  if (params.autoPlace) {\n    if (common.isUndefined(params.parent)) {\n      if (autoPlaceVirgin) {\n        autoPlaceContainer = document.createElement('div');\n        dom.addClass(autoPlaceContainer, CSS_NAMESPACE);\n        dom.addClass(autoPlaceContainer, GUI.CLASS_AUTO_PLACE_CONTAINER);\n        document.body.appendChild(autoPlaceContainer);\n        autoPlaceVirgin = false;\n      }\n\n      // Put it in the dom for you.\n      autoPlaceContainer.appendChild(this.domElement);\n\n      // Apply the auto styles\n      dom.addClass(this.domElement, GUI.CLASS_AUTO_PLACE);\n    }\n\n\n    // Make it not elastic.\n    if (!this.parent) {\n      setWidth(_this, params.width);\n    }\n  }\n\n  this.__resizeHandler = function() {\n    _this.onResizeDebounced();\n  };\n\n  dom.bind(window, 'resize', this.__resizeHandler);\n  dom.bind(this.__ul, 'webkitTransitionEnd', this.__resizeHandler);\n  dom.bind(this.__ul, 'transitionend', this.__resizeHandler);\n  dom.bind(this.__ul, 'oTransitionEnd', this.__resizeHandler);\n  this.onResize();\n\n  if (params.resizable) {\n    addResizeHandle(this);\n  }\n\n  saveToLocalStorage = function() {\n    if (SUPPORTS_LOCAL_STORAGE && localStorage.getItem(getLocalStorageHash(_this, 'isLocal')) === 'true') {\n      localStorage.setItem(getLocalStorageHash(_this, 'gui'), JSON.stringify(_this.getSaveObject()));\n    }\n  };\n\n  // expose this method publicly\n  this.saveToLocalStorageIfPossible = saveToLocalStorage;\n\n  function resetWidth() {\n    const root = _this.getRoot();\n    root.width += 1;\n    common.defer(function() {\n      root.width -= 1;\n    });\n  }\n\n  if (!params.parent) {\n    resetWidth();\n  }\n};\n\nGUI.toggleHide = function() {\n  hide = !hide;\n  common.each(hideableGuis, function(gui) {\n    gui.domElement.style.display = hide ? 'none' : '';\n  });\n};\n\nGUI.CLASS_AUTO_PLACE = 'a';\nGUI.CLASS_AUTO_PLACE_CONTAINER = 'ac';\nGUI.CLASS_MAIN = 'main';\nGUI.CLASS_CONTROLLER_ROW = 'cr';\nGUI.CLASS_TOO_TALL = 'taller-than-window';\nGUI.CLASS_CLOSED = 'closed';\nGUI.CLASS_CLOSE_BUTTON = 'close-button';\nGUI.CLASS_CLOSE_TOP = 'close-top';\nGUI.CLASS_CLOSE_BOTTOM = 'close-bottom';\nGUI.CLASS_DRAG = 'drag';\n\nGUI.DEFAULT_WIDTH = 245;\nGUI.TEXT_CLOSED = 'Close Controls';\nGUI.TEXT_OPEN = 'Open Controls';\n\nGUI._keydownHandler = function(e) {\n  if (document.activeElement.type !== 'text' &&\n    (e.which === HIDE_KEY_CODE || e.keyCode === HIDE_KEY_CODE)) {\n    GUI.toggleHide();\n  }\n};\ndom.bind(window, 'keydown', GUI._keydownHandler, false);\n\ncommon.extend(\n  GUI.prototype,\n\n  /** @lends GUI.prototype */\n  {\n\n    /**\n     * Adds a new {@link Controller} to the GUI. The type of controller created\n     * is inferred from the initial value of <code>object[property]</code>. For\n     * color properties, see {@link addColor}.\n     *\n     * @param {Object} object The object to be manipulated\n     * @param {String} property The name of the property to be manipulated\n     * @param {Number} [min] Minimum allowed value\n     * @param {Number} [max] Maximum allowed value\n     * @param {Number} [step] Increment by which to change value\n     * @returns {Controller} The controller that was added to the GUI.\n     * @instance\n     *\n     * @example\n     * // Add a string controller.\n     * var person = {name: 'Sam'};\n     * gui.add(person, 'name');\n     *\n     * @example\n     * // Add a number controller slider.\n     * var person = {age: 45};\n     * gui.add(person, 'age', 0, 100);\n     */\n    add: function(object, property) {\n      return add(\n        this,\n        object,\n        property,\n        {\n          factoryArgs: Array.prototype.slice.call(arguments, 2)\n        }\n      );\n    },\n\n    /**\n     * Adds a new color controller to the GUI.\n     *\n     * @param object\n     * @param property\n     * @returns {Controller} The controller that was added to the GUI.\n     * @instance\n     *\n     * @example\n     * var palette = {\n     *   color1: '#FF0000', // CSS string\n     *   color2: [ 0, 128, 255 ], // RGB array\n     *   color3: [ 0, 128, 255, 0.3 ], // RGB with alpha\n     *   color4: { h: 350, s: 0.9, v: 0.3 } // Hue, saturation, value\n     * };\n     * gui.addColor(palette, 'color1');\n     * gui.addColor(palette, 'color2');\n     * gui.addColor(palette, 'color3');\n     * gui.addColor(palette, 'color4');\n     */\n    addColor: function(object, property) {\n      return add(\n        this,\n        object,\n        property,\n        {\n          color: true\n        }\n      );\n    },\n\n    /**\n     * Removes the given controller from the GUI.\n     * @param {Controller} controller\n     * @instance\n     */\n    remove: function(controller) {\n      // TODO listening?\n      this.__ul.removeChild(controller.__li);\n      this.__controllers.splice(this.__controllers.indexOf(controller), 1);\n      const _this = this;\n      common.defer(function() {\n        _this.onResize();\n      });\n    },\n\n    /**\n     * Removes the root GUI from the document and unbinds all event listeners.\n     * For subfolders, use `gui.removeFolder(folder)` instead.\n     * @instance\n     */\n    destroy: function() {\n      if (this.parent) {\n        throw new Error(\n          'Only the root GUI should be removed with .destroy(). ' +\n          'For subfolders, use gui.removeFolder(folder) instead.'\n        );\n      }\n\n      if (this.autoPlace) {\n        autoPlaceContainer.removeChild(this.domElement);\n      }\n\n      const _this = this;\n      common.each(this.__folders, function(subfolder) {\n        _this.removeFolder(subfolder);\n      });\n\n      dom.unbind(window, 'keydown', GUI._keydownHandler, false);\n\n      removeListeners(this);\n    },\n\n    /**\n     * Creates a new subfolder GUI instance.\n     * @param name\n     * @returns {dat.gui.GUI} The new folder.\n     * @throws {Error} if this GUI already has a folder by the specified\n     * name\n     * @instance\n     */\n    addFolder: function(name) {\n      // We have to prevent collisions on names in order to have a key\n      // by which to remember saved values\n      if (this.__folders[name] !== undefined) {\n        throw new Error('You already have a folder in this GUI by the' +\n          ' name \"' + name + '\"');\n      }\n\n      const newGuiParams = { name: name, parent: this };\n\n      // We need to pass down the autoPlace trait so that we can\n      // attach event listeners to open/close folder actions to\n      // ensure that a scrollbar appears if the window is too short.\n      newGuiParams.autoPlace = this.autoPlace;\n\n      // Do we have saved appearance data for this folder?\n      if (this.load && // Anything loaded?\n        this.load.folders && // Was my parent a dead-end?\n        this.load.folders[name]) { // Did daddy remember me?\n        // Start me closed if I was closed\n        newGuiParams.closed = this.load.folders[name].closed;\n\n        // Pass down the loaded data\n        newGuiParams.load = this.load.folders[name];\n      }\n\n      const gui = new GUI(newGuiParams);\n      this.__folders[name] = gui;\n\n      const li = addRow(this, gui.domElement);\n      dom.addClass(li, 'folder');\n      return gui;\n    },\n\n    /**\n     * Removes a subfolder GUI instance.\n     * @param {dat.gui.GUI} folder The folder to remove.\n     * @instance\n     */\n    removeFolder: function(folder) {\n      this.__ul.removeChild(folder.domElement.parentElement);\n\n      delete this.__folders[folder.name];\n\n      // Do we have saved appearance data for this folder?\n      if (this.load && // Anything loaded?\n        this.load.folders && // Was my parent a dead-end?\n        this.load.folders[folder.name]) {\n        delete this.load.folders[folder.name];\n      }\n\n      removeListeners(folder);\n\n      const _this = this;\n\n      common.each(folder.__folders, function(subfolder) {\n        folder.removeFolder(subfolder);\n      });\n\n      common.defer(function() {\n        _this.onResize();\n      });\n    },\n\n    /**\n     * Opens the GUI.\n     */\n    open: function() {\n      this.closed = false;\n    },\n\n    /**\n     * Closes the GUI.\n     */\n    close: function() {\n      this.closed = true;\n    },\n\n    /**\n    * Hides the GUI.\n    */\n    hide: function() {\n      this.domElement.style.display = 'none';\n    },\n\n    /**\n    * Shows the GUI.\n    */\n    show: function() {\n      this.domElement.style.display = '';\n    },\n\n\n    onResize: function() {\n      // we debounce this function to prevent performance issues when rotating on tablet/mobile\n      const root = this.getRoot();\n      if (root.scrollable) {\n        const top = dom.getOffset(root.__ul).top;\n        let h = 0;\n\n        common.each(root.__ul.childNodes, function(node) {\n          if (!(root.autoPlace && node === root.__save_row)) {\n            h += dom.getHeight(node);\n          }\n        });\n\n        if (window.innerHeight - top - CLOSE_BUTTON_HEIGHT < h) {\n          dom.addClass(root.domElement, GUI.CLASS_TOO_TALL);\n          root.__ul.style.height = window.innerHeight - top - CLOSE_BUTTON_HEIGHT + 'px';\n        } else {\n          dom.removeClass(root.domElement, GUI.CLASS_TOO_TALL);\n          root.__ul.style.height = 'auto';\n        }\n      }\n\n      if (root.__resize_handle) {\n        common.defer(function() {\n          root.__resize_handle.style.height = root.__ul.offsetHeight + 'px';\n        });\n      }\n\n      if (root.__closeButton) {\n        root.__closeButton.style.width = root.width + 'px';\n      }\n    },\n\n    onResizeDebounced: common.debounce(function() { this.onResize(); }, 50),\n\n    /**\n     * Mark objects for saving. The order of these objects cannot change as\n     * the GUI grows. When remembering new objects, append them to the end\n     * of the list.\n     *\n     * @param {...Object} objects\n     * @throws {Error} if not called on a top level GUI.\n     * @instance\n     * @ignore\n     */\n    remember: function() {\n      if (common.isUndefined(SAVE_DIALOGUE)) {\n        SAVE_DIALOGUE = new CenteredDiv();\n        SAVE_DIALOGUE.domElement.innerHTML = saveDialogueContents;\n      }\n\n      if (this.parent) {\n        throw new Error('You can only call remember on a top level GUI.');\n      }\n\n      const _this = this;\n\n      common.each(Array.prototype.slice.call(arguments), function(object) {\n        if (_this.__rememberedObjects.length === 0) {\n          addSaveMenu(_this);\n        }\n        if (_this.__rememberedObjects.indexOf(object) === -1) {\n          _this.__rememberedObjects.push(object);\n        }\n      });\n\n      if (this.autoPlace) {\n        // Set save row width\n        setWidth(this, this.width);\n      }\n    },\n\n    /**\n     * @returns {dat.gui.GUI} the topmost parent GUI of a nested GUI.\n     * @instance\n     */\n    getRoot: function() {\n      let gui = this;\n      while (gui.parent) {\n        gui = gui.parent;\n      }\n      return gui;\n    },\n\n    /**\n     * @returns {Object} a JSON object representing the current state of\n     * this GUI as well as its remembered properties.\n     * @instance\n     */\n    getSaveObject: function() {\n      const toReturn = this.load;\n      toReturn.closed = this.closed;\n\n      // Am I remembering any values?\n      if (this.__rememberedObjects.length > 0) {\n        toReturn.preset = this.preset;\n\n        if (!toReturn.remembered) {\n          toReturn.remembered = {};\n        }\n\n        toReturn.remembered[this.preset] = getCurrentPreset(this);\n      }\n\n      toReturn.folders = {};\n      common.each(this.__folders, function(element, key) {\n        toReturn.folders[key] = element.getSaveObject();\n      });\n\n      return toReturn;\n    },\n\n    save: function() {\n      if (!this.load.remembered) {\n        this.load.remembered = {};\n      }\n\n      this.load.remembered[this.preset] = getCurrentPreset(this);\n      markPresetModified(this, false);\n      this.saveToLocalStorageIfPossible();\n    },\n\n    saveAs: function(presetName) {\n      if (!this.load.remembered) {\n        // Retain default values upon first save\n        this.load.remembered = {};\n        this.load.remembered[DEFAULT_DEFAULT_PRESET_NAME] = getCurrentPreset(this, true);\n      }\n\n      this.load.remembered[presetName] = getCurrentPreset(this);\n      this.preset = presetName;\n      addPresetOption(this, presetName, true);\n      this.saveToLocalStorageIfPossible();\n    },\n\n    revert: function(gui) {\n      common.each(this.__controllers, function(controller) {\n        // Make revert work on Default.\n        if (!this.getRoot().load.remembered) {\n          controller.setValue(controller.initialValue);\n        } else {\n          recallSavedValue(gui || this.getRoot(), controller);\n        }\n\n        // fire onFinishChange callback\n        if (controller.__onFinishChange) {\n          controller.__onFinishChange.call(controller, controller.getValue());\n        }\n      }, this);\n\n      common.each(this.__folders, function(folder) {\n        folder.revert(folder);\n      });\n\n      if (!gui) {\n        markPresetModified(this.getRoot(), false);\n      }\n    },\n\n    listen: function(controller) {\n      const init = this.__listening.length === 0;\n      this.__listening.push(controller);\n      if (init) {\n        updateDisplays(this.__listening);\n      }\n    },\n\n    updateDisplay: function() {\n      common.each(this.__controllers, function(controller) {\n        controller.updateDisplay();\n      });\n      common.each(this.__folders, function(folder) {\n        folder.updateDisplay();\n      });\n    }\n  }\n);\n\n/**\n * Add a row to the end of the GUI or before another row.\n *\n * @param gui\n * @param [newDom] If specified, inserts the dom content in the new row\n * @param [liBefore] If specified, places the new row before another row\n *\n * @ignore\n */\nfunction addRow(gui, newDom, liBefore) {\n  const li = document.createElement('li');\n  if (newDom) {\n    li.appendChild(newDom);\n  }\n\n  if (liBefore) {\n    gui.__ul.insertBefore(li, liBefore);\n  } else {\n    gui.__ul.appendChild(li);\n  }\n  gui.onResize();\n  return li;\n}\n\nfunction removeListeners(gui) {\n  dom.unbind(window, 'resize', gui.__resizeHandler);\n\n  if (gui.saveToLocalStorageIfPossible) {\n    dom.unbind(window, 'unload', gui.saveToLocalStorageIfPossible);\n  }\n}\n\nfunction markPresetModified(gui, modified) {\n  const opt = gui.__preset_select[gui.__preset_select.selectedIndex];\n\n  if (modified) {\n    opt.innerHTML = opt.value + '*';\n  } else {\n    opt.innerHTML = opt.value;\n  }\n}\n\nfunction augmentController(gui, li, controller) {\n  controller.__li = li;\n  controller.__gui = gui;\n\n  common.extend(controller, /** @lends Controller.prototype */ {\n    /**\n     * @param  {Array|Object} options\n     * @return {Controller}\n     */\n    options: function(options) {\n      if (arguments.length > 1) {\n        const nextSibling = controller.__li.nextElementSibling;\n        controller.remove();\n\n        return add(\n          gui,\n          controller.object,\n          controller.property,\n          {\n            before: nextSibling,\n            factoryArgs: [common.toArray(arguments)]\n          }\n        );\n      }\n\n      if (common.isArray(options) || common.isObject(options)) {\n        const nextSibling = controller.__li.nextElementSibling;\n        controller.remove();\n\n        return add(\n          gui,\n          controller.object,\n          controller.property,\n          {\n            before: nextSibling,\n            factoryArgs: [options]\n          }\n        );\n      }\n    },\n\n    /**\n     * Sets the name of the controller.\n     * @param  {string} name\n     * @return {Controller}\n     */\n    name: function(name) {\n      controller.__li.firstElementChild.firstElementChild.innerHTML = name;\n      return controller;\n    },\n\n    /**\n     * Sets controller to listen for changes on its underlying object.\n     * @return {Controller}\n     */\n    listen: function() {\n      controller.__gui.listen(controller);\n      return controller;\n    },\n\n    /**\n     * Removes the controller from its parent GUI.\n     * @return {Controller}\n     */\n    remove: function() {\n      controller.__gui.remove(controller);\n      return controller;\n    }\n  });\n\n  // All sliders should be accompanied by a box.\n  if (controller instanceof NumberControllerSlider) {\n    const box = new NumberControllerBox(controller.object, controller.property,\n      { min: controller.__min, max: controller.__max, step: controller.__step });\n\n    common.each(['updateDisplay', 'onChange', 'onFinishChange', 'step', 'min', 'max'], function(method) {\n      const pc = controller[method];\n      const pb = box[method];\n      controller[method] = box[method] = function() {\n        const args = Array.prototype.slice.call(arguments);\n        pb.apply(box, args);\n        return pc.apply(controller, args);\n      };\n    });\n\n    dom.addClass(li, 'has-slider');\n    controller.domElement.insertBefore(box.domElement, controller.domElement.firstElementChild);\n  } else if (controller instanceof NumberControllerBox) {\n    const r = function(returned) {\n      // Have we defined both boundaries?\n      if (common.isNumber(controller.__min) && common.isNumber(controller.__max)) {\n        // Well, then lets just replace this with a slider.\n\n        // lets remember if the old controller had a specific name or was listening\n        const oldName = controller.__li.firstElementChild.firstElementChild.innerHTML;\n        const wasListening = controller.__gui.__listening.indexOf(controller) > -1;\n\n        controller.remove();\n        const newController = add(\n          gui,\n          controller.object,\n          controller.property,\n          {\n            before: controller.__li.nextElementSibling,\n            factoryArgs: [controller.__min, controller.__max, controller.__step]\n          }\n        );\n\n        newController.name(oldName);\n        if (wasListening) newController.listen();\n\n        return newController;\n      }\n\n      return returned;\n    };\n\n    controller.min = common.compose(r, controller.min);\n    controller.max = common.compose(r, controller.max);\n  } else if (controller instanceof BooleanController) {\n    dom.bind(li, 'click', function() {\n      dom.fakeEvent(controller.__checkbox, 'click');\n    });\n\n    dom.bind(controller.__checkbox, 'click', function(e) {\n      e.stopPropagation(); // Prevents double-toggle\n    });\n  } else if (controller instanceof FunctionController) {\n    dom.bind(li, 'click', function() {\n      dom.fakeEvent(controller.__button, 'click');\n    });\n\n    dom.bind(li, 'mouseover', function() {\n      dom.addClass(controller.__button, 'hover');\n    });\n\n    dom.bind(li, 'mouseout', function() {\n      dom.removeClass(controller.__button, 'hover');\n    });\n  } else if (controller instanceof ColorController) {\n    dom.addClass(li, 'color');\n    controller.updateDisplay = common.compose(function(val) {\n      li.style.borderLeftColor = controller.__color.toString();\n      return val;\n    }, controller.updateDisplay);\n\n    controller.updateDisplay();\n  }\n\n  controller.setValue = common.compose(function(val) {\n    if (gui.getRoot().__preset_select && controller.isModified()) {\n      markPresetModified(gui.getRoot(), true);\n    }\n\n    return val;\n  }, controller.setValue);\n}\n\nfunction recallSavedValue(gui, controller) {\n  // Find the topmost GUI, that's where remembered objects live.\n  const root = gui.getRoot();\n\n  // Does the object we're controlling match anything we've been told to\n  // remember?\n  const matchedIndex = root.__rememberedObjects.indexOf(controller.object);\n\n  // Why yes, it does!\n  if (matchedIndex !== -1) {\n    // Let me fetch a map of controllers for thcommon.isObject.\n    let controllerMap = root.__rememberedObjectIndecesToControllers[matchedIndex];\n\n    // Ohp, I believe this is the first controller we've created for this\n    // object. Lets make the map fresh.\n    if (controllerMap === undefined) {\n      controllerMap = {};\n      root.__rememberedObjectIndecesToControllers[matchedIndex] =\n        controllerMap;\n    }\n\n    // Keep track of this controller\n    controllerMap[controller.property] = controller;\n\n    // Okay, now have we saved any values for this controller?\n    if (root.load && root.load.remembered) {\n      const presetMap = root.load.remembered;\n\n      // Which preset are we trying to load?\n      let preset;\n\n      if (presetMap[gui.preset]) {\n        preset = presetMap[gui.preset];\n      } else if (presetMap[DEFAULT_DEFAULT_PRESET_NAME]) {\n        // Uhh, you can have the default instead?\n        preset = presetMap[DEFAULT_DEFAULT_PRESET_NAME];\n      } else {\n        // Nada.\n        return;\n      }\n\n      // Did the loaded object remember thcommon.isObject? &&  Did we remember this particular property?\n      if (preset[matchedIndex] && preset[matchedIndex][controller.property] !== undefined) {\n        // We did remember something for this guy ...\n        const value = preset[matchedIndex][controller.property];\n\n        // And that's what it is.\n        controller.initialValue = value;\n        controller.setValue(value);\n      }\n    }\n  }\n}\n\nfunction add(gui, object, property, params) {\n  if (object[property] === undefined) {\n    throw new Error(`Object \"${object}\" has no property \"${property}\"`);\n  }\n\n  let controller;\n\n  if (params.color) {\n    controller = new ColorController(object, property);\n  } else {\n    const factoryArgs = [object, property].concat(params.factoryArgs);\n    controller = ControllerFactory.apply(gui, factoryArgs);\n  }\n\n  if (params.before instanceof Controller) {\n    params.before = params.before.__li;\n  }\n\n  recallSavedValue(gui, controller);\n\n  dom.addClass(controller.domElement, 'c');\n\n  const name = document.createElement('span');\n  dom.addClass(name, 'property-name');\n  name.innerHTML = controller.property;\n\n  const container = document.createElement('div');\n  container.appendChild(name);\n  container.appendChild(controller.domElement);\n\n  const li = addRow(gui, container, params.before);\n\n  dom.addClass(li, GUI.CLASS_CONTROLLER_ROW);\n  if (controller instanceof ColorController) {\n    dom.addClass(li, 'color');\n  } else {\n    dom.addClass(li, typeof controller.getValue());\n  }\n\n  augmentController(gui, li, controller);\n\n  gui.__controllers.push(controller);\n\n  return controller;\n}\n\nfunction getLocalStorageHash(gui, key) {\n  // TODO how does this deal with multiple GUI's?\n  return document.location.href + '.' + key;\n}\n\nfunction addPresetOption(gui, name, setSelected) {\n  const opt = document.createElement('option');\n  opt.innerHTML = name;\n  opt.value = name;\n  gui.__preset_select.appendChild(opt);\n  if (setSelected) {\n    gui.__preset_select.selectedIndex = gui.__preset_select.length - 1;\n  }\n}\n\nfunction showHideExplain(gui, explain) {\n  explain.style.display = gui.useLocalStorage ? 'block' : 'none';\n}\n\nfunction addSaveMenu(gui) {\n  const div = gui.__save_row = document.createElement('li');\n\n  dom.addClass(gui.domElement, 'has-save');\n\n  gui.__ul.insertBefore(div, gui.__ul.firstChild);\n\n  dom.addClass(div, 'save-row');\n\n  const gears = document.createElement('span');\n  gears.innerHTML = '&nbsp;';\n  dom.addClass(gears, 'button gears');\n\n  // TODO replace with FunctionController\n  const button = document.createElement('span');\n  button.innerHTML = 'Save';\n  dom.addClass(button, 'button');\n  dom.addClass(button, 'save');\n\n  const button2 = document.createElement('span');\n  button2.innerHTML = 'New';\n  dom.addClass(button2, 'button');\n  dom.addClass(button2, 'save-as');\n\n  const button3 = document.createElement('span');\n  button3.innerHTML = 'Revert';\n  dom.addClass(button3, 'button');\n  dom.addClass(button3, 'revert');\n\n  const select = gui.__preset_select = document.createElement('select');\n\n  if (gui.load && gui.load.remembered) {\n    common.each(gui.load.remembered, function(value, key) {\n      addPresetOption(gui, key, key === gui.preset);\n    });\n  } else {\n    addPresetOption(gui, DEFAULT_DEFAULT_PRESET_NAME, false);\n  }\n\n  dom.bind(select, 'change', function() {\n    for (let index = 0; index < gui.__preset_select.length; index++) {\n      gui.__preset_select[index].innerHTML = gui.__preset_select[index].value;\n    }\n\n    gui.preset = this.value;\n  });\n\n  div.appendChild(select);\n  div.appendChild(gears);\n  div.appendChild(button);\n  div.appendChild(button2);\n  div.appendChild(button3);\n\n  if (SUPPORTS_LOCAL_STORAGE) {\n    const explain = document.getElementById('dg-local-explain');\n    const localStorageCheckBox = document.getElementById('dg-local-storage');\n    const saveLocally = document.getElementById('dg-save-locally');\n\n    saveLocally.style.display = 'block';\n\n    if (localStorage.getItem(getLocalStorageHash(gui, 'isLocal')) === 'true') {\n      localStorageCheckBox.setAttribute('checked', 'checked');\n    }\n\n    showHideExplain(gui, explain);\n\n    // TODO: Use a boolean controller, fool!\n    dom.bind(localStorageCheckBox, 'change', function() {\n      gui.useLocalStorage = !gui.useLocalStorage;\n      showHideExplain(gui, explain);\n    });\n  }\n\n  const newConstructorTextArea = document.getElementById('dg-new-constructor');\n\n  dom.bind(newConstructorTextArea, 'keydown', function(e) {\n    if (e.metaKey && (e.which === 67 || e.keyCode === 67)) {\n      SAVE_DIALOGUE.hide();\n    }\n  });\n\n  dom.bind(gears, 'click', function() {\n    newConstructorTextArea.innerHTML = JSON.stringify(gui.getSaveObject(), undefined, 2);\n    SAVE_DIALOGUE.show();\n    newConstructorTextArea.focus();\n    newConstructorTextArea.select();\n  });\n\n  dom.bind(button, 'click', function() {\n    gui.save();\n  });\n\n  dom.bind(button2, 'click', function() {\n    const presetName = prompt('Enter a new preset name.');\n    if (presetName) {\n      gui.saveAs(presetName);\n    }\n  });\n\n  dom.bind(button3, 'click', function() {\n    gui.revert();\n  });\n\n  // div.appendChild(button2);\n}\n\nfunction addResizeHandle(gui) {\n  let pmouseX;\n\n  gui.__resize_handle = document.createElement('div');\n\n  common.extend(gui.__resize_handle.style, {\n\n    width: '6px',\n    marginLeft: '-3px',\n    height: '200px',\n    cursor: 'ew-resize',\n    position: 'absolute'\n    // border: '1px solid blue'\n\n  });\n\n  function drag(e) {\n    e.preventDefault();\n\n    gui.width += pmouseX - e.clientX;\n    gui.onResize();\n    pmouseX = e.clientX;\n\n    return false;\n  }\n\n  function dragStop() {\n    dom.removeClass(gui.__closeButton, GUI.CLASS_DRAG);\n    dom.unbind(window, 'mousemove', drag);\n    dom.unbind(window, 'mouseup', dragStop);\n  }\n\n  function dragStart(e) {\n    e.preventDefault();\n\n    pmouseX = e.clientX;\n\n    dom.addClass(gui.__closeButton, GUI.CLASS_DRAG);\n    dom.bind(window, 'mousemove', drag);\n    dom.bind(window, 'mouseup', dragStop);\n\n    return false;\n  }\n\n  dom.bind(gui.__resize_handle, 'mousedown', dragStart);\n  dom.bind(gui.__closeButton, 'mousedown', dragStart);\n\n  gui.domElement.insertBefore(gui.__resize_handle, gui.domElement.firstElementChild);\n}\n\nfunction setWidth(gui, w) {\n  gui.domElement.style.width = w + 'px';\n  // Auto placed save-rows are position fixed, so we have to\n  // set the width manually if we want it to bleed to the edge\n  if (gui.__save_row && gui.autoPlace) {\n    gui.__save_row.style.width = w + 'px';\n  }\n  if (gui.__closeButton) {\n    gui.__closeButton.style.width = w + 'px';\n  }\n}\n\nfunction getCurrentPreset(gui, useInitialValues) {\n  const toReturn = {};\n\n  // For each object I'm remembering\n  common.each(gui.__rememberedObjects, function(val, index) {\n    const savedValues = {};\n\n    // The controllers I've made for thcommon.isObject by property\n    const controllerMap =\n      gui.__rememberedObjectIndecesToControllers[index];\n\n    // Remember each value for each property\n    common.each(controllerMap, function(controller, property) {\n      savedValues[property] = useInitialValues ? controller.initialValue : controller.getValue();\n    });\n\n    // Save the values for thcommon.isObject\n    toReturn[index] = savedValues;\n  });\n\n  return toReturn;\n}\n\nfunction setPresetSelectIndex(gui) {\n  for (let index = 0; index < gui.__preset_select.length; index++) {\n    if (gui.__preset_select[index].value === gui.preset) {\n      gui.__preset_select.selectedIndex = index;\n    }\n  }\n}\n\nfunction updateDisplays(controllerArray) {\n  if (controllerArray.length !== 0) {\n    requestAnimationFrame.call(window, function() {\n      updateDisplays(controllerArray);\n    });\n  }\n\n  common.each(controllerArray, function(c) {\n    c.updateDisplay();\n  });\n}\n\nexport default GUI;\n","/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Color from './color/Color';\nimport math from './color/math';\nimport interpret from './color/interpret';\n\nimport Controller from './controllers/Controller';\nimport BooleanController from './controllers/BooleanController';\nimport OptionController from './controllers/OptionController';\nimport StringController from './controllers/StringController';\nimport NumberController from './controllers/NumberController';\nimport NumberControllerBox from './controllers/NumberControllerBox';\nimport NumberControllerSlider from './controllers/NumberControllerSlider';\nimport FunctionController from './controllers/FunctionController';\nimport ColorController from './controllers/ColorController';\n\nimport domImport from './dom/dom';\nimport GUIImport from './gui/GUI';\n\nexport const color = {\n  Color: Color,\n  math: math,\n  interpret: interpret\n};\n\nexport const controllers = {\n  Controller: Controller,\n  BooleanController: BooleanController,\n  OptionController: OptionController,\n  StringController: StringController,\n  NumberController: NumberController,\n  NumberControllerBox: NumberControllerBox,\n  NumberControllerSlider: NumberControllerSlider,\n  FunctionController: FunctionController,\n  ColorController: ColorController\n};\n\nexport const dom = { dom: domImport };\n\nexport const gui = { GUI: GUIImport };\n\nexport const GUI = GUIImport;\n\nexport default {\n  color,\n  controllers,\n  dom,\n  gui,\n  GUI\n};\n","import * as THREE from \"three\"\r\n// target：点光源\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\r\nimport * as dat from \"dat.gui\";\r\nconst gui = new dat.GUI();\r\nconst AxesHelper = new THREE.AxesHelper(5)\r\n// 创建场景\r\nconst scene = new THREE.Scene()\r\n// 创建相机\r\nconst camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.01, 1000)\r\ncamera.position.set(0, 0, 5)\r\nscene.add(camera)\r\n// 初始化渲染器\r\nconst renderer = new THREE.WebGLRenderer()\r\n// 设置渲染器范围\r\nrenderer.setSize(window.innerWidth, window.innerHeight)\r\n// 开启场景中的阴影贴图\r\nrenderer.shadowMap.enabled = true;\r\nrenderer.physicallyCorrentLights = true;\r\n// 渲染器添加到body上\r\ndocument.body.append(renderer.domElement)\r\n// 坐标轴线添加到场景中\r\nscene.add(AxesHelper)\r\nconst controls = new OrbitControls(camera, renderer.domElement)\r\n// controls.update()\r\nlet clock = new THREE.Clock()\r\n// 根据type区分实体 相机 坐标轴\r\nfunction animate() {\r\n  let t = clock.getElapsedTime()\r\n  renderer.render(scene, camera)\r\n  requestAnimationFrame(animate)\r\n}\r\nanimate()\r\n// 创建一个球\r\nconst sphereGeometry = new THREE.SphereGeometry(1, 20, 20);\r\nconst material = new THREE.MeshStandardMaterial({\r\n  // metalness: 0.7,\r\n  // roughness: 0.1,\r\n  // envMap: envMapTexture,\r\n});\r\nconst sphere = new THREE.Mesh(sphereGeometry, material);\r\n// 投射阴影\r\nsphere.castShadow = true\r\nscene.add(sphere);\r\nconst smallBall = new THREE.Mesh(new THREE.SphereGeometry(0.1, 20, 20), new THREE.MeshBasicMaterial({ color: 0Xff0000 }))\r\nsmallBall.position.set(6, 2, 2)\r\nscene.add(smallBall)\r\n// 创建一个平面\r\nconst geometry = new THREE.PlaneGeometry(50, 50);\r\nconst plane = new THREE.Mesh(geometry, material);\r\nplane.position.set(0, -1, 0)\r\nplane.rotation.x = -Math.PI / 2\r\n// 接收阴影\r\nplane.receiveShadow = true\r\nscene.add(plane)\r\n// 灯光\r\n// 环境光\r\nconst light = new THREE.AmbientLight(0xffffff, 1);\r\nscene.add(light);\r\n// 聚光源\r\nconst pointLight = new THREE.PointLight(0xffffff, 2);\r\npointLight.position.set(5, 5, 5);\r\n// pointLight.intensity = 2;\r\n// 设置直线光源产生阴影\r\npointLight.castShadow = true;\r\n//设置阴影贴图模糊度\r\npointLight.shadow.radius = 20;\r\n//设置阴影贴图的分辨率(让它变得更加细致)\r\npointLight.shadow.mapSize.set(4096, 4096);\r\n//设置打在小球上\r\npointLight.target = sphere;\r\n//聚光灯的衰减\r\npointLight.distance = 0;\r\n//聚光灯 沿着光照距离的衰减\r\npointLight.decay = 0;\r\nscene.add(pointLight);\r\ngui.add(sphere.position, \"x\").min(-5).max(5).step(0.1)\r\ngui.add(pointLight, 'distance').min(0).max(20).step(0.1)\r\ngui.add(pointLight, 'decay').min(0).max(1).step(0.1)"]}